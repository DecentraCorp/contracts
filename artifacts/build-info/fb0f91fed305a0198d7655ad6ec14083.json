{
  "id": "fb0f91fed305a0198d7655ad6ec14083",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.0",
  "solcLongVersion": "0.8.0+commit.c7dfd78e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/DecentraCore.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./interfaces/IDecentraDollar.sol\";\nimport \"./interfaces/IDecentraStock.sol\";\nimport \"./interfaces/IDScore.sol\";\nimport \"./interfaces/IDecentraCore.sol\";\n\n////////////////////////////////////////////////////////////////////////////////////////////\n/// @title DecentraCore\n/// @author Christopher Dixon\n////////////////////////////////////////////////////////////////////////////////////////////\n\ncontract DecentraCore is Ownable, IDecentraCore {\n    using SafeMath for uint256;\n    /// @notice proposalID is used to track proposals\n    uint256 public proposalID;\n    /// @notice proposalTime is the time in seconds a proposal is considered active\n    uint256 public proposalTime;\n    /// @notice quorum is the minimum percentage of voteWeight needed for a vote to pass\n    uint256 public quorum;\n    /// @notice dd is the DecentraDollar contract\n    IDecentraDollar public dd;\n    /// @notice ds is the DecentraStock contract\n    IDecentraStock public ds;\n    /// @notice dScore is the D-Score contract\n    IDScore public dScore;\n\n    /// @notice frozenAccounts is a mapping of which accounts are frozen\n    mapping(address => bool) public frozenAccounts;\n\n    /// @notice freezeFrame is a mapping of an accounts frozen time\n    mapping(address => uint256) public freezeFrame;\n\n    /// @notice Proposal stores proposals\n    mapping(uint256 => Proposal) public proposals;\n\n    /**\n    @notice minters is a mapping of DecentraCorp contracts\n                that gives them elevated minting privledges\n    */\n    mapping(address => bool) public minters;\n\n    /**\n    @notice burners is a mapping of DecentraCorp contracts\n                that gives them elevated burning privledges\n    */\n    mapping(address => bool) public burners;\n\n    /**\n    @notice dScoreMod is a mapping of official DecentraCorp contracts\n                that gives them elevated dScore modification privledges\n    */\n    mapping(address => bool) public override dScoreMod;\n\n    /**\n    @notice delegators is a mapping of official DecentraCorp contracts\n                that gives them elevated delegator privledges\n    */\n    mapping(address => bool) public delegators;\n\n    /**\n    @notice Proposal struct stores proposal information\n    @param maker is the address of the account that made the proposal\n    @param target is the address that the call_data will be passed to as a function call\n    @param timeCreated is a blockstamp of when a proposal was created\n    @param voteWeights stores the current weight of all votes for a proposal\n    @param amount is used to store an ETH amount to be passed along with a function call\n    @param executed is a bool representing whether or not a proposal has been executed\n    @param proposalHash is an IPFS hash for a file representing a proposal\n    @param call_data is a bytes representing a function call on the target contract\n    @param votes is an array of Vote structs representing a users vote\n    @param voted is a mapping that represents whether or not an account has voted\n    **/\n    struct Proposal {\n        address maker;\n        address payable target;\n        uint256 timeCreated;\n        uint256 voteWeights;\n        uint256 voteID;\n        uint256 amount;\n        bool executed;\n        bool proposalPassed;\n        string proposalHash;\n        bytes call_data;\n        mapping(uint256 => Vote) votes;\n        mapping(address => bool) voted;\n    }\n\n    /**\n    @notice Vote is a struct used to store the information of a specific vote\n    @param inSupport is a bool representing whether a vote supports a proposal or not\n    @param voter is the address of the account that voted\n    @param voteWeight is the weight of the account who voted based off the # of rep tokens it holds\n    **/\n    struct Vote {\n        bool inSupport;\n        address voter;\n        uint256 voteWeight;\n    }\n\n    /**\n    @notice the modifier onlyMint requires that the function caller must be a approved minter\n    **/\n    modifier onlyMint() {\n        require(minters[msg.sender], \"DecentraCore: Caller is not a minter\");\n        _;\n    }\n    /**\n    @notice the modifier onlyBurn requires that the function caller must be a approved burner\n    **/\n    modifier onlyBurn() {\n        require(burners[msg.sender], \"DecentraCore: Caller is not a burner\");\n        _;\n    }\n\n    /**\n    @notice the modifier onlyMember requires that the function caller must be a member\n    **/\n    modifier onlyMember() {\n        require(\n            dScore.checkStaked(msg.sender),\n            \"DecentraCore: Caller is not an active member\"\n        );\n        _;\n    }\n\n    /**\n    @notice the modifier onlyApprovedDelegator requires that the function caller must be a approved delegator\n    **/\n    modifier onlyApprovedDelegator() {\n        require(\n            delegators[msg.sender],\n            \"DecentraCore: Caller is not a delegator\"\n        );\n        _;\n    }\n\n    constructor(\n        address _dDollar,\n        address _dStock,\n        address _dScore\n    ) {\n        dd = IDecentraDollar(_dDollar);\n        ds = IDecentraStock(_dStock);\n        dScore = IDScore(_dScore);\n    }\n\n    ///fallback function so this contract can receive ETH\n\n    /**\n    @notice delegateFunctionCall allows the DecentraCore contract to make arbitrary calls to other contracts\n    @param _target is the target address where the function will be called\n    @param call_data is a bytes representation of the function the Decentracorp contract is calling and its input paramters\n    **/\n    function delegateFunctionCall(\n        address payable _target,\n        bytes memory call_data\n    ) public override onlyApprovedDelegator {\n        (bool success, bytes memory data) = _target.call(call_data);\n        require(success, \"delegateFunctionCall Failed\");\n        emit FunctionCallDelegated(_target, data);\n    }\n\n    /**\n    @notice transferxDAI is used to easily transfer xDAI from the DecentraCorp contract\n    @param _to is the address tokens are being minted to\n    @param _amount is the amount of tokens being minted\n    @dev this function is intended to be used with the proposal system\n    **/\n    function transferxDAI(address payable _to, uint256 _amount)\n        public\n        override\n        onlyOwner\n    {\n        _to.transfer(_amount);\n    }\n\n    /**\n    @notice newProposaln allows a user to create a proposal\n    @param _target is the address this proposal is targeting\n    @param _amount is a value amount associated with the call\n    @param _proposalHash is an IPFS hash of a file representing a proposal\n    @param _calldata is a bytes representation of a function call\n    **/\n    function newProposal(\n        address payable _target,\n        uint256 _amount,\n        string memory _proposalHash,\n        bytes memory _calldata\n    ) public payable override onlyMember returns (uint256) {\n        proposalID++;\n        Proposal storage p = proposals[proposalID];\n        p.maker = msg.sender;\n        p.target = _target;\n        p.amount = _amount;\n        p.voteWeights = 0;\n        p.voteID = 0;\n        p.amount = 0;\n        p.timeCreated = block.timestamp;\n        p.proposalHash = _proposalHash;\n        p.call_data = _calldata;\n        return proposalID;\n    }\n\n    /**\n    @notice setQuorum allows the owner of the DAO(normally set as the the DAO itself) to change\n            the quorum used in voting\n    @notice _quorum is the input quarum number being set\n    **/\n    function setQuorum(uint256 _quorum) public override onlyOwner {\n        quorum = _quorum;\n    }\n\n    /**\n    @notice percent is an internal function used to calculate the ratio between a given numerator && denominator\n    @param _numerator is the numerator of the equation\n    @param _denominator is the denominator of the equation\n    @param _precision is a precision point to ensure that decimals dont trail outside what the EVM can handle\n    **/\n    function _percent(\n        uint256 _numerator,\n        uint256 _denominator,\n        uint256 _precision\n    ) internal pure returns (uint256 quotient) {\n        // caution, check safe-to-multiply here\n        uint256 numerator = _numerator * 10**(_precision + 1);\n        // with rounding of last digit\n        uint256 _quotient = ((numerator / _denominator) + 5) / 10;\n        return (_quotient);\n    }\n\n    /**\n    @notice _checkThreshold is an internal function used by a vote counts to see if enough of the community has voted\n    @param _numOfvotes is the total  voteWeight a proposal has received\n    @param _numOfTokens is the total supply of the synaps\n    @notice this function returns a bool\n                -true if the threshold is met\n                -false if the threshold is not met\n    **/\n    function _checkThreshold(uint256 _numOfvotes, uint256 _numOfTokens)\n        internal\n        view\n        returns (bool)\n    {\n        uint256 percOfMemVoted = _percent(_numOfvotes, _numOfTokens, 2);\n        if (_numOfvotes == _numOfTokens) {\n            return true;\n        }\n        if (percOfMemVoted >= quorum) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n    @notice the vote function allows a DecentraCorp member to vote on proposals\n    @param _ProposalID is the number ID associated with the particular proposal the user wishes to vote on\n    @param  supportsProposal is a bool value(true or false) representing whether or not a member supports a proposal\n                    -true if they do support the proposal\n                    -false if they do not support the proposal\n    @dev this function will trigger the _checkThreshold function which determines if enough members have voted to\n              fire the executeProposal function.\n    **/\n    function vote(uint256 _ProposalID, bool supportsProposal)\n        public\n        override\n        onlyMember\n    {\n        Proposal storage p = proposals[_ProposalID];\n        require(\n            p.voted[msg.sender] != true,\n            \"You Have already voted on this proposal\"\n        );\n        uint256 vw = dScore.calculateVotingPower(msg.sender);\n\n        p.voteID = p.voteID++;\n        p.votes[p.voteID] = Vote({\n            inSupport: supportsProposal,\n            voter: msg.sender,\n            voteWeight: vw\n        });\n        p.voteWeights = p.voteWeights.add(vw);\n        p.voted[msg.sender] = true;\n        uint256 ts = ds.totalSupply();\n        //checks if enough members have voted\n        bool met = _checkThreshold(p.voteWeights, ts);\n        if (met) {\n            executeProposal(_ProposalID);\n        }\n    }\n\n    /**\n    @notice executeProposal is the function that executes the terms of a proposal\n    @dev this function is called by the vote function when the number of votes reaches the quorum\n    @param _proposalID is the ID number of the proposal being executed.\n    **/\n    function executeProposal(uint256 _proposalID) internal {\n        Proposal storage p = proposals[_proposalID];\n\n        if (block.timestamp.sub(p.timeCreated) >= proposalTime) {\n            // mark the proposal as executed and failed\n            p.executed = true;\n            p.proposalPassed = false;\n        } else {\n            // sets p equal to the specific proposalNumber\n\n            require(!p.executed, \"This proposal has already been executed\");\n\n            uint256 yea = 0;\n            uint256 nay = 0;\n\n            //this for loop cycles through each members vote and adds its value to the yea or nay tally\n            for (uint256 i = 0; i <= p.voteID; ++i) {\n                Vote storage v = p.votes[i];\n\n                if (v.inSupport) {\n                    yea = yea.add(v.voteWeight);\n                } else {\n                    nay = nay.add(v.voteWeight);\n                }\n            }\n\n            //check if the yea votes outway the nay votes\n            if (yea > nay) {\n                delegateFunctionCall(p.target, p.call_data);\n\n                ///mark the proposal as executed and passed\n                p.executed = true;\n                p.proposalPassed = true;\n            } else {\n                // mark the proposal as executed and failed\n                p.executed = true;\n                p.proposalPassed = false;\n            }\n        }\n    }\n\n    /**\n    @notice setApprovedContract is a protected function that allows a successful proposal to grant\n            privledges to DecentraCorp contracts\n    @param _contract is the address of the contract being approved\n    @param _privledge is a number representing which privledge is being set\n    @dev privledges:\n                    1. Minting\n                    2. Burning\n                    3. D-Score\n    */\n    function setApprovedContract(address _contract, uint256 _privledge)\n        external\n        override\n        onlyOwner\n    {\n        require(\n            _privledge > 0 && _privledge < 4,\n            \"DecentraCore: Invalid Input Privledge\"\n        );\n        if (_privledge == 1) {\n            minters[_contract] = true;\n        }\n        if (_privledge == 2) {\n            burners[_contract] = true;\n        }\n        if (_privledge == 3) {\n            dScoreMod[_contract] = true;\n        }\n    }\n\n    /**\n    @notice freezeMember is a protected function used to allow for a DecentraCorp contract to freeze an account\n            in the case of suspected fraud\n    @param _member is the address of the member who is being frozen\n    @dev this function is intended to be called by the audit contracts of phase two and will not play an active role in phase one\n    @dev this function can also be used to un-freeze an account\n    */\n    function freezeMember(address _member) external override onlyOwner {\n        if (frozenAccounts[_member]) {\n            frozenAccounts[_member] = false;\n        } else {\n            frozenAccounts[_member] = true;\n            freezeFrame[_member] = block.timestamp;\n        }\n    }\n\n    /**\n    @notice proxyMintDD is a protected function that allows an approved contract to mint DecentraDollar\n    @param _to is the address the DecentraDollar is being minted to\n    @param _amount is the amount being minted\n    */\n    function proxyMintDD(address _to, uint256 _amount)\n        public\n        override\n        onlyMint\n    {\n        dd.mintDD(_to, _amount);\n    }\n\n    /**\n    @notice proxyMintDS is a protected function that allows an approved contract to issue DecentraStock\n    @param _to is the address the DecentraStock is being issued to\n    @param _amount is the amount being issued\n    */\n    function proxyMintDS(address _to, uint256 _amount)\n        public\n        override\n        onlyMint\n    {\n        ds.issueStock(_to, _amount);\n    }\n\n    /**\n    @notice proxyBurnDD is a protected function that allows an approved contract to burn DecentraDollar\n    @param _from is the address the DecentraDollar is being burned from\n    @param _amount is the amount being burned\n    */\n    function proxyBurnDD(address _from, uint256 _amount)\n        public\n        override\n        onlyBurn\n    {\n        dd.burnDD(_from, _amount);\n    }\n\n    /**\n    @notice proxyBurnDS is a protected function that allows an approved contract to burn DecentraStock\n    @param _from is the address the DecentraStock is being burned from\n    @param _amount is the amount being burned\n    */\n    function proxyBurnDS(address _from, uint256 _amount)\n        public\n        override\n        onlyBurn\n    {\n        ds.burnStock(_from, _amount);\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
      },
      "contracts/interfaces/IDecentraDollar.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IDecentraDollar is IERC20 {\n    event DD_Mined(address _to, uint256 _amount);\n\n    event DD_Burned(address _to, uint256 _amount);\n\n    /**\n  @notice mintDD is a protected function only callable by the DecentraCore contract\n  @param _to is the address the DecentraDollar is being minted to\n  @param _amount is the amount of DecentraDollar being minted\n  */\n    function mintDD(address _to, uint256 _amount) external;\n\n    /**\n   @notice  burnDD is a protected function only callable by the DecentraCore contract\n   @param _from is the address the DecentraDollar is being burned from\n   @param _amount is the amount of DecentraDollar being burned\n   */\n    function burnDD(address _from, uint256 _amount) external;\n}\n"
      },
      "contracts/interfaces/IDecentraStock.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IDecentraStock is IERC20 {\n    event StockIssued(address _to, uint256 _amount);\n\n    /**\n@notice issueStock is a protected function only callable by the DecentraCore contract\n@param _to is the address the DecentraStock is being issued to\n@param _amount is the amount of DecentraStock being issued\n  */\n    function issueStock(address _to, uint256 _amount) external;\n\n    /**\n@notice burnStock is a protected function only callable by the DecentraCore contract\n@param _from is the address the DecentraStock is being burned from\n@param _amount is the amount of DecentraStock being burned \n  */\n    function burnStock(address _from, uint256 _amount) external;\n}\n"
      },
      "contracts/interfaces/IDScore.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IDScore {\n    event MembershipStaked(address member, uint256 amountStaked);\n\n    event DScoreIncreased(\n        address member,\n        uint256 factor,\n        uint256 amountIncreased\n    );\n\n    event DScoreDecreased(\n        address member,\n        uint256 factor,\n        uint256 amountDecreased\n    );\n\n    event Memberfrozen(address member, uint256 timeFrozen);\n\n    /**\n  @notice stakeMembership allows a user to stake DecentraStock in-order to become a Decentracorp member\n  @param _stakeAmount is the amount of DecentraStock being staked on the users membership\n  */\n    function stakeMembership(uint256 _stakeAmount) external;\n\n    /**\n  @notice increaseDScore is a protected function that allows approved DecentraCorp contracts to increase a users D-Score\n  @param _member is the address of the member who's D-Score is being increased\n  @param _factor is the number representing which factor of the users D-Score is being increased\n  @param _amount is the amount the user's D-Score is being increased by\n  @dev D-Score factors are represented by a number within a mapping. The key for this mapping is as follows:\n\n          0 - Level: a members level is determined by the DecentraCorp community as a way of rewarding members for non\n              D-job related tasks such as a technical task, community service, or other work related reward.\n          1 - Jobs: the number of completed jobs done by the member.\n          2 - Votes: the number of DecentraCorp votes the member has participated in.\n          3 - Reputation: the overall average of the rating of each job performed.\n          4 - Staked: the number of DercentraStock a member has staked\n          5 - Verified: number of times this member has been audited by other members\n          6 - Audit: number of other members this account has audited\n\n          @dev some of these factors are increased in ways other than this function such as #2 for votes\n  */\n    function increaseDScore(\n        address _member,\n        uint256 _factor,\n        uint256 _amount\n    ) external;\n\n    /**\n  @notice increaseDScore is a protected function that allows approved DecentraCorp contracts to decrease a users D-Score\n  @param _member is the address of the member who's D-Score is being decrease\n  @param _factor is the number representing which factor of the users D-Score is being decrease\n  @param _amount is the amount the user's D-Score is being decrease by\n  */\n    function decreaseDScore(\n        address _member,\n        uint256 _factor,\n        uint256 _amount\n    ) external;\n\n    /**\n  @notice calculateVotingPower is used to calculate a members current voting power relative to their D-Score\n  @param _member is the address of the member who's voting power is being retreived\n  */\n    function calculateVotingPower(address _member)\n        external\n        view\n        returns (uint256);\n\n    /**\n        @notice checkStaked is a view only function to easily check if an account is a staked member\n        @param _member is the address in question\n        @dev this function returns a bool for \"yes staked\" or \"not staked\". This function does NOT return\n              the amount a member has staked\n        */\n    function checkStaked(address _member) external view returns (bool);\n}\n"
      },
      "contracts/interfaces/IDecentraCore.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IDecentraCore {\n    event NewProposal(\n        uint256 proposalId,\n        uint256 proposalAmount,\n        address target,\n        bytes call_data\n    );\n\n    event NewVote(uint256 proposalId, address voter, bool vote);\n\n    event ProposalApproved(uint256 proposalId, bool success);\n\n    //  event NewApprovedContract(address, contract);\n\n    event FunctionCallDelegated(address target, bytes call_data);\n\n    /**\n  @notice delegateFunctionCall is a protected function that allows the DecentraCorp contract\n  to make arbitrary calls to other contracts\n  @param _target is the address of the target of the call\n  @param call_data is the packaged function call that will be fired if this proposal is successful\n  */\n    function delegateFunctionCall(\n        address payable _target,\n        bytes memory call_data\n    ) external;\n\n    /**\n  @notice transferxDAI is used to easily transfer xDAI from the DecentraCorp contract\n  @param _to is the address tokens are being minted to\n  @param _amount is the amount of tokens being minted\n  @dev this function is intended to be used with the proposal system\n  **/\n    function transferxDAI(address payable _to, uint256 _amount) external;\n\n    /**\n  @notice newProposaln allows a user to create a proposal\n  @param _target is the address this proposal is targeting\n  @param _amount is a value amount associated with the call\n  @param _proposalHash is an IPFS hash of a file representing a proposal\n  @param _calldata is a bytes representation of a function call\n  **/\n    function newProposal(\n        address payable _target,\n        uint256 _amount,\n        string memory _proposalHash,\n        bytes memory _calldata\n    ) external payable returns (uint256);\n\n    /**\n  @notice setQuorum allows the owner of the DAO(normally set as the the DAO itself) to change\n          the quorum used in voting\n  @notice _quorum is the input quarum number being set\n  **/\n    function setQuorum(uint256 _quorum) external;\n\n    /**\n  @notice the vote function allows a DAO member to vote on proposals made to the DAO\n  @param _ProposalID is the number ID associated with the particular proposal the user wishes to vote on\n  @param  supportsProposal is a bool value(true or false) representing whether or not a member supports a proposal\n                  -true if they do support the proposal\n                  -false if they do not support the proposal\n  @dev this function will trigger the _checkThreshold function which determines if enough members have voted to\n            fire the executeProposal function.(this is temporarily removed due to what im assuming are the gas block limit)\n  **/\n    function vote(uint256 _ProposalID, bool supportsProposal) external;\n\n    /**\n  @notice setApprovedContract is a protected function that allows a successful proposal to grant\n          privledges to DecentraCorp contracts\n  @param _contract is the address of the contract being approved\n  @param _privledge is a number representing which privledge is being set\n  @dev privledges:\n                  1. Minting\n                  2. Burning\n                  3. D-Score\n  */\n    function setApprovedContract(address _contract, uint256 _privledge)\n        external;\n\n    /**\n  @notice freezeMember is a protected function used to allow for a DecentraCorp contract to freeze an account\n          in the case of suspected fraud\n  @param _member is the address of the member who is being frozen\n  @dev this function is intended to be called by the audit contracts of phase two and will not play an active role in phase one\n  @dev this function can also be used to un-freeze an account\n  */\n    function freezeMember(address _member) external;\n\n    /**\n  @notice proxyMintDD is a protected function that allows an approved contract to mint DecentraDollar\n  @param _to is the address the DecentraDollar is being minted to\n  @param _amount is the amount being minted\n  */\n    function proxyMintDD(address _to, uint256 _amount) external;\n\n    /**\n  @notice proxyMintDS is a protected function that allows an approved contract to issue DecentraStock\n  @param _to is the address the DecentraStock is being issued to\n  @param _amount is the amount being issued\n  */\n    function proxyMintDS(address _to, uint256 _amount) external;\n\n    /**\n  @notice proxyBurnDD is a protected function that allows an approved contract to burn DecentraDollar\n  @param _from is the address the DecentraDollar is being burned from\n  @param _amount is the amount being burned\n  */\n    function proxyBurnDD(address _from, uint256 _amount) external;\n\n    /**\n  @notice proxyBurnDS is a protected function that allows an approved contract to burn DecentraStock\n  @param _from is the address the DecentraStock is being burned from\n  @param _amount is the amount being burned\n  */\n    function proxyBurnDS(address _from, uint256 _amount) external;\n\n    function dScoreMod(address _add) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012498d7522af26ead39efb5e01f503bc0c33fd52a7b02cb0ac00d0eada056f9564736f6c63430008000033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x49 DUP14 PUSH22 0x22AF26EAD39EFB5E01F503BC0C33FD52A7B02CB0AC00 0xD0 0xEA 0xDA SDIV PUSH16 0x9564736F6C6343000800003300000000 ",
              "sourceMap": "398:6434:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012498d7522af26ead39efb5e01f503bc0c33fd52a7b02cb0ac00d0eada056f9564736f6c63430008000033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x49 DUP14 PUSH22 0x22AF26EAD39EFB5E01F503BC0C33FD52A7B02CB0AC00 0xD0 0xEA 0xDA SDIV PUSH16 0x9564736F6C6343000800003300000000 ",
              "sourceMap": "398:6434:3:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/DecentraCore.sol": {
        "DecentraCore": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dDollar",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_dStock",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_dScore",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "call_data",
                  "type": "bytes"
                }
              ],
              "name": "FunctionCallDelegated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "call_data",
                  "type": "bytes"
                }
              ],
              "name": "NewProposal",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "vote",
                  "type": "bool"
                }
              ],
              "name": "NewVote",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "name": "ProposalApproved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "burners",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dScore",
              "outputs": [
                {
                  "internalType": "contract IDScore",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "dScoreMod",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dd",
              "outputs": [
                {
                  "internalType": "contract IDecentraDollar",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "call_data",
                  "type": "bytes"
                }
              ],
              "name": "delegateFunctionCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "delegators",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ds",
              "outputs": [
                {
                  "internalType": "contract IDecentraStock",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "freezeFrame",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_member",
                  "type": "address"
                }
              ],
              "name": "freezeMember",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "frozenAccounts",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "minters",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_proposalHash",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "newProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalID",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proposalTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "proposals",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "maker",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "timeCreated",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "voteWeights",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "voteID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "executed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "proposalPassed",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "proposalHash",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "call_data",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyBurnDD",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyBurnDS",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyMintDD",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyMintDS",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "quorum",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_privledge",
                  "type": "uint256"
                }
              ],
              "name": "setApprovedContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_quorum",
                  "type": "uint256"
                }
              ],
              "name": "setQuorum",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "transferxDAI",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_ProposalID",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "supportsProposal",
                  "type": "bool"
                }
              ],
              "name": "vote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1117:9",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:9",
                            "type": ""
                          }
                        ],
                        "src": "7:143:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "267:485:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "313:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "322:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "325:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "315:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "315:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "315:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "288:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "297:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "284:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "284:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "309:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "280:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "280:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "277:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "339:128:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "354:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "368:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "358:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "383:74:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "429:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "440:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "425:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "425:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "449:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "393:31:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "393:64:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "383:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "477:129:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "492:16:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "506:2:9",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "496:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "522:74:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "568:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "579:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "564:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "564:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "588:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "532:31:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "532:64:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "522:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "616:129:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "631:16:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "645:2:9",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "635:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "661:74:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "707:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "718:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "703:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "703:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "727:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "671:31:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "671:64:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "661:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "221:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "232:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "244:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "252:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "260:6:9",
                            "type": ""
                          }
                        ],
                        "src": "156:596:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "803:51:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "813:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "842:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "824:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "824:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "813:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "785:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "795:7:9",
                            "type": ""
                          }
                        ],
                        "src": "758:96:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "905:81:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "915:65:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "930:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "937:42:9",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "926:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "926:54:9"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "887:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "897:7:9",
                            "type": ""
                          }
                        ],
                        "src": "860:126:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1035:79:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1092:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1101:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1104:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1094:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1094:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1094:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1058:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1083:5:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1065:17:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1065:24:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1055:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1055:35:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1048:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1048:43:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1045:2:9"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1028:5:9",
                            "type": ""
                          }
                        ],
                        "src": "992:122:9"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b5060405162003701380380620037018339818101604052810190620000379190620001d2565b600062000049620001b360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35082600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000276565b600033905090565b600081519050620001cc816200025c565b92915050565b600080600060608486031215620001e857600080fd5b6000620001f886828701620001bb565b93505060206200020b86828701620001bb565b92505060406200021e86828701620001bb565b9150509250925092565b600062000235826200023c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002678162000228565b81146200027357600080fd5b50565b61347b80620002866000396000f3fe60806040526004361061019c5760003560e01c806383ac74f9116100ec578063bd621fa31161008a578063c9d27afe11610064578063c9d27afe146105d4578063d7c93180146105fd578063f2fde38b14610626578063f46eccc41461064f5761019c565b8063bd621fa314610545578063c1ba4e591461056e578063c3396bdc146105975761019c565b80638da5cb5b116100c65780638da5cb5b146104965780639c94f651146104c1578063a120c14f146104ea578063b1050da5146105155761019c565b806383ac74f9146103f3578063860838a51461041c5780638d23fc61146104595761019c565b8063371fa854116101595780636122698f116101335780636122698f1461035f578063715018a61461038a5780637563dd54146103a157806382f4f5b4146103ca5761019c565b8063371fa854146102ce5780633e410717146102f957806351bcc28b146103225761019c565b8063013cf08b146101a157806303d41e0e146101e75780631268b7d2146102245780631703a0181461024d578063184a0ae91461027857806330dce62b146102a3575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c391906125a7565b61068c565b6040516101de9a99989796959493929190612b62565b60405180910390f35b3480156101f357600080fd5b5061020e600480360381019061020991906123f6565b61084a565b60405161021b9190612c35565b60405180910390f35b34801561023057600080fd5b5061024b60048036038101906102469190612542565b61086a565b005b34801561025957600080fd5b50610262610a5f565b60405161026f9190612de1565b60405180910390f35b34801561028457600080fd5b5061028d610a65565b60405161029a9190612de1565b60405180910390f35b3480156102af57600080fd5b506102b8610a6b565b6040516102c59190612c86565b60405180910390f35b3480156102da57600080fd5b506102e3610a91565b6040516102f09190612de1565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b91906123f6565b610a97565b005b34801561032e57600080fd5b50610349600480360381019061034491906123f6565b610c62565b6040516103569190612c35565b60405180910390f35b34801561036b57600080fd5b50610374610c82565b6040516103819190612c50565b60405180910390f35b34801561039657600080fd5b5061039f610ca8565b005b3480156103ad57600080fd5b506103c860048036038101906103c39190612473565b610de2565b005b3480156103d657600080fd5b506103f160048036038101906103ec9190612542565b610ea9565b005b3480156103ff57600080fd5b5061041a60048036038101906104159190612542565b610fc8565b005b34801561042857600080fd5b50610443600480360381019061043e91906123f6565b6110e7565b6040516104509190612c35565b60405180910390f35b34801561046557600080fd5b50610480600480360381019061047b91906123f6565b611107565b60405161048d9190612c35565b60405180910390f35b3480156104a257600080fd5b506104ab611127565b6040516104b89190612b17565b60405180910390f35b3480156104cd57600080fd5b506104e860048036038101906104e39190612542565b611150565b005b3480156104f657600080fd5b506104ff61126f565b60405161050c9190612c6b565b60405180910390f35b61052f600480360381019061052a91906124af565b611295565b60405161053c9190612de1565b60405180910390f35b34801561055157600080fd5b5061056c6004803603810190610567919061241f565b6114a8565b005b34801561057a57600080fd5b50610595600480360381019061059091906125a7565b611622565b005b3480156105a357600080fd5b506105be60048036038101906105b991906123f6565b6116a8565b6040516105cb9190612de1565b60405180910390f35b3480156105e057600080fd5b506105fb60048036038101906105f691906125f9565b6116c0565b005b34801561060957600080fd5b50610624600480360381019061061f9190612542565b611b2e565b005b34801561063257600080fd5b5061064d600480360381019061064891906123f6565b611c4d565b005b34801561065b57600080fd5b50610676600480360381019061067191906123f6565b611df6565b6040516106839190612c35565b60405180910390f35b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff169080600701805461073990613294565b80601f016020809104026020016040519081016040528092919081815260200182805461076590613294565b80156107b25780601f10610787576101008083540402835291602001916107b2565b820191906000526020600020905b81548152906001019060200180831161079557829003601f168201915b5050505050908060080180546107c790613294565b80601f01602080910402602001604051908101604052809291908181526020018280546107f390613294565b80156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b505050505090508a565b600b6020528060005260406000206000915054906101000a900460ff1681565b610872611e16565b73ffffffffffffffffffffffffffffffffffffffff16610890611127565b73ffffffffffffffffffffffffffffffffffffffff16146108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90612d61565b60405180910390fd5b6000811180156108f65750600481105b610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90612d21565b60405180910390fd5b6001811415610997576001600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60028114156109f9576001600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6003811415610a5b576001600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b60035481565b60025481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b610a9f611e16565b73ffffffffffffffffffffffffffffffffffffffff16610abd611127565b73ffffffffffffffffffffffffffffffffffffffff1614610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90612d61565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610bc2576000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c5f565b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555042600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600c6020528060005260406000206000915054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cb0611e16565b73ffffffffffffffffffffffffffffffffffffffff16610cce611127565b73ffffffffffffffffffffffffffffffffffffffff1614610d24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1b90612d61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610dea611e16565b73ffffffffffffffffffffffffffffffffffffffff16610e08611127565b73ffffffffffffffffffffffffffffffffffffffff1614610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5590612d61565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ea4573d6000803e3d6000fd5b505050565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2c90612cc1565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638896637e83836040518363ffffffff1660e01b8152600401610f92929190612c0c565b600060405180830381600087803b158015610fac57600080fd5b505af1158015610fc0573d6000803e3d6000fd5b505050505050565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90612cc1565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637daf440d83836040518363ffffffff1660e01b81526004016110b1929190612c0c565b600060405180830381600087803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b505050505050565b60076020528060005260406000206000915054906101000a900460ff1681565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166111dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d390612d41565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637468b9ba83836040518363ffffffff1660e01b8152600401611239929190612c0c565b600060405180830381600087803b15801561125357600080fd5b505af1158015611267573d6000803e3d6000fd5b505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663247f8e14336040518263ffffffff1660e01b81526004016112f29190612b17565b60206040518083038186803b15801561130a57600080fd5b505afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611342919061257e565b611381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137890612d01565b60405180910390fd5b60016000815480929190611394906132c6565b919050555060006009600060015481526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508481600501819055506000816003018190555060008160040181905550600081600501819055504281600201819055508381600701908051906020019061148092919061217f565b5082816008019080519060200190611499929190612205565b50600154915050949350505050565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152b90612d81565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168360405161155c9190612b00565b6000604051808303816000865af19150503d8060008114611599576040519150601f19603f3d011682016040523d82523d6000602084013e61159e565b606091505b5091509150816115e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115da90612ca1565b60405180910390fd5b7f0d655f469da3540d6d1544bc544b2b76944af903f3df556b9666822dbebc85f58482604051611614929190612b32565b60405180910390a150505050565b61162a611e16565b73ffffffffffffffffffffffffffffffffffffffff16611648611127565b73ffffffffffffffffffffffffffffffffffffffff161461169e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169590612d61565b60405180910390fd5b8060038190555050565b60086020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663247f8e14336040518263ffffffff1660e01b815260040161171b9190612b17565b60206040518083038186803b15801561173357600080fd5b505afa158015611747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176b919061257e565b6117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a190612d01565b60405180910390fd5b60006009600084815260200190815260200160002090506001151581600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184e90612da1565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359d177e6336040518263ffffffff1660e01b81526004016118b49190612b17565b60206040518083038186803b1580156118cc57600080fd5b505afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190491906125d0565b905081600401600081548092919061191b906132c6565b919050558260040181905550604051806060016040528084151581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152508260090160008460040154815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600101559050506119fe818360030154611e1e90919063ffffffff16565b8260030181905550600182600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611aca57600080fd5b505afa158015611ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0291906125d0565b90506000611b14846003015483611e34565b90508015611b2657611b2586611e76565b5b505050505050565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb190612d41565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eb97781583836040518363ffffffff1660e01b8152600401611c17929190612c0c565b600060405180830381600087803b158015611c3157600080fd5b505af1158015611c45573d6000803e3d6000fd5b505050505050565b611c55611e16565b73ffffffffffffffffffffffffffffffffffffffff16611c73611127565b73ffffffffffffffffffffffffffffffffffffffff1614611cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc090612d61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3090612ce1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a6020528060005260406000206000915054906101000a900460ff1681565b600033905090565b60008183611e2c9190612ed0565b905092915050565b600080611e438484600261210c565b905082841415611e57576001915050611e70565b6003548110611e6a576001915050611e70565b60009150505b92915050565b6000600960008381526020019081526020016000209050600254611ea782600201544261216990919063ffffffff16565b10611eeb5760018160060160006101000a81548160ff02191690831515021790555060008160060160016101000a81548160ff021916908315150217905550612108565b8060060160009054906101000a900460ff1615611f3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3490612dc1565b60405180910390fd5b60008060005b83600401548111611fc857600084600901600083815260200190815260200160002090508060000160009054906101000a900460ff1615611f9c57611f95816001015485611e1e90919063ffffffff16565b9350611fb6565b611fb3816001015484611e1e90919063ffffffff16565b92505b5080611fc1906132c6565b9050611f43565b50808211156120ca5761208b8360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600801805461200890613294565b80601f016020809104026020016040519081016040528092919081815260200182805461203490613294565b80156120815780601f1061205657610100808354040283529160200191612081565b820191906000526020600020905b81548152906001019060200180831161206457829003601f168201915b50505050506114a8565b60018360060160006101000a81548160ff02191690831515021790555060018360060160016101000a81548160ff021916908315150217905550612105565b60018360060160006101000a81548160ff02191690831515021790555060008360060160016101000a81548160ff0219169083151502179055505b50505b5050565b60008060018361211c9190612ed0565b600a6121289190612faa565b8561213391906130c8565b90506000600a600586846121479190612f26565b6121519190612ed0565b61215b9190612f26565b905080925050509392505050565b600081836121779190613122565b905092915050565b82805461218b90613294565b90600052602060002090601f0160209004810192826121ad57600085556121f4565b82601f106121c657805160ff19168380011785556121f4565b828001600101855582156121f4579182015b828111156121f35782518255916020019190600101906121d8565b5b509050612201919061228b565b5090565b82805461221190613294565b90600052602060002090601f016020900481019282612233576000855561227a565b82601f1061224c57805160ff191683800117855561227a565b8280016001018555821561227a579182015b8281111561227957825182559160200191906001019061225e565b5b509050612287919061228b565b5090565b5b808211156122a457600081600090555060010161228c565b5090565b60006122bb6122b684612e2d565b612dfc565b9050828152602081018484840111156122d357600080fd5b6122de848285613252565b509392505050565b60006122f96122f484612e5d565b612dfc565b90508281526020810184848401111561231157600080fd5b61231c848285613252565b509392505050565b600081359050612333816133e9565b92915050565b60008135905061234881613400565b92915050565b60008135905061235d81613417565b92915050565b60008151905061237281613417565b92915050565b600082601f83011261238957600080fd5b81356123998482602086016122a8565b91505092915050565b600082601f8301126123b357600080fd5b81356123c38482602086016122e6565b91505092915050565b6000813590506123db8161342e565b92915050565b6000815190506123f08161342e565b92915050565b60006020828403121561240857600080fd5b600061241684828501612324565b91505092915050565b6000806040838503121561243257600080fd5b600061244085828601612339565b925050602083013567ffffffffffffffff81111561245d57600080fd5b61246985828601612378565b9150509250929050565b6000806040838503121561248657600080fd5b600061249485828601612339565b92505060206124a5858286016123cc565b9150509250929050565b600080600080608085870312156124c557600080fd5b60006124d387828801612339565b94505060206124e4878288016123cc565b935050604085013567ffffffffffffffff81111561250157600080fd5b61250d878288016123a2565b925050606085013567ffffffffffffffff81111561252a57600080fd5b61253687828801612378565b91505092959194509250565b6000806040838503121561255557600080fd5b600061256385828601612324565b9250506020612574858286016123cc565b9150509250929050565b60006020828403121561259057600080fd5b600061259e84828501612363565b91505092915050565b6000602082840312156125b957600080fd5b60006125c7848285016123cc565b91505092915050565b6000602082840312156125e257600080fd5b60006125f0848285016123e1565b91505092915050565b6000806040838503121561260c57600080fd5b600061261a858286016123cc565b925050602061262b8582860161234e565b9150509250929050565b61263e816131b0565b82525050565b61264d81613168565b82525050565b61265c81613156565b82525050565b61266b8161317a565b82525050565b600061267c82612e8d565b6126868185612ea3565b9350612696818560208601613261565b61269f816133cb565b840191505092915050565b60006126b582612e8d565b6126bf8185612eb4565b93506126cf818560208601613261565b80840191505092915050565b6126e4816131c2565b82525050565b6126f3816131e6565b82525050565b6127028161320a565b82525050565b600061271382612e98565b61271d8185612ebf565b935061272d818560208601613261565b612736816133cb565b840191505092915050565b600061274e601b83612ebf565b91507f64656c656761746546756e6374696f6e43616c6c204661696c656400000000006000830152602082019050919050565b600061278e602483612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f742061206d6960008301527f6e746572000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127f4602683612ebf565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061285a602c83612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f7420616e206160008301527f6374697665206d656d62657200000000000000000000000000000000000000006020830152604082019050919050565b60006128c0602583612ebf565b91507f446563656e747261436f72653a20496e76616c696420496e707574205072697660008301527f6c656467650000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612926602483612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f74206120627560008301527f726e6572000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061298c602083612ebf565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006129cc602783612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f74206120646560008301527f6c656761746f72000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a32602783612ebf565b91507f596f75204861766520616c726561647920766f746564206f6e2074686973207060008301527f726f706f73616c000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a98602783612ebf565b91507f546869732070726f706f73616c2068617320616c7265616479206265656e206560008301527f78656375746564000000000000000000000000000000000000000000000000006020830152604082019050919050565b612afa816131a6565b82525050565b6000612b0c82846126aa565b915081905092915050565b6000602082019050612b2c6000830184612653565b92915050565b6000604082019050612b476000830185612635565b8181036020830152612b598184612671565b90509392505050565b600061014082019050612b78600083018d612653565b612b85602083018c612644565b612b92604083018b612af1565b612b9f606083018a612af1565b612bac6080830189612af1565b612bb960a0830188612af1565b612bc660c0830187612662565b612bd360e0830186612662565b818103610100830152612be68185612708565b9050818103610120830152612bfb8184612671565b90509b9a5050505050505050505050565b6000604082019050612c216000830185612653565b612c2e6020830184612af1565b9392505050565b6000602082019050612c4a6000830184612662565b92915050565b6000602082019050612c6560008301846126db565b92915050565b6000602082019050612c8060008301846126ea565b92915050565b6000602082019050612c9b60008301846126f9565b92915050565b60006020820190508181036000830152612cba81612741565b9050919050565b60006020820190508181036000830152612cda81612781565b9050919050565b60006020820190508181036000830152612cfa816127e7565b9050919050565b60006020820190508181036000830152612d1a8161284d565b9050919050565b60006020820190508181036000830152612d3a816128b3565b9050919050565b60006020820190508181036000830152612d5a81612919565b9050919050565b60006020820190508181036000830152612d7a8161297f565b9050919050565b60006020820190508181036000830152612d9a816129bf565b9050919050565b60006020820190508181036000830152612dba81612a25565b9050919050565b60006020820190508181036000830152612dda81612a8b565b9050919050565b6000602082019050612df66000830184612af1565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612e2357612e2261339c565b5b8060405250919050565b600067ffffffffffffffff821115612e4857612e4761339c565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612e7857612e7761339c565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612edb826131a6565b9150612ee6836131a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f1b57612f1a61330f565b5b828201905092915050565b6000612f31826131a6565b9150612f3c836131a6565b925082612f4c57612f4b61333e565b5b828204905092915050565b6000808291508390505b6001851115612fa157808604811115612f7d57612f7c61330f565b5b6001851615612f8c5780820291505b8081029050612f9a856133dc565b9450612f61565b94509492505050565b6000612fb5826131a6565b9150612fc0836131a6565b9250612fed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612ff5565b905092915050565b60008261300557600190506130c1565b8161301357600090506130c1565b8160018114613029576002811461303357613062565b60019150506130c1565b60ff8411156130455761304461330f565b5b8360020a91508482111561305c5761305b61330f565b5b506130c1565b5060208310610133831016604e8410600b84101617156130975782820a9050838111156130925761309161330f565b5b6130c1565b6130a48484846001612f57565b925090508184048111156130bb576130ba61330f565b5b81810290505b9392505050565b60006130d3826131a6565b91506130de836131a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156131175761311661330f565b5b828202905092915050565b600061312d826131a6565b9150613138836131a6565b92508282101561314b5761314a61330f565b5b828203905092915050565b600061316182613186565b9050919050565b600061317382613186565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006131bb8261322e565b9050919050565b60006131cd826131d4565b9050919050565b60006131df82613186565b9050919050565b60006131f1826131f8565b9050919050565b600061320382613186565b9050919050565b60006132158261321c565b9050919050565b600061322782613186565b9050919050565b600061323982613240565b9050919050565b600061324b82613186565b9050919050565b82818337600083830152505050565b60005b8381101561327f578082015181840152602081019050613264565b8381111561328e576000848401525b50505050565b600060028204905060018216806132ac57607f821691505b602082108114156132c0576132bf61336d565b5b50919050565b60006132d1826131a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156133045761330361330f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b6133f281613156565b81146133fd57600080fd5b50565b61340981613168565b811461341457600080fd5b50565b6134208161317a565b811461342b57600080fd5b50565b613437816131a6565b811461344257600080fd5b5056fea264697066735822122085fa4f984247cfc2d370943e481a1a051ed3620a1d67ba313dee2fcaf4cca64864736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3701 CODESIZE SUB DUP1 PUSH3 0x3701 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49 PUSH3 0x1B3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP3 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x276 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1CC DUP2 PUSH3 0x25C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1F8 DUP7 DUP3 DUP8 ADD PUSH3 0x1BB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x20B DUP7 DUP3 DUP8 ADD PUSH3 0x1BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x21E DUP7 DUP3 DUP8 ADD PUSH3 0x1BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x235 DUP3 PUSH3 0x23C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x267 DUP2 PUSH3 0x228 JUMP JUMPDEST DUP2 EQ PUSH3 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x347B DUP1 PUSH3 0x286 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83AC74F9 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xBD621FA3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC9D27AFE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xD7C93180 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x64F JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0xBD621FA3 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xC1BA4E59 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xC3396BDC EQ PUSH2 0x597 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x9C94F651 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xA120C14F EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xB1050DA5 EQ PUSH2 0x515 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x83AC74F9 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x860838A5 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8D23FC61 EQ PUSH2 0x459 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x371FA854 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6122698F GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6122698F EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x7563DD54 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x82F4F5B4 EQ PUSH2 0x3CA JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x371FA854 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x3E410717 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x51BCC28B EQ PUSH2 0x322 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x3D41E0E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x1268B7D2 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x184A0AE9 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x30DCE62B EQ PUSH2 0x2A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x262 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xCA8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x2473 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xFC8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x480 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AB PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0x1150 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FF PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x14A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1C4D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x676 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x739 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x765 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x787 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x795 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x7C7 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F3 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x840 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x815 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x840 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x823 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x872 PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x890 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x8F6 JUMPI POP PUSH1 0x4 DUP2 LT JUMPDEST PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x997 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0xA5B JUMPI PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA9F PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABD PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCCE PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1B SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDEA PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE08 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE55 SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2C SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8896637E DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104B SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7DAF440D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D3 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7468B9BA DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1267 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x247F8E14 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH2 0x1381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1378 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 SWAP1 PUSH2 0x32C6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x7 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1480 SWAP3 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x8 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1499 SWAP3 SWAP2 SWAP1 PUSH2 0x2205 JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152B SWAP1 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DA SWAP1 PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xD655F469DA3540D6D1544BC544B2B76944AF903F3DF556B9666822DBEBC85F5 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1614 SWAP3 SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x162A PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1648 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1695 SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x247F8E14 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x176B SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH2 0x17AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0xA ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184E SWAP1 PUSH2 0x2DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x59D177E6 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B4 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x191B SWAP1 PUSH2 0x32C6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 PUSH1 0x9 ADD PUSH1 0x0 DUP5 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x19FE DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x1E1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0xA ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B02 SWAP2 SWAP1 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B14 DUP5 PUSH1 0x3 ADD SLOAD DUP4 PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B26 JUMPI PUSH2 0x1B25 DUP7 PUSH2 0x1E76 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEB977815 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C17 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C55 PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C73 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC0 SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D30 SWAP1 PUSH2 0x2CE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E2C SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E43 DUP5 DUP5 PUSH1 0x2 PUSH2 0x210C JUMP JUMPDEST SWAP1 POP DUP3 DUP5 EQ ISZERO PUSH2 0x1E57 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x1E6A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x2 SLOAD PUSH2 0x1EA7 DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x2169 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT PUSH2 0x1EEB JUMPI PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2108 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F34 SWAP1 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x0 DUP5 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F9C JUMPI PUSH2 0x1F95 DUP2 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1E1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x1FB3 DUP2 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1E1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1FC1 SWAP1 PUSH2 0x32C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F43 JUMP JUMPDEST POP DUP1 DUP3 GT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x208B DUP4 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x2008 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2034 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2081 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2056 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2081 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2064 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2105 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH2 0x211C SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0xA PUSH2 0x2128 SWAP2 SWAP1 PUSH2 0x2FAA JUMP JUMPDEST DUP6 PUSH2 0x2133 SWAP2 SWAP1 PUSH2 0x30C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x5 DUP7 DUP5 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x2F26 JUMP JUMPDEST PUSH2 0x2151 SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST PUSH2 0x215B SWAP2 SWAP1 PUSH2 0x2F26 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2177 SWAP2 SWAP1 PUSH2 0x3122 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x218B SWAP1 PUSH2 0x3294 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x21AD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x21F4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x21C6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x21F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x21F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x21F3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x21D8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2201 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2211 SWAP1 PUSH2 0x3294 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2233 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x227A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x224C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x227A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x227A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2279 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x225E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2287 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x228C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BB PUSH2 0x22B6 DUP5 PUSH2 0x2E2D JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22DE DUP5 DUP3 DUP6 PUSH2 0x3252 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F9 PUSH2 0x22F4 DUP5 PUSH2 0x2E5D JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x231C DUP5 DUP3 DUP6 PUSH2 0x3252 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2333 DUP2 PUSH2 0x33E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2348 DUP2 PUSH2 0x3400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x235D DUP2 PUSH2 0x3417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2372 DUP2 PUSH2 0x3417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2399 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23C3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23DB DUP2 PUSH2 0x342E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x23F0 DUP2 PUSH2 0x342E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2416 DUP5 DUP3 DUP6 ADD PUSH2 0x2324 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2440 DUP6 DUP3 DUP7 ADD PUSH2 0x2339 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2469 DUP6 DUP3 DUP7 ADD PUSH2 0x2378 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2494 DUP6 DUP3 DUP7 ADD PUSH2 0x2339 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A5 DUP6 DUP3 DUP7 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP8 DUP3 DUP9 ADD PUSH2 0x2339 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24E4 DUP8 DUP3 DUP9 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x250D DUP8 DUP3 DUP9 ADD PUSH2 0x23A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x252A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2536 DUP8 DUP3 DUP9 ADD PUSH2 0x2378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2563 DUP6 DUP3 DUP7 ADD PUSH2 0x2324 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2574 DUP6 DUP3 DUP7 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x259E DUP5 DUP3 DUP6 ADD PUSH2 0x2363 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25C7 DUP5 DUP3 DUP6 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25F0 DUP5 DUP3 DUP6 ADD PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x260C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x261A DUP6 DUP3 DUP7 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x262B DUP6 DUP3 DUP7 ADD PUSH2 0x234E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x263E DUP2 PUSH2 0x31B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x264D DUP2 PUSH2 0x3168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x265C DUP2 PUSH2 0x3156 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x266B DUP2 PUSH2 0x317A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x2686 DUP2 DUP6 PUSH2 0x2EA3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2696 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3261 JUMP JUMPDEST PUSH2 0x269F DUP2 PUSH2 0x33CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B5 DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x26BF DUP2 DUP6 PUSH2 0x2EB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x26CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3261 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E4 DUP2 PUSH2 0x31C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26F3 DUP2 PUSH2 0x31E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2702 DUP2 PUSH2 0x320A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2713 DUP3 PUSH2 0x2E98 JUMP JUMPDEST PUSH2 0x271D DUP2 DUP6 PUSH2 0x2EBF JUMP JUMPDEST SWAP4 POP PUSH2 0x272D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3261 JUMP JUMPDEST PUSH2 0x2736 DUP2 PUSH2 0x33CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274E PUSH1 0x1B DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x64656C656761746546756E6374696F6E43616C6C204661696C65640000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278E PUSH1 0x24 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F742061206D69 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E74657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F4 PUSH1 0x26 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285A PUSH1 0x2C DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F7420616E2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6374697665206D656D6265720000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C0 PUSH1 0x25 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A20496E76616C696420496E7075742050726976 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C65646765000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2926 PUSH1 0x24 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F742061206275 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x726E657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298C PUSH1 0x20 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CC PUSH1 0x27 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F742061206465 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C656761746F7200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A32 PUSH1 0x27 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x596F75204861766520616C726561647920766F746564206F6E20746869732070 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x726F706F73616C00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A98 PUSH1 0x27 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x546869732070726F706F73616C2068617320616C7265616479206265656E2065 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7865637574656400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AFA DUP2 PUSH2 0x31A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0C DUP3 DUP5 PUSH2 0x26AA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B47 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2635 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B59 DUP2 DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x2B78 PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x2B85 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x2B92 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2B9F PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2BAC PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2BB9 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2BC6 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2662 JUMP JUMPDEST PUSH2 0x2BD3 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x2662 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x2BE6 DUP2 DUP6 PUSH2 0x2708 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2BFB DUP2 DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C21 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x2C2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2AF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2662 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBA DUP2 PUSH2 0x2741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CDA DUP2 PUSH2 0x2781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFA DUP2 PUSH2 0x27E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D1A DUP2 PUSH2 0x284D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3A DUP2 PUSH2 0x28B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D5A DUP2 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D7A DUP2 PUSH2 0x297F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D9A DUP2 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DBA DUP2 PUSH2 0x2A25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DDA DUP2 PUSH2 0x2A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E23 JUMPI PUSH2 0x2E22 PUSH2 0x339C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E48 JUMPI PUSH2 0x2E47 PUSH2 0x339C JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x339C JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDB DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE6 DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F1B JUMPI PUSH2 0x2F1A PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F31 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F3C DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F4C JUMPI PUSH2 0x2F4B PUSH2 0x333E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2FA1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2F7D JUMPI PUSH2 0x2F7C PUSH2 0x330F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2F8C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2F9A DUP6 PUSH2 0x33DC JUMP JUMPDEST SWAP5 POP PUSH2 0x2F61 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB5 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC0 DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x2FED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3005 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x30C1 JUMP JUMPDEST DUP2 PUSH2 0x3013 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x30C1 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3029 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3033 JUMPI PUSH2 0x3062 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x30C1 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3045 JUMPI PUSH2 0x3044 PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x305C JUMPI PUSH2 0x305B PUSH2 0x330F JUMP JUMPDEST JUMPDEST POP PUSH2 0x30C1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3097 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x3092 JUMPI PUSH2 0x3091 PUSH2 0x330F JUMP JUMPDEST JUMPDEST PUSH2 0x30C1 JUMP JUMPDEST PUSH2 0x30A4 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2F57 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x30BB JUMPI PUSH2 0x30BA PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D3 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x30DE DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3117 JUMPI PUSH2 0x3116 PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312D DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3138 DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x314B JUMPI PUSH2 0x314A PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3161 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3173 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31BB DUP3 PUSH2 0x322E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CD DUP3 PUSH2 0x31D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31DF DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F1 DUP3 PUSH2 0x31F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3203 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3215 DUP3 PUSH2 0x321C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3227 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3239 DUP3 PUSH2 0x3240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x324B DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x327F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3264 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x328E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x32AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x32C0 JUMPI PUSH2 0x32BF PUSH2 0x336D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D1 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3304 JUMPI PUSH2 0x3303 PUSH2 0x330F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F2 DUP2 PUSH2 0x3156 JUMP JUMPDEST DUP2 EQ PUSH2 0x33FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3409 DUP2 PUSH2 0x3168 JUMP JUMPDEST DUP2 EQ PUSH2 0x3414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3420 DUP2 PUSH2 0x317A JUMP JUMPDEST DUP2 EQ PUSH2 0x342B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3437 DUP2 PUSH2 0x31A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 STATICCALL 0x4F SWAP9 TIMESTAMP SELFBALANCE 0xCF 0xC2 0xD3 PUSH17 0x943E481A1A051ED3620A1D67BA313DEE2F 0xCA DELEGATECALL 0xCC 0xA6 0x48 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "628:14953:4:-:0;;;5103:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:0;887:12;:10;;;:12;;:::i;:::-;867:32;;918:9;909:6;;:18;;;;;;;;;;;;;;;;;;975:9;942:43;;971:1;942:43;;;;;;;;;;;;842:150;5228:8:4;5207:2;;:30;;;;;;;;;;;;;;;;;;5267:7;5247:2;;:28;;;;;;;;;;;;;;;;;;5302:7;5285:6;;:25;;;;;;;;;;;;;;;;;;5103:214;;;628:14953;;586:96:2;639:7;665:10;658:17;;586:96;:::o;7:143:9:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:596::-;;;;309:2;297:9;288:7;284:23;280:32;277:2;;;325:1;322;315:12;277:2;368:1;393:64;449:7;440:6;429:9;425:22;393:64;:::i;:::-;383:74;;339:128;506:2;532:64;588:7;579:6;568:9;564:22;532:64;:::i;:::-;522:74;;477:129;645:2;671:64;727:7;718:6;707:9;703:22;671:64;:::i;:::-;661:74;;616:129;267:485;;;;;:::o;758:96::-;;824:24;842:5;824:24;:::i;:::-;813:35;;803:51;;;:::o;860:126::-;;937:42;930:5;926:54;915:65;;905:81;;;:::o;992:122::-;1065:24;1083:5;1065:24;:::i;:::-;1058:5;1055:35;1045:2;;1104:1;1101;1094:12;1045:2;1035:79;:::o;628:14953:4:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:29532:9",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "90:259:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "100:73:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "165:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "124:40:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "124:48:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "109:14:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "109:64:9"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "189:5:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "196:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "182:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "182:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "182:21:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "212:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "227:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "234:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:16:9"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "216:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "277:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "286:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "289:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "279:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "279:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "279:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "258:3:9"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "263:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "254:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "254:16:9"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "272:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "251:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "251:25:9"
                              },
                              "nodeType": "YulIf",
                              "src": "248:2:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "326:3:9"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "331:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "336:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:23:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "302:41:9"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "63:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "68:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "76:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "84:5:9",
                            "type": ""
                          }
                        ],
                        "src": "7:342:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "439:260:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "449:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "515:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_string_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "473:41:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "473:49:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocateMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "458:14:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "458:65:9"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "449:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "539:5:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "546:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "532:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "532:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "532:21:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "562:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "577:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "584:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "573:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "573:16:9"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "566:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "627:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "636:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "639:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "629:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "629:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "629:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "608:3:9"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "613:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "604:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "604:16:9"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "622:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "601:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "601:25:9"
                              },
                              "nodeType": "YulIf",
                              "src": "598:2:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "676:3:9"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "681:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "686:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "652:23:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "652:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "652:41:9"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "412:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "417:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "425:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "433:5:9",
                            "type": ""
                          }
                        ],
                        "src": "355:344:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "757:87:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "767:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "789:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "776:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "776:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "832:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "805:26:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "805:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "805:33:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "735:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "743:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "751:5:9",
                            "type": ""
                          }
                        ],
                        "src": "705:139:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "910:95:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "920:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "942:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "929:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "929:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "920:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "993:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "958:34:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "958:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "958:41:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "888:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "896:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "904:5:9",
                            "type": ""
                          }
                        ],
                        "src": "850:155:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1060:84:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1070:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1092:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1079:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1079:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1070:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1132:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "1108:23:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1108:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1108:30:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1038:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1046:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1054:5:9",
                            "type": ""
                          }
                        ],
                        "src": "1011:133:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1210:77:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1220:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1235:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1229:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1229:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1220:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1275:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:23:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1251:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1251:30:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1188:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1196:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1204:5:9",
                            "type": ""
                          }
                        ],
                        "src": "1150:137:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1367:210:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1416:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1425:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1428:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1418:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1418:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1418:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1395:6:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1403:4:9",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1391:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1391:17:9"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1410:3:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1387:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1387:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1380:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1380:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1377:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1441:34:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1468:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1455:20:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1445:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1484:87:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1544:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1552:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1540:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1540:17:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1559:6:9"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1567:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1493:46:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1493:78:9"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1484:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1345:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1353:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1361:5:9",
                            "type": ""
                          }
                        ],
                        "src": "1306:271:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1659:211:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1708:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1717:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1720:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1710:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1710:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1710:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1687:6:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1695:4:9",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1683:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1683:17:9"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1702:3:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1679:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1679:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1672:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1672:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1669:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1733:34:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1760:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1747:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1747:20:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1737:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1776:88:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1837:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1845:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1833:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1833:17:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1852:6:9"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1860:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1785:47:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1785:79:9"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1776:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1637:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1645:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1653:5:9",
                            "type": ""
                          }
                        ],
                        "src": "1597:273:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1928:87:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1938:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1960:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1947:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1947:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1938:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2003:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1976:26:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1976:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1976:33:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1906:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1914:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1922:5:9",
                            "type": ""
                          }
                        ],
                        "src": "1876:139:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2084:80:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2094:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2109:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2103:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2103:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2094:5:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2152:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "2125:26:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2125:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2125:33:9"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2062:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2070:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2078:5:9",
                            "type": ""
                          }
                        ],
                        "src": "2021:143:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2236:196:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2282:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2291:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2294:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2284:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2284:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2284:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2257:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2266:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2253:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2253:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2278:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2249:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2249:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2246:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2308:117:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2323:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2337:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2327:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2352:63:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2387:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2398:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2383:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2383:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2407:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2362:20:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2362:53:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2352:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2206:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2217:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2229:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2170:262:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2538:434:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2584:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2593:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2596:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2586:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2586:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2586:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2559:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2568:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2555:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2555:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2580:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2551:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2551:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2548:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2610:125:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2625:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2639:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2629:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2654:71:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2697:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2708:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2693:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2693:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2717:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "2664:28:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2664:61:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2654:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2745:220:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2760:46:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2791:9:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2802:2:9",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2787:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2787:18:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2774:12:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2774:32:9"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2764:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "2853:16:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2862:1:9",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2865:1:9",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "2855:6:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2855:12:9"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2855:12:9"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2825:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2833:18:9",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2822:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2822:30:9"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "2819:2:9"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2883:72:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2927:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2938:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2923:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2923:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2947:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2893:29:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2893:62:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2883:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2500:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2511:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2523:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2531:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2438:534:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3069:332:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3115:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3124:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3127:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3117:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3117:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3117:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3090:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3099:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3086:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3086:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3111:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3082:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3082:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3079:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3141:125:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3156:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3170:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3160:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3185:71:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3228:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3239:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3224:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3224:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3248:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "3195:28:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3195:61:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3185:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3276:118:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3291:16:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3305:2:9",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3295:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3321:63:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3356:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3367:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3352:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3352:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3376:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3331:20:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3331:53:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3321:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3031:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3042:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3054:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3062:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2978:423:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3551:794:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3598:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3607:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3610:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3600:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3600:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3600:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3572:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3581:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3568:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3568:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3593:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3564:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3564:33:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3561:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3624:125:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3639:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3653:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3643:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3668:71:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3711:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3722:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3707:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3707:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3731:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "3678:28:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3678:61:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3668:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3759:118:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3774:16:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3788:2:9",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3778:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3804:63:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3839:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3850:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3835:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3835:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3859:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3814:20:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3814:53:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3804:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3887:221:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3902:46:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3933:9:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3944:2:9",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3929:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3929:18:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3916:12:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3916:32:9"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3906:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "3995:16:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4004:1:9",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4007:1:9",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "3997:6:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3997:12:9"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "3997:12:9"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3967:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3975:18:9",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3964:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3964:30:9"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "3961:2:9"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4025:73:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4070:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4081:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4066:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4066:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4090:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_string_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4035:30:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4035:63:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4025:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4118:220:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4133:46:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4164:9:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4175:2:9",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4160:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4160:18:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4147:12:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4147:32:9"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4137:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4226:16:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4235:1:9",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4238:1:9",
                                              "type": "",
                                              "value": "0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "4228:6:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4228:12:9"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4228:12:9"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4198:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4206:18:9",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4195:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4195:30:9"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "4192:2:9"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4256:72:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4300:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4311:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4296:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4296:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4320:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4266:29:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4266:62:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4256:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptrt_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3497:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3508:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3520:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3528:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3536:6:9",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3544:6:9",
                            "type": ""
                          }
                        ],
                        "src": "3407:938:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4434:324:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4480:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4489:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4492:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4482:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4482:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4482:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4455:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4464:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4451:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4451:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4476:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4447:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4447:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "4444:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4506:117:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4521:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4535:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4525:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4550:63:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4585:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4596:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4581:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4581:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4605:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4560:20:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4560:53:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4550:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4633:118:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4648:16:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4662:2:9",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4652:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4678:63:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4713:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4724:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4709:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4709:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4733:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4688:20:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4688:53:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4678:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4396:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4407:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4419:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4427:6:9",
                            "type": ""
                          }
                        ],
                        "src": "4351:407:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4838:204:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4884:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4893:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4896:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4886:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4886:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4886:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4859:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4868:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4855:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4855:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4880:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4851:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4851:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "4848:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4910:125:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4925:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4939:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4929:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4954:71:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4997:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5008:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4993:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4993:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5017:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "4964:28:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4964:61:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4954:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4808:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4819:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4831:6:9",
                            "type": ""
                          }
                        ],
                        "src": "4764:278:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5114:196:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5160:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5169:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5172:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5162:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5162:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5162:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5135:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5144:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5131:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5131:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5156:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5127:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5127:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5124:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5186:117:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5201:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5215:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5205:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5230:63:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5265:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5276:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5261:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5261:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5285:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5240:20:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5240:53:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5230:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5084:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5095:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5107:6:9",
                            "type": ""
                          }
                        ],
                        "src": "5048:262:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5393:207:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5439:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5448:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5451:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5441:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5441:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5441:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5414:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5423:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5410:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5410:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5435:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5406:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5406:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5403:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5465:128:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5480:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5494:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5484:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5509:74:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5555:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5566:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5551:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5551:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5575:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "5519:31:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5519:64:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5509:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5363:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5374:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5386:6:9",
                            "type": ""
                          }
                        ],
                        "src": "5316:284:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5686:321:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5732:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5741:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5744:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5734:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5734:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5734:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5707:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5716:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5703:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5703:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5728:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5699:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5699:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5696:2:9"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5758:117:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5773:15:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5787:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5777:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5802:63:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5837:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5848:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5833:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5833:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5857:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "5812:20:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5812:53:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "5802:6:9"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "5885:115:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5900:16:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5914:2:9",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "5904:6:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "5930:60:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5962:9:9"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5973:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5958:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5958:22:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5982:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "5940:17:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5940:50:9"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5930:6:9"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5648:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5659:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5671:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5679:6:9",
                            "type": ""
                          }
                        ],
                        "src": "5606:401:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6086:74:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6103:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6147:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_address_payable_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6108:38:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6108:45:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6096:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6096:58:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6096:58:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6074:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6081:3:9",
                            "type": ""
                          }
                        ],
                        "src": "6013:147:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6247:61:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6264:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6295:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "6269:25:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6269:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6257:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6257:45:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6257:45:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6235:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6242:3:9",
                            "type": ""
                          }
                        ],
                        "src": "6166:142:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6379:53:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6396:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6419:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "6401:17:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6401:24:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6389:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6389:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6389:37:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6367:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6374:3:9",
                            "type": ""
                          }
                        ],
                        "src": "6314:118:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6497:50:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6514:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6534:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "6519:14:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6519:21:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6507:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6507:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6507:34:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6485:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6492:3:9",
                            "type": ""
                          }
                        ],
                        "src": "6438:109:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6643:270:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6653:52:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6699:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6667:31:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6667:38:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6657:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6714:77:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6779:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6784:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6721:57:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6721:70:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6714:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6826:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6833:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6822:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6822:16:9"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6840:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6845:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6800:21:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6800:52:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6800:52:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6861:46:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6872:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6899:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "6877:21:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6877:29:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6868:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6868:39:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6861:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6624:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6631:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6639:3:9",
                            "type": ""
                          }
                        ],
                        "src": "6553:360:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7027:265:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7037:52:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7083:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7051:31:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7051:38:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7041:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7098:95:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7181:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7186:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7105:75:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7105:88:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7098:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7228:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7235:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7224:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7224:16:9"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7242:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7247:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7202:21:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7202:52:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7202:52:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7263:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7274:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7279:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7270:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7270:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7263:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7008:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7015:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7023:3:9",
                            "type": ""
                          }
                        ],
                        "src": "6919:373:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7379:82:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7396:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7448:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IDScore_$1411_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7401:46:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7401:53:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7389:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7389:66:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7389:66:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IDScore_$1411_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7367:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7374:3:9",
                            "type": ""
                          }
                        ],
                        "src": "7298:163:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7556:90:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7573:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7633:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IDecentraDollar_$1575_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7578:54:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7578:61:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7566:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7566:74:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7566:74:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IDecentraDollar_$1575_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7544:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7551:3:9",
                            "type": ""
                          }
                        ],
                        "src": "7467:179:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7740:89:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7757:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7816:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IDecentraStock_$1603_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "7762:53:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7762:60:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7750:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7750:73:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7750:73:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IDecentraStock_$1603_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7728:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7735:3:9",
                            "type": ""
                          }
                        ],
                        "src": "7652:177:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7927:272:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7937:53:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7984:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7951:32:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7951:39:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7941:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7999:78:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8065:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8070:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8006:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8006:71:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7999:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8112:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8119:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8108:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8108:16:9"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8126:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8131:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8086:21:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8086:52:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8086:52:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8147:46:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8158:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8185:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "8163:21:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8163:29:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8154:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8154:39:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8147:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7908:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7915:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7923:3:9",
                            "type": ""
                          }
                        ],
                        "src": "7835:364:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8351:179:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8361:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8427:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8432:2:9",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8368:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8368:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8361:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "8456:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8461:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8452:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8452:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8465:29:9",
                                    "type": "",
                                    "value": "delegateFunctionCall Failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8445:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8445:50:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8445:50:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8505:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8516:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8521:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8512:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8512:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8505:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8339:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8347:3:9",
                            "type": ""
                          }
                        ],
                        "src": "8205:325:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8682:222:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8692:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8758:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8763:2:9",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8699:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8699:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8692:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "8787:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8792:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8783:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8783:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8796:34:9",
                                    "type": "",
                                    "value": "DecentraCore: Caller is not a mi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8776:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8776:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8776:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "8852:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8857:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8848:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8848:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8862:6:9",
                                    "type": "",
                                    "value": "nter"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8841:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8841:28:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8841:28:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8879:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8890:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8895:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8886:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8886:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8879:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8670:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8678:3:9",
                            "type": ""
                          }
                        ],
                        "src": "8536:368:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9056:224:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9066:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9132:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9137:2:9",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9073:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9073:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9066:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9161:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9166:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9157:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9157:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9170:34:9",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9150:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9150:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9150:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9226:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9231:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9222:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9222:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9236:8:9",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9215:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9215:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9215:30:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9255:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9266:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9271:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9262:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9262:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9255:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9044:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9052:3:9",
                            "type": ""
                          }
                        ],
                        "src": "8910:370:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9432:230:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9442:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9508:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9513:2:9",
                                    "type": "",
                                    "value": "44"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9449:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9449:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9442:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9537:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9542:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9533:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9533:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9546:34:9",
                                    "type": "",
                                    "value": "DecentraCore: Caller is not an a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9526:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9526:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9526:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9602:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9607:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9598:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9598:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9612:14:9",
                                    "type": "",
                                    "value": "ctive member"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9591:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9591:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9591:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9637:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9648:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9653:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9644:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9644:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9637:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9420:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9428:3:9",
                            "type": ""
                          }
                        ],
                        "src": "9286:376:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9814:223:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9824:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9890:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9895:2:9",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9831:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9831:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "9824:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9919:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9924:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9915:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9915:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9928:34:9",
                                    "type": "",
                                    "value": "DecentraCore: Invalid Input Priv"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9908:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9908:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9908:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "9984:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9989:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9980:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9980:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9994:7:9",
                                    "type": "",
                                    "value": "ledge"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9973:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9973:29:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9973:29:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10012:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10023:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10028:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10019:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10019:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10012:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9802:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9810:3:9",
                            "type": ""
                          }
                        ],
                        "src": "9668:369:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10189:222:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10199:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10265:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10270:2:9",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10206:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10206:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10199:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "10294:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10299:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10290:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10290:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10303:34:9",
                                    "type": "",
                                    "value": "DecentraCore: Caller is not a bu"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10283:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10283:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10283:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "10359:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10364:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10355:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10355:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10369:6:9",
                                    "type": "",
                                    "value": "rner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10348:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10348:28:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10348:28:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10386:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10397:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10402:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10393:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10393:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10386:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10177:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10185:3:9",
                            "type": ""
                          }
                        ],
                        "src": "10043:368:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10563:184:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10573:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10639:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10644:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10580:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10580:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10573:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "10668:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10673:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10664:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10664:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10677:34:9",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10657:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10657:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10657:55:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10722:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10733:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10738:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10729:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10729:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "10722:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10551:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10559:3:9",
                            "type": ""
                          }
                        ],
                        "src": "10417:330:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10899:225:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10909:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10975:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10980:2:9",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10916:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10916:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "10909:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11004:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11009:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11000:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11000:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11013:34:9",
                                    "type": "",
                                    "value": "DecentraCore: Caller is not a de"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10993:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10993:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10993:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11069:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11074:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11065:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11065:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11079:9:9",
                                    "type": "",
                                    "value": "legator"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11058:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11058:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11058:31:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11099:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11110:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11115:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11106:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11106:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11099:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10887:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10895:3:9",
                            "type": ""
                          }
                        ],
                        "src": "10753:371:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11276:225:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11286:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11352:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11357:2:9",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11293:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11293:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11286:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11381:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11386:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11377:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11377:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11390:34:9",
                                    "type": "",
                                    "value": "You Have already voted on this p"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11370:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11370:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11370:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11446:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11451:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11442:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11442:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11456:9:9",
                                    "type": "",
                                    "value": "roposal"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11435:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11435:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11435:31:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11476:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11487:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11492:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11483:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11483:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11476:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11264:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11272:3:9",
                            "type": ""
                          }
                        ],
                        "src": "11130:371:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11653:225:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11663:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11729:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11734:2:9",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11670:58:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11670:67:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "11663:3:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11758:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11763:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11754:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11754:11:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11767:34:9",
                                    "type": "",
                                    "value": "This proposal has already been e"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11747:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11747:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11747:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11823:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11828:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11819:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11819:12:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11833:9:9",
                                    "type": "",
                                    "value": "xecuted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11812:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11812:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11812:31:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11853:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11864:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11869:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11860:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11860:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11853:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11641:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11649:3:9",
                            "type": ""
                          }
                        ],
                        "src": "11507:371:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11949:53:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11966:3:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11989:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "11971:17:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11971:24:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11959:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11959:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11959:37:9"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11937:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11944:3:9",
                            "type": ""
                          }
                        ],
                        "src": "11884:118:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12142:137:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12153:100:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12240:6:9"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12249:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12160:79:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12160:93:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "12153:3:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12263:10:9",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12270:3:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12263:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12121:3:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12127:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12138:3:9",
                            "type": ""
                          }
                        ],
                        "src": "12008:271:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12383:124:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12393:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12405:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12416:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12401:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12401:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12393:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12473:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12486:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12497:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12482:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12482:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12429:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12429:71:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12429:71:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12355:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12367:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12378:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12285:222:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12665:283:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12675:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12687:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12698:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12683:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12683:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12675:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12763:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12776:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12787:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12772:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12772:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12711:51:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12711:79:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12711:79:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12811:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12822:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12807:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12807:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "12831:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12837:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12827:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12827:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12800:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12800:48:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12800:48:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12857:84:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12927:6:9"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "12936:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12865:61:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12865:76:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12857:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12629:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "12641:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12649:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12660:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12513:435:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13346:1013:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13356:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13368:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13379:3:9",
                                    "type": "",
                                    "value": "320"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13364:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13364:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13356:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13437:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13450:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13461:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13446:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13446:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13393:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13393:71:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13393:71:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13534:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13547:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13558:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13543:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13543:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13474:59:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13474:88:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13474:88:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "13616:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13629:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13640:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13625:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13625:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13572:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13572:72:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13572:72:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "13698:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13711:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13722:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13707:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13707:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13654:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13654:72:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13654:72:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "13780:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13793:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13804:3:9",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13789:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13789:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13736:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13736:73:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13736:73:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "13863:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13876:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13887:3:9",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13872:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13872:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13819:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13819:73:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13819:73:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "13940:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13953:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13964:3:9",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13949:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13949:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13902:37:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13902:67:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13902:67:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "14017:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14030:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14041:3:9",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14026:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14026:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13979:37:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13979:67:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13979:67:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14067:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14078:3:9",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14063:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14063:19:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14088:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14094:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14084:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14084:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14056:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14056:49:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14056:49:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14114:86:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "14186:6:9"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14195:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14122:63:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14122:78:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14114:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14221:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14232:3:9",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14217:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14217:19:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14242:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14248:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14238:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14238:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14210:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14210:49:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14210:49:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14268:84:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "14338:6:9"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14347:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14276:61:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14276:76:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14268:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13246:9:9",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "13258:6:9",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "13266:6:9",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "13274:6:9",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "13282:6:9",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "13290:6:9",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "13298:6:9",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "13306:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "13314:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "13322:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13330:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13341:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12954:1405:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14491:206:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14501:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14513:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14524:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14509:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14509:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14501:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14581:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14594:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14605:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14590:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14590:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14537:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14537:71:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14537:71:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14662:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14675:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14686:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14671:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14671:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14618:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14618:72:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14618:72:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14455:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14467:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14475:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14486:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14365:332:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14795:118:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14805:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14817:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14828:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14813:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14813:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14805:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14879:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14892:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14903:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14888:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14888:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14841:37:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14841:65:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14841:65:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14767:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14779:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14790:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14703:210:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15033:140:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15043:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15055:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15066:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15051:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15051:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15043:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15139:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15152:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15163:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15148:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15148:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IDScore_$1411_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15079:59:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15079:87:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15079:87:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IDScore_$1411__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15005:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15017:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15028:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14919:254:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15301:148:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15311:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15323:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15334:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15319:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15319:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15311:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15415:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15428:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15439:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15424:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15424:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IDecentraDollar_$1575_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15347:67:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15347:95:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15347:95:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IDecentraDollar_$1575__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15273:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15285:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15296:4:9",
                            "type": ""
                          }
                        ],
                        "src": "15179:270:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15576:147:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15586:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15598:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15609:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15594:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15594:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15586:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15689:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15702:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15713:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15698:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15698:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IDecentraStock_$1603_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15622:66:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15622:94:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15622:94:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IDecentraStock_$1603__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15548:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15560:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15571:4:9",
                            "type": ""
                          }
                        ],
                        "src": "15455:268:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15900:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15910:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15922:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15933:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15918:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15918:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15910:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15957:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15968:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15953:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15953:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15976:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15982:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15972:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15972:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15946:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15946:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15946:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16002:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16136:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16010:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16010:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16002:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15880:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15895:4:9",
                            "type": ""
                          }
                        ],
                        "src": "15729:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16325:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16335:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16347:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16358:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16343:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16343:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16335:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16382:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16393:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16378:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16378:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16401:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16407:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16397:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16397:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16371:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16371:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16371:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16427:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16561:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16435:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16435:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16427:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16305:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16320:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16154:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16750:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16760:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16772:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16783:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16768:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16768:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16760:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16807:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16818:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16803:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16803:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16826:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16832:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16822:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16822:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16796:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16796:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16796:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16852:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16986:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16860:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16860:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16852:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16730:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16745:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16579:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17175:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17185:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17197:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17208:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17193:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17193:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17185:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17232:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17243:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17228:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17228:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "17251:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17257:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17247:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17247:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17221:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17221:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17221:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17277:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17411:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17285:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17285:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17277:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17155:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17170:4:9",
                            "type": ""
                          }
                        ],
                        "src": "17004:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17600:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17610:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17622:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17633:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17618:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17618:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17610:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17657:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17668:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17653:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17653:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "17676:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17682:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17672:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17672:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17646:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17646:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17646:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17702:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17836:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17710:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17710:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17702:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17580:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17595:4:9",
                            "type": ""
                          }
                        ],
                        "src": "17429:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18025:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18035:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18047:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18058:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18043:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18043:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18035:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18082:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18093:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18078:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18078:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18101:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18107:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18097:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18097:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18071:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18071:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18071:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18127:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18261:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18135:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18135:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18127:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18005:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18020:4:9",
                            "type": ""
                          }
                        ],
                        "src": "17854:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18450:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18460:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18472:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18483:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18468:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18468:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18460:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18507:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18518:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18503:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18503:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18526:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18532:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18522:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18522:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18496:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18496:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18496:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18552:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "18686:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18560:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18560:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18552:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18430:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18445:4:9",
                            "type": ""
                          }
                        ],
                        "src": "18279:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18875:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18885:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18897:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18908:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18893:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18893:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18885:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18932:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18943:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18928:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18928:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "18951:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18957:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "18947:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18947:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18921:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18921:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18921:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18977:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19111:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18985:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18985:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18977:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18855:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18870:4:9",
                            "type": ""
                          }
                        ],
                        "src": "18704:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19300:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19310:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19322:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19333:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19318:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19318:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19310:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19357:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19368:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19353:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19353:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "19376:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19382:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19372:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19372:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19346:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19346:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19346:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19402:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19536:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19410:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19410:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19402:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19280:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19295:4:9",
                            "type": ""
                          }
                        ],
                        "src": "19129:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19725:248:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19735:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19747:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19758:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19743:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19743:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19735:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19782:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19793:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19778:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19778:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "19801:4:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19807:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19797:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19797:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19771:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19771:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19771:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19827:139:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "19961:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19835:124:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19835:131:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19827:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19705:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19720:4:9",
                            "type": ""
                          }
                        ],
                        "src": "19554:419:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20077:124:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20087:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20099:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20110:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20095:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20095:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20087:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "20167:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20180:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20191:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20176:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20176:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20123:43:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20123:71:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20123:71:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20049:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20061:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20072:4:9",
                            "type": ""
                          }
                        ],
                        "src": "19979:222:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20247:243:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20257:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20273:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "20267:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20267:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "20257:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20285:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "20307:6:9"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "20315:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20303:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20303:17:9"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "20289:10:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20431:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "20433:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20433:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20433:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20374:10:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20386:18:9",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20371:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20371:34:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20410:10:9"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20422:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20407:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20407:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "20368:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20368:62:9"
                              },
                              "nodeType": "YulIf",
                              "src": "20365:2:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20469:2:9",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "20473:10:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20462:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20462:22:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20462:22:9"
                            }
                          ]
                        },
                        "name": "allocateMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "20231:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "20240:6:9",
                            "type": ""
                          }
                        ],
                        "src": "20207:283:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20562:265:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20667:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "20669:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20669:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20669:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20639:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20647:18:9",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20636:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20636:30:9"
                              },
                              "nodeType": "YulIf",
                              "src": "20633:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20719:41:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "20735:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20743:4:9",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20731:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20731:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20754:4:9",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "20750:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20750:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "20727:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20727:33:9"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "20719:4:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20797:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "20809:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20815:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20805:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20805:15:9"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "20797:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "20546:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "20557:4:9",
                            "type": ""
                          }
                        ],
                        "src": "20496:331:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20900:265:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21005:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "21007:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21007:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21007:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20977:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20985:18:9",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20974:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20974:30:9"
                              },
                              "nodeType": "YulIf",
                              "src": "20971:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21057:41:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "21073:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21081:4:9",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21069:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21069:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21092:4:9",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "21088:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21088:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21065:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21065:33:9"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "21057:4:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21135:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "21147:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21153:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21143:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21143:15:9"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "21135:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "20884:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "20895:4:9",
                            "type": ""
                          }
                        ],
                        "src": "20833:332:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21229:40:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21240:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21256:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "21250:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21250:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "21240:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21212:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21222:6:9",
                            "type": ""
                          }
                        ],
                        "src": "21171:98:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21334:40:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21345:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21361:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "21355:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21355:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "21345:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21317:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21327:6:9",
                            "type": ""
                          }
                        ],
                        "src": "21275:99:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21475:73:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21492:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21497:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21485:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21485:19:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21485:19:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21513:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21532:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21537:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21528:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21528:14:9"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21513:11:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21447:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21452:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "21463:11:9",
                            "type": ""
                          }
                        ],
                        "src": "21380:168:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21667:34:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21677:18:9",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "21692:3:9"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21677:11:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21639:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21644:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "21655:11:9",
                            "type": ""
                          }
                        ],
                        "src": "21554:147:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21803:73:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21820:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21825:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21813:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21813:19:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21813:19:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21841:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21860:3:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21865:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21856:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21856:14:9"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21841:11:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21775:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21780:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "21791:11:9",
                            "type": ""
                          }
                        ],
                        "src": "21707:169:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21926:261:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21936:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21959:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "21941:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21941:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "21936:1:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21970:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21993:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "21975:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21975:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "21970:1:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22133:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "22135:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22135:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22135:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "22054:1:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22061:66:9",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "22129:1:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22057:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22057:74:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22051:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22051:81:9"
                              },
                              "nodeType": "YulIf",
                              "src": "22048:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22165:16:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "22176:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22179:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22172:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22172:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "22165:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "21913:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "21916:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "21922:3:9",
                            "type": ""
                          }
                        ],
                        "src": "21882:305:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22235:143:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22245:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "22268:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "22250:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22250:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "22245:1:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22279:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22302:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "22284:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22284:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "22279:1:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22326:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "22328:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22328:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22328:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22323:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "22316:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22316:9:9"
                              },
                              "nodeType": "YulIf",
                              "src": "22313:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22358:14:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "22367:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "22370:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "22363:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22363:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "22358:1:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "22224:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "22227:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "22233:1:9",
                            "type": ""
                          }
                        ],
                        "src": "22193:185:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22457:775:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22467:15:9",
                              "value": {
                                "name": "_power",
                                "nodeType": "YulIdentifier",
                                "src": "22476:6:9"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "22467:5:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22491:14:9",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "22500:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "22491:4:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22549:677:9",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "22637:22:9",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "22639:16:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "22639:18:9"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "22639:18:9"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "22615:4:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nodeType": "YulIdentifier",
                                              "src": "22625:3:9"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "22630:4:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "22621:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "22621:14:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "22612:2:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22612:24:9"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "22609:2:9"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "22704:419:9",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "23084:25:9",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "23097:5:9"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "23104:4:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "23093:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "23093:16:9"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "23084:5:9"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "22679:8:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22689:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "22675:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22675:16:9"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "22672:2:9"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23136:23:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "23148:4:9"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "23154:4:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "23144:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23144:15:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "23136:4:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23172:44:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "23207:8:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shift_right_1_unsigned",
                                        "nodeType": "YulIdentifier",
                                        "src": "23184:22:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23184:32:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "23172:8:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "22525:8:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22535:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22522:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22522:15:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "22538:2:9",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "22518:3:9",
                                "statements": []
                              },
                              "src": "22514:712:9"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_power",
                            "nodeType": "YulTypedName",
                            "src": "22412:6:9",
                            "type": ""
                          },
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "22420:5:9",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "22427:8:9",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nodeType": "YulTypedName",
                            "src": "22437:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "22445:5:9",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "22452:4:9",
                            "type": ""
                          }
                        ],
                        "src": "22384:848:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23304:219:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23314:31:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "23340:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "23322:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23322:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "23314:4:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23354:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "23384:8:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "23366:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23366:27:9"
                              },
                              "variableNames": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "23354:8:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23403:113:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "23433:4:9"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "23439:8:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23449:66:9",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "23412:20:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23412:104:9"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "23403:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "23279:4:9",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "23285:8:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "23298:5:9",
                            "type": ""
                          }
                        ],
                        "src": "23238:285:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23589:1013:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23784:20:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23786:10:9",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "23795:1:9",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "23786:5:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "23797:5:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "23774:8:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "23767:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23767:16:9"
                              },
                              "nodeType": "YulIf",
                              "src": "23764:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23829:20:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "23831:10:9",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "23840:1:9",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "23831:5:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "23842:5:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "23823:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "23816:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23816:12:9"
                              },
                              "nodeType": "YulIf",
                              "src": "23813:2:9"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "23959:20:9",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "23961:10:9",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "23970:1:9",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "23961:5:9"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "23972:5:9"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "23952:27:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23957:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "24003:176:9",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "24038:22:9",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24040:16:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24040:18:9"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "24040:18:9"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "24023:8:9"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "24033:3:9",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "24020:2:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24020:17:9"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "24017:2:9"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "24073:25:9",
                                        "value": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "24086:1:9",
                                              "type": "",
                                              "value": "2"
                                            },
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "24089:8:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "exp",
                                            "nodeType": "YulIdentifier",
                                            "src": "24082:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24082:16:9"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "24073:5:9"
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "24129:22:9",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "24131:16:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "24131:18:9"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "24131:18:9"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "24117:5:9"
                                            },
                                            {
                                              "name": "max",
                                              "nodeType": "YulIdentifier",
                                              "src": "24124:3:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "24114:2:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "24114:14:9"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "24111:2:9"
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "24164:5:9"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "23988:191:9",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23993:1:9",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "23909:4:9"
                              },
                              "nodeType": "YulSwitch",
                              "src": "23902:277:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "24311:123:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "24325:28:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "24338:4:9"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "24344:8:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "24334:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24334:19:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "24325:5:9"
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "24384:22:9",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "24386:16:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "24386:18:9"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "24386:18:9"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "power",
                                          "nodeType": "YulIdentifier",
                                          "src": "24372:5:9"
                                        },
                                        {
                                          "name": "max",
                                          "nodeType": "YulIdentifier",
                                          "src": "24379:3:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "24369:2:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24369:14:9"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "24366:2:9"
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "24419:5:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "24214:4:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24220:2:9",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "24211:2:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24211:12:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "24228:8:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24238:2:9",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "24225:2:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24225:16:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "24207:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24207:35:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "24263:4:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24269:3:9",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "24260:2:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24260:13:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "24278:8:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24288:2:9",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "24275:2:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24275:16:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "24256:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24256:36:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "24191:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24191:111:9"
                              },
                              "nodeType": "YulIf",
                              "src": "24188:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24444:57:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24478:1:9",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "24481:4:9"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "24487:8:9"
                                  },
                                  {
                                    "name": "max",
                                    "nodeType": "YulIdentifier",
                                    "src": "24497:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "24459:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24459:42:9"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "24444:5:9"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "24451:4:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "24540:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "24542:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24542:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "24542:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "24517:5:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "max",
                                        "nodeType": "YulIdentifier",
                                        "src": "24528:3:9"
                                      },
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "24533:4:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "24524:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24524:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "24514:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24514:25:9"
                              },
                              "nodeType": "YulIf",
                              "src": "24511:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24571:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "24584:5:9"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "24591:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "24580:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24580:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "24571:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "23559:4:9",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "23565:8:9",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nodeType": "YulTypedName",
                            "src": "23575:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "23583:5:9",
                            "type": ""
                          }
                        ],
                        "src": "23529:1073:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24656:300:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24666:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "24689:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "24671:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24671:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "24666:1:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24700:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "24723:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "24705:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24705:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "24700:1:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "24898:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "24900:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "24900:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "24900:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "24810:1:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "24803:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24803:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "24796:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24796:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "24818:1:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "24825:66:9",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "24893:1:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "24821:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "24821:74:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "24815:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24815:81:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "24792:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24792:105:9"
                              },
                              "nodeType": "YulIf",
                              "src": "24789:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24930:20:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "24945:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "24948:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "24941:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24941:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "24930:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "24639:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "24642:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "24648:7:9",
                            "type": ""
                          }
                        ],
                        "src": "24608:348:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25007:146:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25017:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25040:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "25022:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25022:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "25017:1:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25051:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25074:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "25056:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25056:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "25051:1:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "25098:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "25100:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "25100:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "25100:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25092:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25095:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "25089:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25089:8:9"
                              },
                              "nodeType": "YulIf",
                              "src": "25086:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25130:17:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "25142:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "25145:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "25138:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25138:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "25130:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "24993:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "24996:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "25002:4:9",
                            "type": ""
                          }
                        ],
                        "src": "24962:191:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25204:51:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25214:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "25243:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "25225:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25225:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "25214:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25186:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "25196:7:9",
                            "type": ""
                          }
                        ],
                        "src": "25159:96:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25314:51:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25324:35:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "25353:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "25335:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25335:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "25324:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25296:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "25306:7:9",
                            "type": ""
                          }
                        ],
                        "src": "25261:104:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25413:48:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25423:32:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "25448:5:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "25441:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25441:13:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "25434:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25434:21:9"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "25423:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25395:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "25405:7:9",
                            "type": ""
                          }
                        ],
                        "src": "25371:90:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25512:81:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25522:65:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "25537:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25544:42:9",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "25533:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25533:54:9"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "25522:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25494:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "25504:7:9",
                            "type": ""
                          }
                        ],
                        "src": "25467:126:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25644:32:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25654:16:9",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "25665:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "25654:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25626:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "25636:7:9",
                            "type": ""
                          }
                        ],
                        "src": "25599:77:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25750:66:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25760:50:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "25804:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "25773:30:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25773:37:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "25760:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_address_payable_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25730:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "25740:9:9",
                            "type": ""
                          }
                        ],
                        "src": "25682:134:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25898:82:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25908:66:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "25968:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IDScore_$1411_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "25921:46:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25921:53:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "25908:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IDScore_$1411_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "25878:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "25888:9:9",
                            "type": ""
                          }
                        ],
                        "src": "25822:158:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26062:53:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26072:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26103:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "26085:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26085:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "26072:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IDScore_$1411_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26042:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "26052:9:9",
                            "type": ""
                          }
                        ],
                        "src": "25986:129:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26205:90:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26215:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26283:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IDecentraDollar_$1575_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "26228:54:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26228:61:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "26215:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IDecentraDollar_$1575_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26185:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "26195:9:9",
                            "type": ""
                          }
                        ],
                        "src": "26121:174:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26385:53:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26395:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26426:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "26408:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26408:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "26395:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IDecentraDollar_$1575_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26365:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "26375:9:9",
                            "type": ""
                          }
                        ],
                        "src": "26301:137:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26527:89:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26537:73:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26604:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IDecentraStock_$1603_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "26550:53:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26550:60:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "26537:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IDecentraStock_$1603_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26507:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "26517:9:9",
                            "type": ""
                          }
                        ],
                        "src": "26444:172:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26705:53:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26715:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26746:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "26728:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26728:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "26715:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IDecentraStock_$1603_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26685:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "26695:9:9",
                            "type": ""
                          }
                        ],
                        "src": "26622:136:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26824:66:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26834:50:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26878:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "26847:30:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26847:37:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "26834:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26804:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "26814:9:9",
                            "type": ""
                          }
                        ],
                        "src": "26764:126:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26956:53:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26966:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "26997:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "26979:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26979:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "26966:9:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26936:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "26946:9:9",
                            "type": ""
                          }
                        ],
                        "src": "26896:113:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27066:103:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "27089:3:9"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "27094:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "27099:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "27076:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27076:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27076:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "27147:3:9"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "27152:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27143:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27143:16:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27161:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27136:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27136:27:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27136:27:9"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "27048:3:9",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "27053:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "27058:6:9",
                            "type": ""
                          }
                        ],
                        "src": "27015:154:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27224:258:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "27234:10:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "27243:1:9",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "27238:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27303:63:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "27328:3:9"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "27333:1:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "27324:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "27324:11:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "27347:3:9"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "27352:1:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "27343:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "27343:11:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "27337:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "27337:18:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "27317:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27317:39:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27317:39:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "27264:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "27267:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "27261:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27261:13:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "27275:19:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "27277:15:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "27286:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "27289:2:9",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "27282:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27282:10:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "27277:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "27257:3:9",
                                "statements": []
                              },
                              "src": "27253:113:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27400:76:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "27450:3:9"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "27455:6:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "27446:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "27446:16:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "27464:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "27439:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27439:27:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27439:27:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "27381:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "27384:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "27378:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27378:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "27375:2:9"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "27206:3:9",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "27211:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "27216:6:9",
                            "type": ""
                          }
                        ],
                        "src": "27175:307:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27539:269:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27549:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "27563:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27569:1:9",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "27559:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27559:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "27549:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "27580:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "27610:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27616:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "27606:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27606:12:9"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "27584:18:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27657:51:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "27671:27:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "27685:6:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "27693:4:9",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "27681:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27681:17:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "27671:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "27637:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "27630:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27630:26:9"
                              },
                              "nodeType": "YulIf",
                              "src": "27627:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27760:42:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x22",
                                        "nodeType": "YulIdentifier",
                                        "src": "27774:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27774:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27774:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "27724:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "27747:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27755:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "27744:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27744:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "27721:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27721:38:9"
                              },
                              "nodeType": "YulIf",
                              "src": "27718:2:9"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "27523:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "27532:6:9",
                            "type": ""
                          }
                        ],
                        "src": "27488:320:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27857:190:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27867:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "27894:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "27876:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27876:24:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "27867:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27990:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "27992:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27992:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27992:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "27915:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27922:66:9",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "27912:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27912:77:9"
                              },
                              "nodeType": "YulIf",
                              "src": "27909:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28021:20:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "28032:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28039:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28028:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28028:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "28021:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "27843:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "27853:3:9",
                            "type": ""
                          }
                        ],
                        "src": "27814:233:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28081:152:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28098:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28101:77:9",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28091:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28091:88:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28091:88:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28195:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28198:4:9",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28188:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28188:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28188:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28219:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28222:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "28212:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28212:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28212:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "28053:180:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28267:152:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28284:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28287:77:9",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28277:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28277:88:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28277:88:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28381:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28384:4:9",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28374:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28374:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28374:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28405:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28408:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "28398:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28398:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28398:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "28239:180:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28453:152:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28470:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28473:77:9",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28463:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28463:88:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28463:88:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28567:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28570:4:9",
                                    "type": "",
                                    "value": "0x22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28560:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28560:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28560:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28591:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28594:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "28584:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28584:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28584:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x22",
                        "nodeType": "YulFunctionDefinition",
                        "src": "28425:180:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28639:152:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28656:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28659:77:9",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28649:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28649:88:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28649:88:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28753:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28756:4:9",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28746:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28746:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28746:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28777:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28780:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "28770:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28770:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28770:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "28611:180:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28845:54:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28855:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "28873:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28880:2:9",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28869:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28869:14:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28889:2:9",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "28885:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28885:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "28865:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28865:28:9"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "28855:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "28828:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "28838:6:9",
                            "type": ""
                          }
                        ],
                        "src": "28797:102:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28956:51:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28966:34:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28991:1:9",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "28994:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "28987:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28987:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nodeType": "YulIdentifier",
                                  "src": "28966:8:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_1_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "28937:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nodeType": "YulTypedName",
                            "src": "28947:8:9",
                            "type": ""
                          }
                        ],
                        "src": "28905:102:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29056:79:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "29113:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29122:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29125:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "29115:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29115:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29115:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29079:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29104:5:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "29086:17:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29086:24:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "29076:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29076:35:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "29069:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29069:43:9"
                              },
                              "nodeType": "YulIf",
                              "src": "29066:2:9"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29049:5:9",
                            "type": ""
                          }
                        ],
                        "src": "29013:122:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29192:87:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "29257:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29266:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29269:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "29259:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29259:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29259:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29215:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29248:5:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address_payable",
                                          "nodeType": "YulIdentifier",
                                          "src": "29222:25:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29222:32:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "29212:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29212:43:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "29205:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29205:51:9"
                              },
                              "nodeType": "YulIf",
                              "src": "29202:2:9"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29185:5:9",
                            "type": ""
                          }
                        ],
                        "src": "29141:138:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29325:76:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "29379:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29388:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29391:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "29381:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29381:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29381:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29348:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29370:5:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "29355:14:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29355:21:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "29345:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29345:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "29338:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29338:40:9"
                              },
                              "nodeType": "YulIf",
                              "src": "29335:2:9"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29318:5:9",
                            "type": ""
                          }
                        ],
                        "src": "29285:116:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29450:79:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "29507:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29516:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29519:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "29509:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29509:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29509:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29473:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "29498:5:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "29480:17:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "29480:24:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "29470:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29470:35:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "29463:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29463:43:9"
                              },
                              "nodeType": "YulIf",
                              "src": "29460:2:9"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29443:5:9",
                            "type": ""
                          }
                        ],
                        "src": "29407:122:9"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IDScore_$1411_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDScore_$1411_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IDecentraDollar_$1575_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDecentraDollar_$1575_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IDecentraStock_$1603_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IDecentraStock_$1603_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n\n        mstore(add(pos, 0), \"delegateFunctionCall Failed\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"DecentraCore: Caller is not a mi\")\n\n        mstore(add(pos, 32), \"nter\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n\n        mstore(add(pos, 0), \"DecentraCore: Caller is not an a\")\n\n        mstore(add(pos, 32), \"ctive member\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"DecentraCore: Invalid Input Priv\")\n\n        mstore(add(pos, 32), \"ledge\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"DecentraCore: Caller is not a bu\")\n\n        mstore(add(pos, 32), \"rner\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n\n        mstore(add(pos, 0), \"DecentraCore: Caller is not a de\")\n\n        mstore(add(pos, 32), \"legator\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n\n        mstore(add(pos, 0), \"You Have already voted on this p\")\n\n        mstore(add(pos, 32), \"roposal\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n\n        mstore(add(pos, 0), \"This proposal has already been e\")\n\n        mstore(add(pos, 32), \"xecuted\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_payable_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_string_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n        mstore(add(headStart, 256), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value8,  tail)\n\n        mstore(add(headStart, 288), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value9,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IDScore_$1411__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDScore_$1411_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IDecentraDollar_$1575__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDecentraDollar_$1575_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IDecentraStock_$1603__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IDecentraStock_$1603_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IDScore_$1411_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IDScore_$1411_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDScore_$1411_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDecentraDollar_$1575_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IDecentraDollar_$1575_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDecentraDollar_$1575_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDecentraStock_$1603_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IDecentraStock_$1603_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IDecentraStock_$1603_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061019c5760003560e01c806383ac74f9116100ec578063bd621fa31161008a578063c9d27afe11610064578063c9d27afe146105d4578063d7c93180146105fd578063f2fde38b14610626578063f46eccc41461064f5761019c565b8063bd621fa314610545578063c1ba4e591461056e578063c3396bdc146105975761019c565b80638da5cb5b116100c65780638da5cb5b146104965780639c94f651146104c1578063a120c14f146104ea578063b1050da5146105155761019c565b806383ac74f9146103f3578063860838a51461041c5780638d23fc61146104595761019c565b8063371fa854116101595780636122698f116101335780636122698f1461035f578063715018a61461038a5780637563dd54146103a157806382f4f5b4146103ca5761019c565b8063371fa854146102ce5780633e410717146102f957806351bcc28b146103225761019c565b8063013cf08b146101a157806303d41e0e146101e75780631268b7d2146102245780631703a0181461024d578063184a0ae91461027857806330dce62b146102a3575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c391906125a7565b61068c565b6040516101de9a99989796959493929190612b62565b60405180910390f35b3480156101f357600080fd5b5061020e600480360381019061020991906123f6565b61084a565b60405161021b9190612c35565b60405180910390f35b34801561023057600080fd5b5061024b60048036038101906102469190612542565b61086a565b005b34801561025957600080fd5b50610262610a5f565b60405161026f9190612de1565b60405180910390f35b34801561028457600080fd5b5061028d610a65565b60405161029a9190612de1565b60405180910390f35b3480156102af57600080fd5b506102b8610a6b565b6040516102c59190612c86565b60405180910390f35b3480156102da57600080fd5b506102e3610a91565b6040516102f09190612de1565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b91906123f6565b610a97565b005b34801561032e57600080fd5b50610349600480360381019061034491906123f6565b610c62565b6040516103569190612c35565b60405180910390f35b34801561036b57600080fd5b50610374610c82565b6040516103819190612c50565b60405180910390f35b34801561039657600080fd5b5061039f610ca8565b005b3480156103ad57600080fd5b506103c860048036038101906103c39190612473565b610de2565b005b3480156103d657600080fd5b506103f160048036038101906103ec9190612542565b610ea9565b005b3480156103ff57600080fd5b5061041a60048036038101906104159190612542565b610fc8565b005b34801561042857600080fd5b50610443600480360381019061043e91906123f6565b6110e7565b6040516104509190612c35565b60405180910390f35b34801561046557600080fd5b50610480600480360381019061047b91906123f6565b611107565b60405161048d9190612c35565b60405180910390f35b3480156104a257600080fd5b506104ab611127565b6040516104b89190612b17565b60405180910390f35b3480156104cd57600080fd5b506104e860048036038101906104e39190612542565b611150565b005b3480156104f657600080fd5b506104ff61126f565b60405161050c9190612c6b565b60405180910390f35b61052f600480360381019061052a91906124af565b611295565b60405161053c9190612de1565b60405180910390f35b34801561055157600080fd5b5061056c6004803603810190610567919061241f565b6114a8565b005b34801561057a57600080fd5b50610595600480360381019061059091906125a7565b611622565b005b3480156105a357600080fd5b506105be60048036038101906105b991906123f6565b6116a8565b6040516105cb9190612de1565b60405180910390f35b3480156105e057600080fd5b506105fb60048036038101906105f691906125f9565b6116c0565b005b34801561060957600080fd5b50610624600480360381019061061f9190612542565b611b2e565b005b34801561063257600080fd5b5061064d600480360381019061064891906123f6565b611c4d565b005b34801561065b57600080fd5b50610676600480360381019061067191906123f6565b611df6565b6040516106839190612c35565b60405180910390f35b60096020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900460ff169080600701805461073990613294565b80601f016020809104026020016040519081016040528092919081815260200182805461076590613294565b80156107b25780601f10610787576101008083540402835291602001916107b2565b820191906000526020600020905b81548152906001019060200180831161079557829003601f168201915b5050505050908060080180546107c790613294565b80601f01602080910402602001604051908101604052809291908181526020018280546107f390613294565b80156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b505050505090508a565b600b6020528060005260406000206000915054906101000a900460ff1681565b610872611e16565b73ffffffffffffffffffffffffffffffffffffffff16610890611127565b73ffffffffffffffffffffffffffffffffffffffff16146108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90612d61565b60405180910390fd5b6000811180156108f65750600481105b610935576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092c90612d21565b60405180910390fd5b6001811415610997576001600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b60028114156109f9576001600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6003811415610a5b576001600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b60035481565b60025481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b610a9f611e16565b73ffffffffffffffffffffffffffffffffffffffff16610abd611127565b73ffffffffffffffffffffffffffffffffffffffff1614610b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0a90612d61565b60405180910390fd5b600760008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610bc2576000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610c5f565b6001600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555042600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50565b600c6020528060005260406000206000915054906101000a900460ff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cb0611e16565b73ffffffffffffffffffffffffffffffffffffffff16610cce611127565b73ffffffffffffffffffffffffffffffffffffffff1614610d24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1b90612d61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610dea611e16565b73ffffffffffffffffffffffffffffffffffffffff16610e08611127565b73ffffffffffffffffffffffffffffffffffffffff1614610e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5590612d61565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610ea4573d6000803e3d6000fd5b505050565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610f35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2c90612cc1565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638896637e83836040518363ffffffff1660e01b8152600401610f92929190612c0c565b600060405180830381600087803b158015610fac57600080fd5b505af1158015610fc0573d6000803e3d6000fd5b505050505050565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104b90612cc1565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637daf440d83836040518363ffffffff1660e01b81526004016110b1929190612c0c565b600060405180830381600087803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b505050505050565b60076020528060005260406000206000915054906101000a900460ff1681565b600d6020528060005260406000206000915054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166111dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d390612d41565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637468b9ba83836040518363ffffffff1660e01b8152600401611239929190612c0c565b600060405180830381600087803b15801561125357600080fd5b505af1158015611267573d6000803e3d6000fd5b505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663247f8e14336040518263ffffffff1660e01b81526004016112f29190612b17565b60206040518083038186803b15801561130a57600080fd5b505afa15801561131e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611342919061257e565b611381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137890612d01565b60405180910390fd5b60016000815480929190611394906132c6565b919050555060006009600060015481526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508481600501819055506000816003018190555060008160040181905550600081600501819055504281600201819055508381600701908051906020019061148092919061217f565b5082816008019080519060200190611499929190612205565b50600154915050949350505050565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152b90612d81565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168360405161155c9190612b00565b6000604051808303816000865af19150503d8060008114611599576040519150601f19603f3d011682016040523d82523d6000602084013e61159e565b606091505b5091509150816115e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115da90612ca1565b60405180910390fd5b7f0d655f469da3540d6d1544bc544b2b76944af903f3df556b9666822dbebc85f58482604051611614929190612b32565b60405180910390a150505050565b61162a611e16565b73ffffffffffffffffffffffffffffffffffffffff16611648611127565b73ffffffffffffffffffffffffffffffffffffffff161461169e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169590612d61565b60405180910390fd5b8060038190555050565b60086020528060005260406000206000915090505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663247f8e14336040518263ffffffff1660e01b815260040161171b9190612b17565b60206040518083038186803b15801561173357600080fd5b505afa158015611747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176b919061257e565b6117aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a190612d01565b60405180910390fd5b60006009600084815260200190815260200160002090506001151581600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611857576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184e90612da1565b60405180910390fd5b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359d177e6336040518263ffffffff1660e01b81526004016118b49190612b17565b60206040518083038186803b1580156118cc57600080fd5b505afa1580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190491906125d0565b905081600401600081548092919061191b906132c6565b919050558260040181905550604051806060016040528084151581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001828152508260090160008460040154815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600101559050506119fe818360030154611e1e90919063ffffffff16565b8260030181905550600182600a0160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611aca57600080fd5b505afa158015611ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0291906125d0565b90506000611b14846003015483611e34565b90508015611b2657611b2586611e76565b5b505050505050565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611bba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bb190612d41565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eb97781583836040518363ffffffff1660e01b8152600401611c17929190612c0c565b600060405180830381600087803b158015611c3157600080fd5b505af1158015611c45573d6000803e3d6000fd5b505050505050565b611c55611e16565b73ffffffffffffffffffffffffffffffffffffffff16611c73611127565b73ffffffffffffffffffffffffffffffffffffffff1614611cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc090612d61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611d39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3090612ce1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a6020528060005260406000206000915054906101000a900460ff1681565b600033905090565b60008183611e2c9190612ed0565b905092915050565b600080611e438484600261210c565b905082841415611e57576001915050611e70565b6003548110611e6a576001915050611e70565b60009150505b92915050565b6000600960008381526020019081526020016000209050600254611ea782600201544261216990919063ffffffff16565b10611eeb5760018160060160006101000a81548160ff02191690831515021790555060008160060160016101000a81548160ff021916908315150217905550612108565b8060060160009054906101000a900460ff1615611f3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3490612dc1565b60405180910390fd5b60008060005b83600401548111611fc857600084600901600083815260200190815260200160002090508060000160009054906101000a900460ff1615611f9c57611f95816001015485611e1e90919063ffffffff16565b9350611fb6565b611fb3816001015484611e1e90919063ffffffff16565b92505b5080611fc1906132c6565b9050611f43565b50808211156120ca5761208b8360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600801805461200890613294565b80601f016020809104026020016040519081016040528092919081815260200182805461203490613294565b80156120815780601f1061205657610100808354040283529160200191612081565b820191906000526020600020905b81548152906001019060200180831161206457829003601f168201915b50505050506114a8565b60018360060160006101000a81548160ff02191690831515021790555060018360060160016101000a81548160ff021916908315150217905550612105565b60018360060160006101000a81548160ff02191690831515021790555060008360060160016101000a81548160ff0219169083151502179055505b50505b5050565b60008060018361211c9190612ed0565b600a6121289190612faa565b8561213391906130c8565b90506000600a600586846121479190612f26565b6121519190612ed0565b61215b9190612f26565b905080925050509392505050565b600081836121779190613122565b905092915050565b82805461218b90613294565b90600052602060002090601f0160209004810192826121ad57600085556121f4565b82601f106121c657805160ff19168380011785556121f4565b828001600101855582156121f4579182015b828111156121f35782518255916020019190600101906121d8565b5b509050612201919061228b565b5090565b82805461221190613294565b90600052602060002090601f016020900481019282612233576000855561227a565b82601f1061224c57805160ff191683800117855561227a565b8280016001018555821561227a579182015b8281111561227957825182559160200191906001019061225e565b5b509050612287919061228b565b5090565b5b808211156122a457600081600090555060010161228c565b5090565b60006122bb6122b684612e2d565b612dfc565b9050828152602081018484840111156122d357600080fd5b6122de848285613252565b509392505050565b60006122f96122f484612e5d565b612dfc565b90508281526020810184848401111561231157600080fd5b61231c848285613252565b509392505050565b600081359050612333816133e9565b92915050565b60008135905061234881613400565b92915050565b60008135905061235d81613417565b92915050565b60008151905061237281613417565b92915050565b600082601f83011261238957600080fd5b81356123998482602086016122a8565b91505092915050565b600082601f8301126123b357600080fd5b81356123c38482602086016122e6565b91505092915050565b6000813590506123db8161342e565b92915050565b6000815190506123f08161342e565b92915050565b60006020828403121561240857600080fd5b600061241684828501612324565b91505092915050565b6000806040838503121561243257600080fd5b600061244085828601612339565b925050602083013567ffffffffffffffff81111561245d57600080fd5b61246985828601612378565b9150509250929050565b6000806040838503121561248657600080fd5b600061249485828601612339565b92505060206124a5858286016123cc565b9150509250929050565b600080600080608085870312156124c557600080fd5b60006124d387828801612339565b94505060206124e4878288016123cc565b935050604085013567ffffffffffffffff81111561250157600080fd5b61250d878288016123a2565b925050606085013567ffffffffffffffff81111561252a57600080fd5b61253687828801612378565b91505092959194509250565b6000806040838503121561255557600080fd5b600061256385828601612324565b9250506020612574858286016123cc565b9150509250929050565b60006020828403121561259057600080fd5b600061259e84828501612363565b91505092915050565b6000602082840312156125b957600080fd5b60006125c7848285016123cc565b91505092915050565b6000602082840312156125e257600080fd5b60006125f0848285016123e1565b91505092915050565b6000806040838503121561260c57600080fd5b600061261a858286016123cc565b925050602061262b8582860161234e565b9150509250929050565b61263e816131b0565b82525050565b61264d81613168565b82525050565b61265c81613156565b82525050565b61266b8161317a565b82525050565b600061267c82612e8d565b6126868185612ea3565b9350612696818560208601613261565b61269f816133cb565b840191505092915050565b60006126b582612e8d565b6126bf8185612eb4565b93506126cf818560208601613261565b80840191505092915050565b6126e4816131c2565b82525050565b6126f3816131e6565b82525050565b6127028161320a565b82525050565b600061271382612e98565b61271d8185612ebf565b935061272d818560208601613261565b612736816133cb565b840191505092915050565b600061274e601b83612ebf565b91507f64656c656761746546756e6374696f6e43616c6c204661696c656400000000006000830152602082019050919050565b600061278e602483612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f742061206d6960008301527f6e746572000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006127f4602683612ebf565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061285a602c83612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f7420616e206160008301527f6374697665206d656d62657200000000000000000000000000000000000000006020830152604082019050919050565b60006128c0602583612ebf565b91507f446563656e747261436f72653a20496e76616c696420496e707574205072697660008301527f6c656467650000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612926602483612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f74206120627560008301527f726e6572000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061298c602083612ebf565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006129cc602783612ebf565b91507f446563656e747261436f72653a2043616c6c6572206973206e6f74206120646560008301527f6c656761746f72000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a32602783612ebf565b91507f596f75204861766520616c726561647920766f746564206f6e2074686973207060008301527f726f706f73616c000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612a98602783612ebf565b91507f546869732070726f706f73616c2068617320616c7265616479206265656e206560008301527f78656375746564000000000000000000000000000000000000000000000000006020830152604082019050919050565b612afa816131a6565b82525050565b6000612b0c82846126aa565b915081905092915050565b6000602082019050612b2c6000830184612653565b92915050565b6000604082019050612b476000830185612635565b8181036020830152612b598184612671565b90509392505050565b600061014082019050612b78600083018d612653565b612b85602083018c612644565b612b92604083018b612af1565b612b9f606083018a612af1565b612bac6080830189612af1565b612bb960a0830188612af1565b612bc660c0830187612662565b612bd360e0830186612662565b818103610100830152612be68185612708565b9050818103610120830152612bfb8184612671565b90509b9a5050505050505050505050565b6000604082019050612c216000830185612653565b612c2e6020830184612af1565b9392505050565b6000602082019050612c4a6000830184612662565b92915050565b6000602082019050612c6560008301846126db565b92915050565b6000602082019050612c8060008301846126ea565b92915050565b6000602082019050612c9b60008301846126f9565b92915050565b60006020820190508181036000830152612cba81612741565b9050919050565b60006020820190508181036000830152612cda81612781565b9050919050565b60006020820190508181036000830152612cfa816127e7565b9050919050565b60006020820190508181036000830152612d1a8161284d565b9050919050565b60006020820190508181036000830152612d3a816128b3565b9050919050565b60006020820190508181036000830152612d5a81612919565b9050919050565b60006020820190508181036000830152612d7a8161297f565b9050919050565b60006020820190508181036000830152612d9a816129bf565b9050919050565b60006020820190508181036000830152612dba81612a25565b9050919050565b60006020820190508181036000830152612dda81612a8b565b9050919050565b6000602082019050612df66000830184612af1565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612e2357612e2261339c565b5b8060405250919050565b600067ffffffffffffffff821115612e4857612e4761339c565b5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612e7857612e7761339c565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000612edb826131a6565b9150612ee6836131a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f1b57612f1a61330f565b5b828201905092915050565b6000612f31826131a6565b9150612f3c836131a6565b925082612f4c57612f4b61333e565b5b828204905092915050565b6000808291508390505b6001851115612fa157808604811115612f7d57612f7c61330f565b5b6001851615612f8c5780820291505b8081029050612f9a856133dc565b9450612f61565b94509492505050565b6000612fb5826131a6565b9150612fc0836131a6565b9250612fed7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612ff5565b905092915050565b60008261300557600190506130c1565b8161301357600090506130c1565b8160018114613029576002811461303357613062565b60019150506130c1565b60ff8411156130455761304461330f565b5b8360020a91508482111561305c5761305b61330f565b5b506130c1565b5060208310610133831016604e8410600b84101617156130975782820a9050838111156130925761309161330f565b5b6130c1565b6130a48484846001612f57565b925090508184048111156130bb576130ba61330f565b5b81810290505b9392505050565b60006130d3826131a6565b91506130de836131a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156131175761311661330f565b5b828202905092915050565b600061312d826131a6565b9150613138836131a6565b92508282101561314b5761314a61330f565b5b828203905092915050565b600061316182613186565b9050919050565b600061317382613186565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006131bb8261322e565b9050919050565b60006131cd826131d4565b9050919050565b60006131df82613186565b9050919050565b60006131f1826131f8565b9050919050565b600061320382613186565b9050919050565b60006132158261321c565b9050919050565b600061322782613186565b9050919050565b600061323982613240565b9050919050565b600061324b82613186565b9050919050565b82818337600083830152505050565b60005b8381101561327f578082015181840152602081019050613264565b8381111561328e576000848401525b50505050565b600060028204905060018216806132ac57607f821691505b602082108114156132c0576132bf61336d565b5b50919050565b60006132d1826131a6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156133045761330361330f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b6133f281613156565b81146133fd57600080fd5b50565b61340981613168565b811461341457600080fd5b50565b6134208161317a565b811461342b57600080fd5b50565b613437816131a6565b811461344257600080fd5b5056fea264697066735822122085fa4f984247cfc2d370943e481a1a051ed3620a1d67ba313dee2fcaf4cca64864736f6c63430008000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83AC74F9 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xBD621FA3 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC9D27AFE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x5D4 JUMPI DUP1 PUSH4 0xD7C93180 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xF46ECCC4 EQ PUSH2 0x64F JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0xBD621FA3 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xC1BA4E59 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xC3396BDC EQ PUSH2 0x597 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x9C94F651 EQ PUSH2 0x4C1 JUMPI DUP1 PUSH4 0xA120C14F EQ PUSH2 0x4EA JUMPI DUP1 PUSH4 0xB1050DA5 EQ PUSH2 0x515 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x83AC74F9 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0x860838A5 EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0x8D23FC61 EQ PUSH2 0x459 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x371FA854 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x6122698F GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x6122698F EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x7563DD54 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x82F4F5B4 EQ PUSH2 0x3CA JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x371FA854 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x3E410717 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x51BCC28B EQ PUSH2 0x322 JUMPI PUSH2 0x19C JUMP JUMPDEST DUP1 PUSH4 0x13CF08B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x3D41E0E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x1268B7D2 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x1703A018 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x184A0AE9 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x30DCE62B EQ PUSH2 0x2A3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0x86A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x262 PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B8 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2C86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0xC62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x374 PUSH2 0xC82 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F PUSH2 0xCA8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x2473 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0xFC8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x480 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AB PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0x1150 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FF PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52A SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH2 0x14A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x595 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x1622 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x2DE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH2 0x16C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x624 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x648 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1C4D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x676 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x671 SWAP2 SWAP1 PUSH2 0x23F6 JUMP JUMPDEST PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x683 SWAP2 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD DUP1 SLOAD PUSH2 0x739 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x765 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7B2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x787 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7B2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x795 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x7C7 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7F3 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x840 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x815 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x840 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x823 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP11 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x872 PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x890 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x8F6 JUMPI POP PUSH1 0x4 DUP2 LT JUMPDEST PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92C SWAP1 PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x997 JUMPI PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP2 EQ ISZERO PUSH2 0x9F9 JUMPI PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0xA5B JUMPI PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA9F PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABD PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0A SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCB0 PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCCE PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1B SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDEA PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE08 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE55 SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2C SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8896637E DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104B SWAP1 PUSH2 0x2CC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7DAF440D DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D3 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7468B9BA DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1239 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1267 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x247F8E14 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F2 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH2 0x1381 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1378 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 SWAP1 PUSH2 0x32C6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x7 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1480 SWAP3 SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST POP DUP3 DUP2 PUSH1 0x8 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1499 SWAP3 SWAP2 SWAP1 PUSH2 0x2205 JUMP JUMPDEST POP PUSH1 0x1 SLOAD SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1534 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x152B SWAP1 PUSH2 0x2D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x155C SWAP2 SWAP1 PUSH2 0x2B00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1599 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x159E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x15E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DA SWAP1 PUSH2 0x2CA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xD655F469DA3540D6D1544BC544B2B76944AF903F3DF556B9666822DBEBC85F5 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1614 SWAP3 SWAP2 SWAP1 PUSH2 0x2B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x162A PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1648 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1695 SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x247F8E14 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171B SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x176B SWAP2 SWAP1 PUSH2 0x257E JUMP JUMPDEST PUSH2 0x17AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A1 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 PUSH1 0xA ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x1857 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184E SWAP1 PUSH2 0x2DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x59D177E6 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18B4 SWAP2 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x191B SWAP1 PUSH2 0x32C6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP3 PUSH1 0x9 ADD PUSH1 0x0 DUP5 PUSH1 0x4 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH2 0x19FE DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x1E1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0xA ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ACA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1ADE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B02 SWAP2 SWAP1 PUSH2 0x25D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B14 DUP5 PUSH1 0x3 ADD SLOAD DUP4 PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1B26 JUMPI PUSH2 0x1B25 DUP7 PUSH2 0x1E76 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BBA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP1 PUSH2 0x2D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xEB977815 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C17 SWAP3 SWAP2 SWAP1 PUSH2 0x2C0C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1C55 PUSH2 0x1E16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C73 PUSH2 0x1127 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC0 SWAP1 PUSH2 0x2D61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D30 SWAP1 PUSH2 0x2CE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1E2C SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E43 DUP5 DUP5 PUSH1 0x2 PUSH2 0x210C JUMP JUMPDEST SWAP1 POP DUP3 DUP5 EQ ISZERO PUSH2 0x1E57 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT PUSH2 0x1E6A JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x2 SLOAD PUSH2 0x1EA7 DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x2169 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT PUSH2 0x1EEB JUMPI PUSH1 0x1 DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2108 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F34 SWAP1 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x4 ADD SLOAD DUP2 GT PUSH2 0x1FC8 JUMPI PUSH1 0x0 DUP5 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1F9C JUMPI PUSH2 0x1F95 DUP2 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1E1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x1FB3 DUP2 PUSH1 0x1 ADD SLOAD DUP5 PUSH2 0x1E1E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x1FC1 SWAP1 PUSH2 0x32C6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F43 JUMP JUMPDEST POP DUP1 DUP3 GT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x208B DUP4 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x2008 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2034 SWAP1 PUSH2 0x3294 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2081 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2056 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2081 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2064 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2105 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 PUSH1 0x6 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 PUSH2 0x211C SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0xA PUSH2 0x2128 SWAP2 SWAP1 PUSH2 0x2FAA JUMP JUMPDEST DUP6 PUSH2 0x2133 SWAP2 SWAP1 PUSH2 0x30C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xA PUSH1 0x5 DUP7 DUP5 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x2F26 JUMP JUMPDEST PUSH2 0x2151 SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST PUSH2 0x215B SWAP2 SWAP1 PUSH2 0x2F26 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2177 SWAP2 SWAP1 PUSH2 0x3122 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x218B SWAP1 PUSH2 0x3294 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x21AD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x21F4 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x21C6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x21F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x21F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x21F3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x21D8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2201 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2211 SWAP1 PUSH2 0x3294 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2233 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x227A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x224C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x227A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x227A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2279 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x225E JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2287 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x22A4 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x228C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BB PUSH2 0x22B6 DUP5 PUSH2 0x2E2D JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22DE DUP5 DUP3 DUP6 PUSH2 0x3252 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F9 PUSH2 0x22F4 DUP5 PUSH2 0x2E5D JUMP JUMPDEST PUSH2 0x2DFC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x231C DUP5 DUP3 DUP6 PUSH2 0x3252 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2333 DUP2 PUSH2 0x33E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2348 DUP2 PUSH2 0x3400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x235D DUP2 PUSH2 0x3417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2372 DUP2 PUSH2 0x3417 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2399 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23C3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x22E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23DB DUP2 PUSH2 0x342E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x23F0 DUP2 PUSH2 0x342E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2416 DUP5 DUP3 DUP6 ADD PUSH2 0x2324 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2440 DUP6 DUP3 DUP7 ADD PUSH2 0x2339 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x245D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2469 DUP6 DUP3 DUP7 ADD PUSH2 0x2378 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2494 DUP6 DUP3 DUP7 ADD PUSH2 0x2339 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A5 DUP6 DUP3 DUP7 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP8 DUP3 DUP9 ADD PUSH2 0x2339 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24E4 DUP8 DUP3 DUP9 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2501 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x250D DUP8 DUP3 DUP9 ADD PUSH2 0x23A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x252A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2536 DUP8 DUP3 DUP9 ADD PUSH2 0x2378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2563 DUP6 DUP3 DUP7 ADD PUSH2 0x2324 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2574 DUP6 DUP3 DUP7 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x259E DUP5 DUP3 DUP6 ADD PUSH2 0x2363 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25C7 DUP5 DUP3 DUP6 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25F0 DUP5 DUP3 DUP6 ADD PUSH2 0x23E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x260C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x261A DUP6 DUP3 DUP7 ADD PUSH2 0x23CC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x262B DUP6 DUP3 DUP7 ADD PUSH2 0x234E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x263E DUP2 PUSH2 0x31B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x264D DUP2 PUSH2 0x3168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x265C DUP2 PUSH2 0x3156 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x266B DUP2 PUSH2 0x317A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x2686 DUP2 DUP6 PUSH2 0x2EA3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2696 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3261 JUMP JUMPDEST PUSH2 0x269F DUP2 PUSH2 0x33CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B5 DUP3 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x26BF DUP2 DUP6 PUSH2 0x2EB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x26CF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3261 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26E4 DUP2 PUSH2 0x31C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x26F3 DUP2 PUSH2 0x31E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2702 DUP2 PUSH2 0x320A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2713 DUP3 PUSH2 0x2E98 JUMP JUMPDEST PUSH2 0x271D DUP2 DUP6 PUSH2 0x2EBF JUMP JUMPDEST SWAP4 POP PUSH2 0x272D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3261 JUMP JUMPDEST PUSH2 0x2736 DUP2 PUSH2 0x33CB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274E PUSH1 0x1B DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x64656C656761746546756E6374696F6E43616C6C204661696C65640000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278E PUSH1 0x24 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F742061206D69 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6E74657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F4 PUSH1 0x26 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285A PUSH1 0x2C DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F7420616E2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6374697665206D656D6265720000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C0 PUSH1 0x25 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A20496E76616C696420496E7075742050726976 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C65646765000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2926 PUSH1 0x24 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F742061206275 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x726E657200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298C PUSH1 0x20 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CC PUSH1 0x27 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x446563656E747261436F72653A2043616C6C6572206973206E6F742061206465 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C656761746F7200000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A32 PUSH1 0x27 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x596F75204861766520616C726561647920766F746564206F6E20746869732070 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x726F706F73616C00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A98 PUSH1 0x27 DUP4 PUSH2 0x2EBF JUMP JUMPDEST SWAP2 POP PUSH32 0x546869732070726F706F73616C2068617320616C7265616479206265656E2065 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7865637574656400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AFA DUP2 PUSH2 0x31A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B0C DUP3 DUP5 PUSH2 0x26AA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B47 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2635 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2B59 DUP2 DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x2B78 PUSH1 0x0 DUP4 ADD DUP14 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x2B85 PUSH1 0x20 DUP4 ADD DUP13 PUSH2 0x2644 JUMP JUMPDEST PUSH2 0x2B92 PUSH1 0x40 DUP4 ADD DUP12 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2B9F PUSH1 0x60 DUP4 ADD DUP11 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2BAC PUSH1 0x80 DUP4 ADD DUP10 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2BB9 PUSH1 0xA0 DUP4 ADD DUP9 PUSH2 0x2AF1 JUMP JUMPDEST PUSH2 0x2BC6 PUSH1 0xC0 DUP4 ADD DUP8 PUSH2 0x2662 JUMP JUMPDEST PUSH2 0x2BD3 PUSH1 0xE0 DUP4 ADD DUP7 PUSH2 0x2662 JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x2BE6 DUP2 DUP6 PUSH2 0x2708 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x2BFB DUP2 DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C21 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2653 JUMP JUMPDEST PUSH2 0x2C2E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2AF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2662 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CBA DUP2 PUSH2 0x2741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CDA DUP2 PUSH2 0x2781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CFA DUP2 PUSH2 0x27E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D1A DUP2 PUSH2 0x284D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D3A DUP2 PUSH2 0x28B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D5A DUP2 PUSH2 0x2919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D7A DUP2 PUSH2 0x297F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D9A DUP2 PUSH2 0x29BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DBA DUP2 PUSH2 0x2A25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DDA DUP2 PUSH2 0x2A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DF6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2AF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2E23 JUMPI PUSH2 0x2E22 PUSH2 0x339C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E48 JUMPI PUSH2 0x2E47 PUSH2 0x339C JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E78 JUMPI PUSH2 0x2E77 PUSH2 0x339C JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDB DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE6 DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2F1B JUMPI PUSH2 0x2F1A PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F31 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F3C DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F4C JUMPI PUSH2 0x2F4B PUSH2 0x333E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2FA1 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2F7D JUMPI PUSH2 0x2F7C PUSH2 0x330F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2F8C JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2F9A DUP6 PUSH2 0x33DC JUMP JUMPDEST SWAP5 POP PUSH2 0x2F61 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB5 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC0 DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x2FED PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2FF5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3005 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x30C1 JUMP JUMPDEST DUP2 PUSH2 0x3013 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x30C1 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3029 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3033 JUMPI PUSH2 0x3062 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x30C1 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3045 JUMPI PUSH2 0x3044 PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x305C JUMPI PUSH2 0x305B PUSH2 0x330F JUMP JUMPDEST JUMPDEST POP PUSH2 0x30C1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3097 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x3092 JUMPI PUSH2 0x3091 PUSH2 0x330F JUMP JUMPDEST JUMPDEST PUSH2 0x30C1 JUMP JUMPDEST PUSH2 0x30A4 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2F57 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x30BB JUMPI PUSH2 0x30BA PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D3 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x30DE DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3117 JUMPI PUSH2 0x3116 PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312D DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x3138 DUP4 PUSH2 0x31A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x314B JUMPI PUSH2 0x314A PUSH2 0x330F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3161 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3173 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31BB DUP3 PUSH2 0x322E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31CD DUP3 PUSH2 0x31D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31DF DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F1 DUP3 PUSH2 0x31F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3203 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3215 DUP3 PUSH2 0x321C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3227 DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3239 DUP3 PUSH2 0x3240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x324B DUP3 PUSH2 0x3186 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x327F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3264 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x328E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x32AC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x32C0 JUMPI PUSH2 0x32BF PUSH2 0x336D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32D1 DUP3 PUSH2 0x31A6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3304 JUMPI PUSH2 0x3303 PUSH2 0x330F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33F2 DUP2 PUSH2 0x3156 JUMP JUMPDEST DUP2 EQ PUSH2 0x33FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3409 DUP2 PUSH2 0x3168 JUMP JUMPDEST DUP2 EQ PUSH2 0x3414 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3420 DUP2 PUSH2 0x317A JUMP JUMPDEST DUP2 EQ PUSH2 0x342B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3437 DUP2 PUSH2 0x31A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x3442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 STATICCALL 0x4F SWAP9 TIMESTAMP SELFBALANCE 0xCF 0xC2 0xD3 PUSH17 0x943E481A1A051ED3620A1D67BA313DEE2F 0xCA DELEGATECALL 0xCC 0xA6 0x48 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
              "sourceMap": "628:14953:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1556:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1922:39;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12809:499;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1005:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1162:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;768:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13746:281;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2125:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1239:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1700:145:0;;;;;;;;;;;;;:::i;:::-;;6323:152:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14648:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14266:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1340:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2330:42;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15428:151:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1082:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6821:586;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:323;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7620:95;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1461:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9896:830;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15039:148;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1994:240:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1742:39:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1556:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1922:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;12809:499::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;12977:1:4::1;12964:10;:14;:32;;;;;12995:1;12982:10;:14;12964:32;12943:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;13087:1;13073:10;:15;13069:71;;;13125:4;13104:7;:18;13112:9;13104:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13069:71;13167:1;13153:10;:15;13149:71;;;13205:4;13184:7;:18;13192:9;13184:18;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13149:71;13247:1;13233:10;:15;13229:73;;;13287:4;13264:9;:20;13274:9;13264:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;13229:73;12809:499:::0;;:::o;1005:21::-;;;;:::o;883:27::-;;;;:::o;1162:24::-;;;;;;;;;;;;;:::o;768:25::-;;;;:::o;13746:281::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;13827:14:4::1;:23;13842:7;13827:23;;;;;;;;;;;;;;;;;;;;;;;;;13823:198;;;13892:5;13866:14;:23;13881:7;13866:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;13823:198;;;13954:4;13928:14;:23;13943:7;13928:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;13995:15;13972:11;:20;13984:7;13972:20;;;;;;;;;;;;;;;:38;;;;13823:198;13746:281:::0;:::o;2125:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;1239:21::-;;;;;;;;;;;;;:::o;1700:145:0:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1769:40;;1790:6;::::0;::::1;;;;;;;;1769:40;;;;;;;;;;;;1836:1;1819:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1700:145::o:0;6323:152:4:-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6447:3:4::1;:12;;:21;6460:7;6447:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6323:152:::0;;:::o;14648:148::-;4207:7;:19;4215:10;4207:19;;;;;;;;;;;;;;;;;;;;;;;;;4199:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;14762:2:::1;;;;;;;;;;;:13;;;14776:3;14781:7;14762:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14648:148:::0;;:::o;14266:144::-;4207:7;:19;4215:10;4207:19;;;;;;;;;;;;;;;;;;;;;;;;;4199:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;14380:2:::1;;;;;;;;;;;:9;;;14390:3;14395:7;14380:23;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14266:144:::0;;:::o;1340:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;2330:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;1068:85:0:-;1114:7;1140:6;;;;;;;;;;;1133:13;;1068:85;:::o;15428:151:4:-;4438:7;:19;4446:10;4438:19;;;;;;;;;;;;;;;;;;;;;;;;;4430:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;15544:2:::1;;;;;;;;;;;:12;;;15557:5;15564:7;15544:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15428:151:::0;;:::o;1082:25::-;;;;;;;;;;;;;:::o;6821:586::-;7019:7;4678:6;;;;;;;;;;;:18;;;4697:10;4678:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4657:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;7038:10:::1;;:12;;;;;;;;;:::i;:::-;;;;;;7060:18;7081:9;:21;7091:10;;7081:21;;;;;;;;;;;7060:42;;7122:10;7112:1;:7;;;:20;;;;;;;;;;;;;;;;;;7153:7;7142:1;:8;;;:18;;;;;;;;;;;;;;;;;;7181:7;7170:1;:8;;:18;;;;7214:1;7198;:13;;:17;;;;7236:1;7225;:8;;:12;;;;7258:1;7247;:8;;:12;;;;7285:15;7269:1;:13;;:31;;;;7327:13;7310:1;:14;;:30;;;;;;;;;;;;:::i;:::-;;7364:9;7350:1;:11;;:23;;;;;;;;;;;;:::i;:::-;;7390:10;;7383:17;;;6821:586:::0;;;;;;:::o;5706:323::-;4992:10;:22;5003:10;4992:22;;;;;;;;;;;;;;;;;;;;;;;;;4971:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;5856:12:::1;5870:17:::0;5891:7:::1;:12;;5904:9;5891:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5855:59;;;;5932:7;5924:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;5986:36;6008:7;6017:4;5986:36;;;;;;;:::i;:::-;;;;;;;;5089:1;;5706:323:::0;;:::o;7620:95::-;1291:12:0;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7701:7:4::1;7692:6;:16;;;;7620:95:::0;:::o;1461:46::-;;;;;;;;;;;;;;;;;:::o;9896:830::-;4678:6;;;;;;;;;;;:18;;;4697:10;4678:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4657:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;10019:18:::1;10040:9;:22;10050:11;10040:22;;;;;;;;;;;10019:43;;10116:4;10093:27;;:1;:7;;:19;10101:10;10093:19;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;;10072:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;10195:10;10208:6;;;;;;;;;;;:27;;;10236:10;10208:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10195:52;;10269:1;:8;;;:10;;;;;;;;;:::i;:::-;;;;;10258:1;:8;;:21;;;;10309:116;;;;;;;;10339:16;10309:116;;;;;;10376:10;10309:116;;;;;;10412:2;10309:116;;::::0;10289:1:::1;:7;;:17;10297:1;:8;;;10289:17;;;;;;;;;;;:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10451:21;10469:2;10451:1;:13;;;:17;;:21;;;;:::i;:::-;10435:1;:13;;:37;;;;10504:4;10482:1;:7;;:19;10490:10;10482:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;10518:10;10531:2;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10518:29;;10603:8;10614:34;10630:1;:13;;;10645:2;10614:15;:34::i;:::-;10603:45;;10662:3;10658:62;;;10681:28;10697:11;10681:15;:28::i;:::-;10658:62;4788:1;;;;9896:830:::0;;:::o;15039:148::-;4438:7;:19;4446:10;4438:19;;;;;;;;;;;;;;;;;;;;;;;;;4430:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;15155:2:::1;;;;;;;;;;;:9;;;15165:5;15172:7;15155:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;15039:148:::0;;:::o;1994:240:0:-;1291:12;:10;:12::i;:::-;1280:23;;:7;:5;:7::i;:::-;:23;;;1272:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2102:1:::1;2082:22;;:8;:22;;;;2074:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:8;2162:38;;2183:6;::::0;::::1;;;;;;;;2162:38;;;;;;;;;;;;2219:8;2210:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;1994:240:::0;:::o;1742:39:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;586:96:2:-;639:7;665:10;658:17;;586:96;:::o;2672::3:-;2730:7;2760:1;2756;:5;;;;:::i;:::-;2749:12;;2672:96;;;;:::o;8885:401:4:-;9000:4;9020:22;9045:38;9054:11;9067:12;9081:1;9045:8;:38::i;:::-;9020:63;;9112:12;9097:11;:27;9093:69;;;9147:4;9140:11;;;;;9093:69;9193:6;;9175:14;:24;9171:109;;9222:4;9215:11;;;;;9171:109;9264:5;9257:12;;;8885:401;;;;;:::o;11000:1383::-;11065:18;11086:9;:22;11096:11;11086:22;;;;;;;;;;;11065:43;;11161:12;;11123:34;11143:1;:13;;;11123:15;:19;;:34;;;;:::i;:::-;:50;11119:1258;;11258:4;11245:1;:10;;;:17;;;;;;;;;;;;;;;;;;11295:5;11276:1;:16;;;:24;;;;;;;;;;;;;;;;;;11119:1258;;;11400:1;:10;;;;;;;;;;;;11399:11;11391:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;11469:11;11498;11637:9;11632:277;11657:1;:8;;;11652:1;:13;11632:277;;11690:14;11707:1;:7;;:10;11715:1;11707:10;;;;;;;;;;;11690:27;;11740:1;:11;;;;;;;;;;;;11736:159;;;11781:21;11789:1;:12;;;11781:3;:7;;:21;;;;:::i;:::-;11775:27;;11736:159;;;11855:21;11863:1;:12;;;11855:3;:7;;:21;;;;:::i;:::-;11849:27;;11736:159;11632:277;11667:3;;;;:::i;:::-;;;11632:277;;;;11991:3;11985;:9;11981:386;;;12014:43;12035:1;:8;;;;;;;;;;;;12045:1;:11;;12014:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;:43::i;:::-;12149:4;12136:1;:10;;;:17;;;;;;;;;;;;;;;;;;12190:4;12171:1;:16;;;:23;;;;;;;;;;;;;;;;;;11981:386;;;12306:4;12293:1;:10;;;:17;;;;;;;;;;;;;;;;;;12347:5;12328:1;:16;;;:24;;;;;;;;;;;;;;;;;;11981:386;11119:1258;;;11000:1383;;:::o;8074:403::-;8207:16;8283:17;8334:1;8321:10;:14;;;;:::i;:::-;8316:2;:20;;;;:::i;:::-;8303:10;:33;;;;:::i;:::-;8283:53;;8385:17;8440:2;8435:1;8419:12;8407:9;:24;;;;:::i;:::-;8406:30;;;;:::i;:::-;8405:37;;;;:::i;:::-;8385:57;;8460:9;8452:18;;;;8074:403;;;;;:::o;3039:96:3:-;3097:7;3127:1;3123;:5;;;;:::i;:::-;3116:12;;3039:96;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:342:9:-;;109:64;124:48;165:6;124:48;:::i;:::-;109:64;:::i;:::-;100:73;;196:6;189:5;182:21;234:4;227:5;223:16;272:3;263:6;258:3;254:16;251:25;248:2;;;289:1;286;279:12;248:2;302:41;336:6;331:3;326;302:41;:::i;:::-;90:259;;;;;;:::o;355:344::-;;458:65;473:49;515:6;473:49;:::i;:::-;458:65;:::i;:::-;449:74;;546:6;539:5;532:21;584:4;577:5;573:16;622:3;613:6;608:3;604:16;601:25;598:2;;;639:1;636;629:12;598:2;652:41;686:6;681:3;676;652:41;:::i;:::-;439:260;;;;;;:::o;705:139::-;;789:6;776:20;767:29;;805:33;832:5;805:33;:::i;:::-;757:87;;;;:::o;850:155::-;;942:6;929:20;920:29;;958:41;993:5;958:41;:::i;:::-;910:95;;;;:::o;1011:133::-;;1092:6;1079:20;1070:29;;1108:30;1132:5;1108:30;:::i;:::-;1060:84;;;;:::o;1150:137::-;;1235:6;1229:13;1220:22;;1251:30;1275:5;1251:30;:::i;:::-;1210:77;;;;:::o;1306:271::-;;1410:3;1403:4;1395:6;1391:17;1387:27;1377:2;;1428:1;1425;1418:12;1377:2;1468:6;1455:20;1493:78;1567:3;1559:6;1552:4;1544:6;1540:17;1493:78;:::i;:::-;1484:87;;1367:210;;;;;:::o;1597:273::-;;1702:3;1695:4;1687:6;1683:17;1679:27;1669:2;;1720:1;1717;1710:12;1669:2;1760:6;1747:20;1785:79;1860:3;1852:6;1845:4;1837:6;1833:17;1785:79;:::i;:::-;1776:88;;1659:211;;;;;:::o;1876:139::-;;1960:6;1947:20;1938:29;;1976:33;2003:5;1976:33;:::i;:::-;1928:87;;;;:::o;2021:143::-;;2109:6;2103:13;2094:22;;2125:33;2152:5;2125:33;:::i;:::-;2084:80;;;;:::o;2170:262::-;;2278:2;2266:9;2257:7;2253:23;2249:32;2246:2;;;2294:1;2291;2284:12;2246:2;2337:1;2362:53;2407:7;2398:6;2387:9;2383:22;2362:53;:::i;:::-;2352:63;;2308:117;2236:196;;;;:::o;2438:534::-;;;2580:2;2568:9;2559:7;2555:23;2551:32;2548:2;;;2596:1;2593;2586:12;2548:2;2639:1;2664:61;2717:7;2708:6;2697:9;2693:22;2664:61;:::i;:::-;2654:71;;2610:125;2802:2;2791:9;2787:18;2774:32;2833:18;2825:6;2822:30;2819:2;;;2865:1;2862;2855:12;2819:2;2893:62;2947:7;2938:6;2927:9;2923:22;2893:62;:::i;:::-;2883:72;;2745:220;2538:434;;;;;:::o;2978:423::-;;;3111:2;3099:9;3090:7;3086:23;3082:32;3079:2;;;3127:1;3124;3117:12;3079:2;3170:1;3195:61;3248:7;3239:6;3228:9;3224:22;3195:61;:::i;:::-;3185:71;;3141:125;3305:2;3331:53;3376:7;3367:6;3356:9;3352:22;3331:53;:::i;:::-;3321:63;;3276:118;3069:332;;;;;:::o;3407:938::-;;;;;3593:3;3581:9;3572:7;3568:23;3564:33;3561:2;;;3610:1;3607;3600:12;3561:2;3653:1;3678:61;3731:7;3722:6;3711:9;3707:22;3678:61;:::i;:::-;3668:71;;3624:125;3788:2;3814:53;3859:7;3850:6;3839:9;3835:22;3814:53;:::i;:::-;3804:63;;3759:118;3944:2;3933:9;3929:18;3916:32;3975:18;3967:6;3964:30;3961:2;;;4007:1;4004;3997:12;3961:2;4035:63;4090:7;4081:6;4070:9;4066:22;4035:63;:::i;:::-;4025:73;;3887:221;4175:2;4164:9;4160:18;4147:32;4206:18;4198:6;4195:30;4192:2;;;4238:1;4235;4228:12;4192:2;4266:62;4320:7;4311:6;4300:9;4296:22;4266:62;:::i;:::-;4256:72;;4118:220;3551:794;;;;;;;:::o;4351:407::-;;;4476:2;4464:9;4455:7;4451:23;4447:32;4444:2;;;4492:1;4489;4482:12;4444:2;4535:1;4560:53;4605:7;4596:6;4585:9;4581:22;4560:53;:::i;:::-;4550:63;;4506:117;4662:2;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4633:118;4434:324;;;;;:::o;4764:278::-;;4880:2;4868:9;4859:7;4855:23;4851:32;4848:2;;;4896:1;4893;4886:12;4848:2;4939:1;4964:61;5017:7;5008:6;4997:9;4993:22;4964:61;:::i;:::-;4954:71;;4910:125;4838:204;;;;:::o;5048:262::-;;5156:2;5144:9;5135:7;5131:23;5127:32;5124:2;;;5172:1;5169;5162:12;5124:2;5215:1;5240:53;5285:7;5276:6;5265:9;5261:22;5240:53;:::i;:::-;5230:63;;5186:117;5114:196;;;;:::o;5316:284::-;;5435:2;5423:9;5414:7;5410:23;5406:32;5403:2;;;5451:1;5448;5441:12;5403:2;5494:1;5519:64;5575:7;5566:6;5555:9;5551:22;5519:64;:::i;:::-;5509:74;;5465:128;5393:207;;;;:::o;5606:401::-;;;5728:2;5716:9;5707:7;5703:23;5699:32;5696:2;;;5744:1;5741;5734:12;5696:2;5787:1;5812:53;5857:7;5848:6;5837:9;5833:22;5812:53;:::i;:::-;5802:63;;5758:117;5914:2;5940:50;5982:7;5973:6;5962:9;5958:22;5940:50;:::i;:::-;5930:60;;5885:115;5686:321;;;;;:::o;6013:147::-;6108:45;6147:5;6108:45;:::i;:::-;6103:3;6096:58;6086:74;;:::o;6166:142::-;6269:32;6295:5;6269:32;:::i;:::-;6264:3;6257:45;6247:61;;:::o;6314:118::-;6401:24;6419:5;6401:24;:::i;:::-;6396:3;6389:37;6379:53;;:::o;6438:109::-;6519:21;6534:5;6519:21;:::i;:::-;6514:3;6507:34;6497:50;;:::o;6553:360::-;;6667:38;6699:5;6667:38;:::i;:::-;6721:70;6784:6;6779:3;6721:70;:::i;:::-;6714:77;;6800:52;6845:6;6840:3;6833:4;6826:5;6822:16;6800:52;:::i;:::-;6877:29;6899:6;6877:29;:::i;:::-;6872:3;6868:39;6861:46;;6643:270;;;;;:::o;6919:373::-;;7051:38;7083:5;7051:38;:::i;:::-;7105:88;7186:6;7181:3;7105:88;:::i;:::-;7098:95;;7202:52;7247:6;7242:3;7235:4;7228:5;7224:16;7202:52;:::i;:::-;7279:6;7274:3;7270:16;7263:23;;7027:265;;;;;:::o;7298:163::-;7401:53;7448:5;7401:53;:::i;:::-;7396:3;7389:66;7379:82;;:::o;7467:179::-;7578:61;7633:5;7578:61;:::i;:::-;7573:3;7566:74;7556:90;;:::o;7652:177::-;7762:60;7816:5;7762:60;:::i;:::-;7757:3;7750:73;7740:89;;:::o;7835:364::-;;7951:39;7984:5;7951:39;:::i;:::-;8006:71;8070:6;8065:3;8006:71;:::i;:::-;7999:78;;8086:52;8131:6;8126:3;8119:4;8112:5;8108:16;8086:52;:::i;:::-;8163:29;8185:6;8163:29;:::i;:::-;8158:3;8154:39;8147:46;;7927:272;;;;;:::o;8205:325::-;;8368:67;8432:2;8427:3;8368:67;:::i;:::-;8361:74;;8465:29;8461:1;8456:3;8452:11;8445:50;8521:2;8516:3;8512:12;8505:19;;8351:179;;;:::o;8536:368::-;;8699:67;8763:2;8758:3;8699:67;:::i;:::-;8692:74;;8796:34;8792:1;8787:3;8783:11;8776:55;8862:6;8857:2;8852:3;8848:12;8841:28;8895:2;8890:3;8886:12;8879:19;;8682:222;;;:::o;8910:370::-;;9073:67;9137:2;9132:3;9073:67;:::i;:::-;9066:74;;9170:34;9166:1;9161:3;9157:11;9150:55;9236:8;9231:2;9226:3;9222:12;9215:30;9271:2;9266:3;9262:12;9255:19;;9056:224;;;:::o;9286:376::-;;9449:67;9513:2;9508:3;9449:67;:::i;:::-;9442:74;;9546:34;9542:1;9537:3;9533:11;9526:55;9612:14;9607:2;9602:3;9598:12;9591:36;9653:2;9648:3;9644:12;9637:19;;9432:230;;;:::o;9668:369::-;;9831:67;9895:2;9890:3;9831:67;:::i;:::-;9824:74;;9928:34;9924:1;9919:3;9915:11;9908:55;9994:7;9989:2;9984:3;9980:12;9973:29;10028:2;10023:3;10019:12;10012:19;;9814:223;;;:::o;10043:368::-;;10206:67;10270:2;10265:3;10206:67;:::i;:::-;10199:74;;10303:34;10299:1;10294:3;10290:11;10283:55;10369:6;10364:2;10359:3;10355:12;10348:28;10402:2;10397:3;10393:12;10386:19;;10189:222;;;:::o;10417:330::-;;10580:67;10644:2;10639:3;10580:67;:::i;:::-;10573:74;;10677:34;10673:1;10668:3;10664:11;10657:55;10738:2;10733:3;10729:12;10722:19;;10563:184;;;:::o;10753:371::-;;10916:67;10980:2;10975:3;10916:67;:::i;:::-;10909:74;;11013:34;11009:1;11004:3;11000:11;10993:55;11079:9;11074:2;11069:3;11065:12;11058:31;11115:2;11110:3;11106:12;11099:19;;10899:225;;;:::o;11130:371::-;;11293:67;11357:2;11352:3;11293:67;:::i;:::-;11286:74;;11390:34;11386:1;11381:3;11377:11;11370:55;11456:9;11451:2;11446:3;11442:12;11435:31;11492:2;11487:3;11483:12;11476:19;;11276:225;;;:::o;11507:371::-;;11670:67;11734:2;11729:3;11670:67;:::i;:::-;11663:74;;11767:34;11763:1;11758:3;11754:11;11747:55;11833:9;11828:2;11823:3;11819:12;11812:31;11869:2;11864:3;11860:12;11853:19;;11653:225;;;:::o;11884:118::-;11971:24;11989:5;11971:24;:::i;:::-;11966:3;11959:37;11949:53;;:::o;12008:271::-;;12160:93;12249:3;12240:6;12160:93;:::i;:::-;12153:100;;12270:3;12263:10;;12142:137;;;;:::o;12285:222::-;;12416:2;12405:9;12401:18;12393:26;;12429:71;12497:1;12486:9;12482:17;12473:6;12429:71;:::i;:::-;12383:124;;;;:::o;12513:435::-;;12698:2;12687:9;12683:18;12675:26;;12711:79;12787:1;12776:9;12772:17;12763:6;12711:79;:::i;:::-;12837:9;12831:4;12827:20;12822:2;12811:9;12807:18;12800:48;12865:76;12936:4;12927:6;12865:76;:::i;:::-;12857:84;;12665:283;;;;;:::o;12954:1405::-;;13379:3;13368:9;13364:19;13356:27;;13393:71;13461:1;13450:9;13446:17;13437:6;13393:71;:::i;:::-;13474:88;13558:2;13547:9;13543:18;13534:6;13474:88;:::i;:::-;13572:72;13640:2;13629:9;13625:18;13616:6;13572:72;:::i;:::-;13654;13722:2;13711:9;13707:18;13698:6;13654:72;:::i;:::-;13736:73;13804:3;13793:9;13789:19;13780:6;13736:73;:::i;:::-;13819;13887:3;13876:9;13872:19;13863:6;13819:73;:::i;:::-;13902:67;13964:3;13953:9;13949:19;13940:6;13902:67;:::i;:::-;13979;14041:3;14030:9;14026:19;14017:6;13979:67;:::i;:::-;14094:9;14088:4;14084:20;14078:3;14067:9;14063:19;14056:49;14122:78;14195:4;14186:6;14122:78;:::i;:::-;14114:86;;14248:9;14242:4;14238:20;14232:3;14221:9;14217:19;14210:49;14276:76;14347:4;14338:6;14276:76;:::i;:::-;14268:84;;13346:1013;;;;;;;;;;;;;:::o;14365:332::-;;14524:2;14513:9;14509:18;14501:26;;14537:71;14605:1;14594:9;14590:17;14581:6;14537:71;:::i;:::-;14618:72;14686:2;14675:9;14671:18;14662:6;14618:72;:::i;:::-;14491:206;;;;;:::o;14703:210::-;;14828:2;14817:9;14813:18;14805:26;;14841:65;14903:1;14892:9;14888:17;14879:6;14841:65;:::i;:::-;14795:118;;;;:::o;14919:254::-;;15066:2;15055:9;15051:18;15043:26;;15079:87;15163:1;15152:9;15148:17;15139:6;15079:87;:::i;:::-;15033:140;;;;:::o;15179:270::-;;15334:2;15323:9;15319:18;15311:26;;15347:95;15439:1;15428:9;15424:17;15415:6;15347:95;:::i;:::-;15301:148;;;;:::o;15455:268::-;;15609:2;15598:9;15594:18;15586:26;;15622:94;15713:1;15702:9;15698:17;15689:6;15622:94;:::i;:::-;15576:147;;;;:::o;15729:419::-;;15933:2;15922:9;15918:18;15910:26;;15982:9;15976:4;15972:20;15968:1;15957:9;15953:17;15946:47;16010:131;16136:4;16010:131;:::i;:::-;16002:139;;15900:248;;;:::o;16154:419::-;;16358:2;16347:9;16343:18;16335:26;;16407:9;16401:4;16397:20;16393:1;16382:9;16378:17;16371:47;16435:131;16561:4;16435:131;:::i;:::-;16427:139;;16325:248;;;:::o;16579:419::-;;16783:2;16772:9;16768:18;16760:26;;16832:9;16826:4;16822:20;16818:1;16807:9;16803:17;16796:47;16860:131;16986:4;16860:131;:::i;:::-;16852:139;;16750:248;;;:::o;17004:419::-;;17208:2;17197:9;17193:18;17185:26;;17257:9;17251:4;17247:20;17243:1;17232:9;17228:17;17221:47;17285:131;17411:4;17285:131;:::i;:::-;17277:139;;17175:248;;;:::o;17429:419::-;;17633:2;17622:9;17618:18;17610:26;;17682:9;17676:4;17672:20;17668:1;17657:9;17653:17;17646:47;17710:131;17836:4;17710:131;:::i;:::-;17702:139;;17600:248;;;:::o;17854:419::-;;18058:2;18047:9;18043:18;18035:26;;18107:9;18101:4;18097:20;18093:1;18082:9;18078:17;18071:47;18135:131;18261:4;18135:131;:::i;:::-;18127:139;;18025:248;;;:::o;18279:419::-;;18483:2;18472:9;18468:18;18460:26;;18532:9;18526:4;18522:20;18518:1;18507:9;18503:17;18496:47;18560:131;18686:4;18560:131;:::i;:::-;18552:139;;18450:248;;;:::o;18704:419::-;;18908:2;18897:9;18893:18;18885:26;;18957:9;18951:4;18947:20;18943:1;18932:9;18928:17;18921:47;18985:131;19111:4;18985:131;:::i;:::-;18977:139;;18875:248;;;:::o;19129:419::-;;19333:2;19322:9;19318:18;19310:26;;19382:9;19376:4;19372:20;19368:1;19357:9;19353:17;19346:47;19410:131;19536:4;19410:131;:::i;:::-;19402:139;;19300:248;;;:::o;19554:419::-;;19758:2;19747:9;19743:18;19735:26;;19807:9;19801:4;19797:20;19793:1;19782:9;19778:17;19771:47;19835:131;19961:4;19835:131;:::i;:::-;19827:139;;19725:248;;;:::o;19979:222::-;;20110:2;20099:9;20095:18;20087:26;;20123:71;20191:1;20180:9;20176:17;20167:6;20123:71;:::i;:::-;20077:124;;;;:::o;20207:283::-;;20273:2;20267:9;20257:19;;20315:4;20307:6;20303:17;20422:6;20410:10;20407:22;20386:18;20374:10;20371:34;20368:62;20365:2;;;20433:18;;:::i;:::-;20365:2;20473:10;20469:2;20462:22;20247:243;;;;:::o;20496:331::-;;20647:18;20639:6;20636:30;20633:2;;;20669:18;;:::i;:::-;20633:2;20754:4;20750:9;20743:4;20735:6;20731:17;20727:33;20719:41;;20815:4;20809;20805:15;20797:23;;20562:265;;;:::o;20833:332::-;;20985:18;20977:6;20974:30;20971:2;;;21007:18;;:::i;:::-;20971:2;21092:4;21088:9;21081:4;21073:6;21069:17;21065:33;21057:41;;21153:4;21147;21143:15;21135:23;;20900:265;;;:::o;21171:98::-;;21256:5;21250:12;21240:22;;21229:40;;;:::o;21275:99::-;;21361:5;21355:12;21345:22;;21334:40;;;:::o;21380:168::-;;21497:6;21492:3;21485:19;21537:4;21532:3;21528:14;21513:29;;21475:73;;;;:::o;21554:147::-;;21692:3;21677:18;;21667:34;;;;:::o;21707:169::-;;21825:6;21820:3;21813:19;21865:4;21860:3;21856:14;21841:29;;21803:73;;;;:::o;21882:305::-;;21941:20;21959:1;21941:20;:::i;:::-;21936:25;;21975:20;21993:1;21975:20;:::i;:::-;21970:25;;22129:1;22061:66;22057:74;22054:1;22051:81;22048:2;;;22135:18;;:::i;:::-;22048:2;22179:1;22176;22172:9;22165:16;;21926:261;;;;:::o;22193:185::-;;22250:20;22268:1;22250:20;:::i;:::-;22245:25;;22284:20;22302:1;22284:20;:::i;:::-;22279:25;;22323:1;22313:2;;22328:18;;:::i;:::-;22313:2;22370:1;22367;22363:9;22358:14;;22235:143;;;;:::o;22384:848::-;;;22476:6;22467:15;;22500:5;22491:14;;22514:712;22535:1;22525:8;22522:15;22514:712;;;22630:4;22625:3;22621:14;22615:4;22612:24;22609:2;;;22639:18;;:::i;:::-;22609:2;22689:1;22679:8;22675:16;22672:2;;;23104:4;23097:5;23093:16;23084:25;;22672:2;23154:4;23148;23144:15;23136:23;;23184:32;23207:8;23184:32;:::i;:::-;23172:44;;22514:712;;;22457:775;;;;;;;:::o;23238:285::-;;23322:23;23340:4;23322:23;:::i;:::-;23314:31;;23366:27;23384:8;23366:27;:::i;:::-;23354:39;;23412:104;23449:66;23439:8;23433:4;23412:104;:::i;:::-;23403:113;;23304:219;;;;:::o;23529:1073::-;;23774:8;23764:2;;23795:1;23786:10;;23797:5;;23764:2;23823:4;23813:2;;23840:1;23831:10;;23842:5;;23813:2;23909:4;23957:1;23952:27;;;;23993:1;23988:191;;;;23902:277;;23952:27;23970:1;23961:10;;23972:5;;;23988:191;24033:3;24023:8;24020:17;24017:2;;;24040:18;;:::i;:::-;24017:2;24089:8;24086:1;24082:16;24073:25;;24124:3;24117:5;24114:14;24111:2;;;24131:18;;:::i;:::-;24111:2;24164:5;;;23902:277;;24288:2;24278:8;24275:16;24269:3;24263:4;24260:13;24256:36;24238:2;24228:8;24225:16;24220:2;24214:4;24211:12;24207:35;24191:111;24188:2;;;24344:8;24338:4;24334:19;24325:28;;24379:3;24372:5;24369:14;24366:2;;;24386:18;;:::i;:::-;24366:2;24419:5;;24188:2;24459:42;24497:3;24487:8;24481:4;24478:1;24459:42;:::i;:::-;24444:57;;;;24533:4;24528:3;24524:14;24517:5;24514:25;24511:2;;;24542:18;;:::i;:::-;24511:2;24591:4;24584:5;24580:16;24571:25;;23589:1013;;;;;;:::o;24608:348::-;;24671:20;24689:1;24671:20;:::i;:::-;24666:25;;24705:20;24723:1;24705:20;:::i;:::-;24700:25;;24893:1;24825:66;24821:74;24818:1;24815:81;24810:1;24803:9;24796:17;24792:105;24789:2;;;24900:18;;:::i;:::-;24789:2;24948:1;24945;24941:9;24930:20;;24656:300;;;;:::o;24962:191::-;;25022:20;25040:1;25022:20;:::i;:::-;25017:25;;25056:20;25074:1;25056:20;:::i;:::-;25051:25;;25095:1;25092;25089:8;25086:2;;;25100:18;;:::i;:::-;25086:2;25145:1;25142;25138:9;25130:17;;25007:146;;;;:::o;25159:96::-;;25225:24;25243:5;25225:24;:::i;:::-;25214:35;;25204:51;;;:::o;25261:104::-;;25335:24;25353:5;25335:24;:::i;:::-;25324:35;;25314:51;;;:::o;25371:90::-;;25448:5;25441:13;25434:21;25423:32;;25413:48;;;:::o;25467:126::-;;25544:42;25537:5;25533:54;25522:65;;25512:81;;;:::o;25599:77::-;;25665:5;25654:16;;25644:32;;;:::o;25682:134::-;;25773:37;25804:5;25773:37;:::i;:::-;25760:50;;25750:66;;;:::o;25822:158::-;;25921:53;25968:5;25921:53;:::i;:::-;25908:66;;25898:82;;;:::o;25986:129::-;;26085:24;26103:5;26085:24;:::i;:::-;26072:37;;26062:53;;;:::o;26121:174::-;;26228:61;26283:5;26228:61;:::i;:::-;26215:74;;26205:90;;;:::o;26301:137::-;;26408:24;26426:5;26408:24;:::i;:::-;26395:37;;26385:53;;;:::o;26444:172::-;;26550:60;26604:5;26550:60;:::i;:::-;26537:73;;26527:89;;;:::o;26622:136::-;;26728:24;26746:5;26728:24;:::i;:::-;26715:37;;26705:53;;;:::o;26764:126::-;;26847:37;26878:5;26847:37;:::i;:::-;26834:50;;26824:66;;;:::o;26896:113::-;;26979:24;26997:5;26979:24;:::i;:::-;26966:37;;26956:53;;;:::o;27015:154::-;27099:6;27094:3;27089;27076:30;27161:1;27152:6;27147:3;27143:16;27136:27;27066:103;;;:::o;27175:307::-;27243:1;27253:113;27267:6;27264:1;27261:13;27253:113;;;27352:1;27347:3;27343:11;27337:18;27333:1;27328:3;27324:11;27317:39;27289:2;27286:1;27282:10;27277:15;;27253:113;;;27384:6;27381:1;27378:13;27375:2;;;27464:1;27455:6;27450:3;27446:16;27439:27;27375:2;27224:258;;;;:::o;27488:320::-;;27569:1;27563:4;27559:12;27549:22;;27616:1;27610:4;27606:12;27637:18;27627:2;;27693:4;27685:6;27681:17;27671:27;;27627:2;27755;27747:6;27744:14;27724:18;27721:38;27718:2;;;27774:18;;:::i;:::-;27718:2;27539:269;;;;:::o;27814:233::-;;27876:24;27894:5;27876:24;:::i;:::-;27867:33;;27922:66;27915:5;27912:77;27909:2;;;27992:18;;:::i;:::-;27909:2;28039:1;28032:5;28028:13;28021:20;;27857:190;;;:::o;28053:180::-;28101:77;28098:1;28091:88;28198:4;28195:1;28188:15;28222:4;28219:1;28212:15;28239:180;28287:77;28284:1;28277:88;28384:4;28381:1;28374:15;28408:4;28405:1;28398:15;28425:180;28473:77;28470:1;28463:88;28570:4;28567:1;28560:15;28594:4;28591:1;28584:15;28611:180;28659:77;28656:1;28649:88;28756:4;28753:1;28746:15;28780:4;28777:1;28770:15;28797:102;;28889:2;28885:7;28880:2;28873:5;28869:14;28865:28;28855:38;;28845:54;;;:::o;28905:102::-;;28994:5;28991:1;28987:13;28966:34;;28956:51;;;:::o;29013:122::-;29086:24;29104:5;29086:24;:::i;:::-;29079:5;29076:35;29066:2;;29125:1;29122;29115:12;29066:2;29056:79;:::o;29141:138::-;29222:32;29248:5;29222:32;:::i;:::-;29215:5;29212:43;29202:2;;29269:1;29266;29259:12;29202:2;29192:87;:::o;29285:116::-;29355:21;29370:5;29355:21;:::i;:::-;29348:5;29345:32;29335:2;;29391:1;29388;29381:12;29335:2;29325:76;:::o;29407:122::-;29480:24;29498:5;29480:24;:::i;:::-;29473:5;29470:35;29460:2;;29519:1;29516;29509:12;29460:2;29450:79;:::o"
            },
            "methodIdentifiers": {
              "burners(address)": "03d41e0e",
              "dScore()": "6122698f",
              "dScoreMod(address)": "51bcc28b",
              "dd()": "a120c14f",
              "delegateFunctionCall(address,bytes)": "bd621fa3",
              "delegators(address)": "8d23fc61",
              "ds()": "30dce62b",
              "freezeFrame(address)": "c3396bdc",
              "freezeMember(address)": "3e410717",
              "frozenAccounts(address)": "860838a5",
              "minters(address)": "f46eccc4",
              "newProposal(address,uint256,string,bytes)": "b1050da5",
              "owner()": "8da5cb5b",
              "proposalID()": "371fa854",
              "proposalTime()": "184a0ae9",
              "proposals(uint256)": "013cf08b",
              "proxyBurnDD(address,uint256)": "d7c93180",
              "proxyBurnDS(address,uint256)": "9c94f651",
              "proxyMintDD(address,uint256)": "83ac74f9",
              "proxyMintDS(address,uint256)": "82f4f5b4",
              "quorum()": "1703a018",
              "renounceOwnership()": "715018a6",
              "setApprovedContract(address,uint256)": "1268b7d2",
              "setQuorum(uint256)": "c1ba4e59",
              "transferOwnership(address)": "f2fde38b",
              "transferxDAI(address,uint256)": "7563dd54",
              "vote(uint256,bool)": "c9d27afe"
            }
          }
        }
      },
      "contracts/interfaces/IDScore.sol": {
        "IDScore": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "member",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "factor",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountDecreased",
                  "type": "uint256"
                }
              ],
              "name": "DScoreDecreased",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "member",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "factor",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIncreased",
                  "type": "uint256"
                }
              ],
              "name": "DScoreIncreased",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "member",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timeFrozen",
                  "type": "uint256"
                }
              ],
              "name": "Memberfrozen",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "member",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountStaked",
                  "type": "uint256"
                }
              ],
              "name": "MembershipStaked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_member",
                  "type": "address"
                }
              ],
              "name": "calculateVotingPower",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_member",
                  "type": "address"
                }
              ],
              "name": "checkStaked",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_member",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_factor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "decreaseDScore",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_member",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_factor",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "increaseDScore",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_stakeAmount",
                  "type": "uint256"
                }
              ],
              "name": "stakeMembership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "calculateVotingPower(address)": "59d177e6",
              "checkStaked(address)": "247f8e14",
              "decreaseDScore(address,uint256,uint256)": "d40ef772",
              "increaseDScore(address,uint256,uint256)": "c0ecce95",
              "stakeMembership(uint256)": "a2314bea"
            }
          }
        }
      },
      "contracts/interfaces/IDecentraCore.sol": {
        "IDecentraCore": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "call_data",
                  "type": "bytes"
                }
              ],
              "name": "FunctionCallDelegated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "call_data",
                  "type": "bytes"
                }
              ],
              "name": "NewProposal",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "voter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "vote",
                  "type": "bool"
                }
              ],
              "name": "NewVote",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "proposalId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "success",
                  "type": "bool"
                }
              ],
              "name": "ProposalApproved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_add",
                  "type": "address"
                }
              ],
              "name": "dScoreMod",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "call_data",
                  "type": "bytes"
                }
              ],
              "name": "delegateFunctionCall",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_member",
                  "type": "address"
                }
              ],
              "name": "freezeMember",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "_proposalHash",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "_calldata",
                  "type": "bytes"
                }
              ],
              "name": "newProposal",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyBurnDD",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyBurnDS",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyMintDD",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "proxyMintDS",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_contract",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_privledge",
                  "type": "uint256"
                }
              ],
              "name": "setApprovedContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_quorum",
                  "type": "uint256"
                }
              ],
              "name": "setQuorum",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "transferxDAI",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_ProposalID",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "supportsProposal",
                  "type": "bool"
                }
              ],
              "name": "vote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "dScoreMod(address)": "51bcc28b",
              "delegateFunctionCall(address,bytes)": "bd621fa3",
              "freezeMember(address)": "3e410717",
              "newProposal(address,uint256,string,bytes)": "b1050da5",
              "proxyBurnDD(address,uint256)": "d7c93180",
              "proxyBurnDS(address,uint256)": "9c94f651",
              "proxyMintDD(address,uint256)": "83ac74f9",
              "proxyMintDS(address,uint256)": "82f4f5b4",
              "setApprovedContract(address,uint256)": "1268b7d2",
              "setQuorum(uint256)": "c1ba4e59",
              "transferxDAI(address,uint256)": "7563dd54",
              "vote(uint256,bool)": "c9d27afe"
            }
          }
        }
      },
      "contracts/interfaces/IDecentraDollar.sol": {
        "IDecentraDollar": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "DD_Burned",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "DD_Mined",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "burnDD",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "mintDD",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burnDD(address,uint256)": "eb977815",
              "mintDD(address,uint256)": "7daf440d",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "contracts/interfaces/IDecentraStock.sol": {
        "IDecentraStock": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "StockIssued",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "burnStock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "issueStock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burnStock(address,uint256)": "7468b9ba",
              "issueStock(address,uint256)": "8896637e",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              210
            ],
            "Ownable": [
              109
            ]
          },
          "id": 110,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 110,
              "sourceUnit": 211,
              "src": "58:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 210,
                    "src": "613:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "613:7:0"
                }
              ],
              "contractDependencies": [
                210
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "89:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 109,
              "linearizedBaseContracts": [
                109,
                210
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "627:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "683:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "714:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "714:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "682:57:0"
                  },
                  "src": "656:84:0"
                },
                {
                  "body": {
                    "id": 34,
                    "nodeType": "Block",
                    "src": "857:135:0",
                    "statements": [
                      {
                        "assignments": [
                          18
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nodeType": "VariableDeclaration",
                            "scope": 34,
                            "src": "867:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 17,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "867:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 21,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 19,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "887:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "887:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "867:32:0"
                      },
                      {
                        "expression": {
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 22,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "909:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 23,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "918:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "909:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25,
                        "nodeType": "ExpressionStatement",
                        "src": "909:18:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 29,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "971:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 28,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "963:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 27,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "963:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "963:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 31,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "975:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 26,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "942:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "942:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33,
                        "nodeType": "EmitStatement",
                        "src": "937:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "746:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 35,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "854:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "857:0:0"
                  },
                  "scope": 109,
                  "src": "842:150:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "1123:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 41,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1140:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 40,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "1133:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "998:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 44,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1082:2:0"
                  },
                  "returnParameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1114:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:9:0"
                  },
                  "scope": 109,
                  "src": "1068:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1262:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 48,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "1280:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1280:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 50,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "1291:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 51,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1291:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1280:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1305:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 47,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1272:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1272:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1272:68:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1350:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1159:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:2:0"
                  },
                  "src": "1241:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "1754:91:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 65,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1790:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 68,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1806:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 67,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1798:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1798:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1798:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 64,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "1769:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1769:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 71,
                        "nodeType": "EmitStatement",
                        "src": "1764:45:0"
                      },
                      {
                        "expression": {
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 72,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1819:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1836:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1828:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 73,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1828:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1828:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1819:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 78,
                        "nodeType": "ExpressionStatement",
                        "src": "1819:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1364:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 62,
                      "modifierName": {
                        "id": 61,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1744:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1744:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1726:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1754:0:0"
                  },
                  "scope": 109,
                  "src": "1700:145:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 107,
                    "nodeType": "Block",
                    "src": "2064:170:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 89,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "2082:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 92,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2102:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 91,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2094:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 90,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2094:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2094:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2082:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2106:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 88,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2074:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2074:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 97,
                        "nodeType": "ExpressionStatement",
                        "src": "2074:73:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 99,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "2183:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 100,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2191:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 98,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2162:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2162:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 102,
                        "nodeType": "EmitStatement",
                        "src": "2157:43:0"
                      },
                      {
                        "expression": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 103,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2210:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 104,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "2219:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2210:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 106,
                        "nodeType": "ExpressionStatement",
                        "src": "2210:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "1851:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 108,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 86,
                      "modifierName": {
                        "id": 85,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2054:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2054:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "2021:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2021:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2020:18:0"
                  },
                  "returnParameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2064:0:0"
                  },
                  "scope": 109,
                  "src": "1994:240:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 110,
              "src": "584:1652:0"
            }
          ],
          "src": "33:2204:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              187
            ]
          },
          "id": 188,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 111,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 112,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:1",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 187,
              "linearizedBaseContracts": [
                187
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 113,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:1",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 118,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:1"
                  },
                  "returnParameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "269:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:1"
                  },
                  "scope": 187,
                  "src": "223:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:1",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 126,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "380:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:1"
                  },
                  "returnParameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "420:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:1"
                  },
                  "scope": 187,
                  "src": "361:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:1",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 136,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "667:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "686:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:1"
                  },
                  "returnParameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "720:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:1"
                  },
                  "scope": 187,
                  "src": "649:77:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 137,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 146,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1020:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1035:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:1"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "1075:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:1"
                  },
                  "scope": 187,
                  "src": "1001:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 147,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:1",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 156,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 149,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1754:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1771:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:1"
                  },
                  "returnParameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 156,
                        "src": "1805:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:1"
                  },
                  "scope": 187,
                  "src": "1737:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 157,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:1",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 168,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2140:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2140:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 161,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2156:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2156:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2175:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:51:1"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "2209:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2209:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2208:6:1"
                  },
                  "scope": 187,
                  "src": "2118:97:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 177,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2399:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2399:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 173,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2421:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2421:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 177,
                        "src": "2441:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2441:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2398:57:1"
                  },
                  "src": "2384:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 178,
                    "nodeType": "StructuredDocumentation",
                    "src": "2462:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 186,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2630:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 182,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2653:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 181,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 184,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 186,
                        "src": "2678:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2678:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2629:63:1"
                  },
                  "src": "2615:78:1"
                }
              ],
              "scope": 188,
              "src": "129:2566:1"
            }
          ],
          "src": "33:2663:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              210
            ]
          },
          "id": 211,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 189,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 210,
              "linearizedBaseContracts": [
                210
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 197,
                    "nodeType": "Block",
                    "src": "648:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 194,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "665:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "665:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 193,
                        "id": 196,
                        "nodeType": "Return",
                        "src": "658:17:2"
                      }
                    ]
                  },
                  "id": 198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "605:2:2"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 198,
                        "src": "639:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "639:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "638:9:2"
                  },
                  "scope": 210,
                  "src": "586:96:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "755:165:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "765:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$210",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "765:4:2"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "905:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "905:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 207,
                        "nodeType": "Return",
                        "src": "898:15:2"
                      }
                    ]
                  },
                  "id": 209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "705:2:2"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "739:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "739:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "738:16:2"
                  },
                  "scope": 210,
                  "src": "688:232:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 211,
              "src": "554:368:2"
            }
          ],
          "src": "33:890:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              522
            ]
          },
          "id": 523,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 212,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 213,
                "nodeType": "StructuredDocumentation",
                "src": "211:186:3",
                "text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
              },
              "fullyImplemented": true,
              "id": 522,
              "linearizedBaseContracts": [
                522
              ],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 244,
                    "nodeType": "Block",
                    "src": "633:140:3",
                    "statements": [
                      {
                        "id": 243,
                        "nodeType": "UncheckedBlock",
                        "src": "643:124:3",
                        "statements": [
                          {
                            "assignments": [
                              226
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 226,
                                "mutability": "mutable",
                                "name": "c",
                                "nodeType": "VariableDeclaration",
                                "scope": 243,
                                "src": "667:9:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 225,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "667:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 230,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 227,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "679:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 228,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 218,
                                "src": "683:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "679:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "667:17:3"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 231,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 226,
                                "src": "702:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 232,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "706:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "702:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 238,
                            "nodeType": "IfStatement",
                            "src": "698:28:3",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 234,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "717:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "724:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 236,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "716:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 224,
                              "id": 237,
                              "nodeType": "Return",
                              "src": "709:17:3"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "748:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 240,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 226,
                                  "src": "754:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 241,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "747:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 224,
                            "id": 242,
                            "nodeType": "Return",
                            "src": "740:16:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 214,
                    "nodeType": "StructuredDocumentation",
                    "src": "421:131:3",
                    "text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryAdd",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "573:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "573:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "584:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "584:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:22:3"
                  },
                  "returnParameters": {
                    "id": 224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "618:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "618:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 223,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "624:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "617:15:3"
                  },
                  "scope": 522,
                  "src": "557:216:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 272,
                    "nodeType": "Block",
                    "src": "995:113:3",
                    "statements": [
                      {
                        "id": 271,
                        "nodeType": "UncheckedBlock",
                        "src": "1005:97:3",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 257,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 250,
                                "src": "1033:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 258,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 248,
                                "src": "1037:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1033:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 264,
                            "nodeType": "IfStatement",
                            "src": "1029:28:3",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1048:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1055:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 262,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1047:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 256,
                              "id": 263,
                              "nodeType": "Return",
                              "src": "1040:17:3"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1079:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 266,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 248,
                                    "src": "1085:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 267,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 250,
                                    "src": "1089:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1085:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 269,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1078:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 256,
                            "id": 270,
                            "nodeType": "Return",
                            "src": "1071:20:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 246,
                    "nodeType": "StructuredDocumentation",
                    "src": "779:135:3",
                    "text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "935:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "946:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "946:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "934:22:3"
                  },
                  "returnParameters": {
                    "id": 256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "980:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "980:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 273,
                        "src": "986:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "986:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "979:15:3"
                  },
                  "scope": 522,
                  "src": "919:189:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 314,
                    "nodeType": "Block",
                    "src": "1332:417:3",
                    "statements": [
                      {
                        "id": 313,
                        "nodeType": "UncheckedBlock",
                        "src": "1342:401:3",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 285,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 276,
                                "src": "1600:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1605:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1600:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 292,
                            "nodeType": "IfStatement",
                            "src": "1596:28:3",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 288,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1616:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1622:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 290,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1615:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 284,
                              "id": 291,
                              "nodeType": "Return",
                              "src": "1608:16:3"
                            }
                          },
                          {
                            "assignments": [
                              294
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 294,
                                "mutability": "mutable",
                                "name": "c",
                                "nodeType": "VariableDeclaration",
                                "scope": 313,
                                "src": "1638:9:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 293,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1638:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 298,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 295,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 276,
                                "src": "1650:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 296,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 278,
                                "src": "1654:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1650:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1638:17:3"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 299,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "1673:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 300,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 276,
                                  "src": "1677:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1673:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 302,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 278,
                                "src": "1682:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1673:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 308,
                            "nodeType": "IfStatement",
                            "src": "1669:33:3",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1693:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1700:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 306,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1692:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 284,
                              "id": 307,
                              "nodeType": "Return",
                              "src": "1685:17:3"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1724:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 310,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 294,
                                  "src": "1730:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 311,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1723:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 284,
                            "id": 312,
                            "nodeType": "Return",
                            "src": "1716:16:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 274,
                    "nodeType": "StructuredDocumentation",
                    "src": "1114:137:3",
                    "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 315,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "1272:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1272:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "1283:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1283:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1271:22:3"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "1317:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "1323:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1323:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:15:3"
                  },
                  "scope": 522,
                  "src": "1256:493:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 342,
                    "nodeType": "Block",
                    "src": "1974:114:3",
                    "statements": [
                      {
                        "id": 341,
                        "nodeType": "UncheckedBlock",
                        "src": "1984:98:3",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 327,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 320,
                                "src": "2012:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2017:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2012:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 334,
                            "nodeType": "IfStatement",
                            "src": "2008:29:3",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2028:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2035:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 332,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2027:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 326,
                              "id": 333,
                              "nodeType": "Return",
                              "src": "2020:17:3"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2059:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 336,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 318,
                                    "src": "2065:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 337,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 320,
                                    "src": "2069:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2065:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 339,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2058:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 326,
                            "id": 340,
                            "nodeType": "Return",
                            "src": "2051:20:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 316,
                    "nodeType": "StructuredDocumentation",
                    "src": "1755:138:3",
                    "text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 343,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryDiv",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "1914:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1914:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "1925:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1925:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1913:22:3"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "1959:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "1965:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1965:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1958:15:3"
                  },
                  "scope": 522,
                  "src": "1898:190:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 370,
                    "nodeType": "Block",
                    "src": "2323:114:3",
                    "statements": [
                      {
                        "id": 369,
                        "nodeType": "UncheckedBlock",
                        "src": "2333:98:3",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 355,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "2361:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2366:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2361:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 362,
                            "nodeType": "IfStatement",
                            "src": "2357:29:3",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2377:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2384:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 360,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2376:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 354,
                              "id": 361,
                              "nodeType": "Return",
                              "src": "2369:17:3"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2408:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 364,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 346,
                                    "src": "2414:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "id": 365,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 348,
                                    "src": "2418:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2414:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 367,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2407:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 354,
                            "id": 368,
                            "nodeType": "Return",
                            "src": "2400:20:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 344,
                    "nodeType": "StructuredDocumentation",
                    "src": "2094:148:3",
                    "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 371,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 346,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "2263:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 345,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2263:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "2274:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2274:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2262:22:3"
                  },
                  "returnParameters": {
                    "id": 354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "2308:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "2314:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2314:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2307:15:3"
                  },
                  "scope": 522,
                  "src": "2247:190:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "2739:29:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 381,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "2756:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 382,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "2760:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2756:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 380,
                        "id": 384,
                        "nodeType": "Return",
                        "src": "2749:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 372,
                    "nodeType": "StructuredDocumentation",
                    "src": "2443:224:3",
                    "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
                  },
                  "id": 386,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "2685:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2685:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "2696:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2696:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2684:22:3"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "2730:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2730:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2729:9:3"
                  },
                  "scope": 522,
                  "src": "2672:96:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "3106:29:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 396,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "3123:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 397,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "3127:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3123:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 395,
                        "id": 399,
                        "nodeType": "Return",
                        "src": "3116:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 387,
                    "nodeType": "StructuredDocumentation",
                    "src": "2774:260:3",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 401,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 389,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "3052:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3052:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "3063:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3063:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3051:22:3"
                  },
                  "returnParameters": {
                    "id": 395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 394,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "3097:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3097:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3096:9:3"
                  },
                  "scope": 522,
                  "src": "3039:96:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 415,
                    "nodeType": "Block",
                    "src": "3449:29:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 411,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "3466:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 412,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "3470:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3466:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 410,
                        "id": 414,
                        "nodeType": "Return",
                        "src": "3459:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 402,
                    "nodeType": "StructuredDocumentation",
                    "src": "3141:236:3",
                    "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
                  },
                  "id": 416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 404,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "3395:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3395:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "3406:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3406:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3394:22:3"
                  },
                  "returnParameters": {
                    "id": 410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 409,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 416,
                        "src": "3440:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3440:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3439:9:3"
                  },
                  "scope": 522,
                  "src": "3382:96:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "3834:29:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 426,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 419,
                            "src": "3851:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 427,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "3855:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3851:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 425,
                        "id": 429,
                        "nodeType": "Return",
                        "src": "3844:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 417,
                    "nodeType": "StructuredDocumentation",
                    "src": "3484:278:3",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 431,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "3780:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 418,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3780:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "3791:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3791:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3779:22:3"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "3825:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3825:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3824:9:3"
                  },
                  "scope": 522,
                  "src": "3767:96:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 445,
                    "nodeType": "Block",
                    "src": "4383:29:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 441,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "4400:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 442,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "4404:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4400:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 440,
                        "id": 444,
                        "nodeType": "Return",
                        "src": "4393:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "3869:442:3",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 446,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 437,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "4329:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4329:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "4340:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4340:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4328:22:3"
                  },
                  "returnParameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 446,
                        "src": "4374:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:9:3"
                  },
                  "scope": 522,
                  "src": "4316:96:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 470,
                    "nodeType": "Block",
                    "src": "4971:106:3",
                    "statements": [
                      {
                        "id": 469,
                        "nodeType": "UncheckedBlock",
                        "src": "4981:90:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 461,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 459,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 451,
                                    "src": "5013:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 460,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 449,
                                    "src": "5018:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5013:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 462,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 453,
                                  "src": "5021:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 458,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5005:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5005:29:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 464,
                            "nodeType": "ExpressionStatement",
                            "src": "5005:29:3"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 465,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 449,
                                "src": "5055:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 466,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 451,
                                "src": "5059:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5055:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 457,
                            "id": 468,
                            "nodeType": "Return",
                            "src": "5048:12:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 447,
                    "nodeType": "StructuredDocumentation",
                    "src": "4418:453:3",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 471,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 449,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4889:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 448,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4889:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4900:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4900:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4911:26:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4911:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4888:50:3"
                  },
                  "returnParameters": {
                    "id": 457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 456,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 471,
                        "src": "4962:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4962:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4961:9:3"
                  },
                  "scope": 522,
                  "src": "4876:201:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "5879:105:3",
                    "statements": [
                      {
                        "id": 494,
                        "nodeType": "UncheckedBlock",
                        "src": "5889:89:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 484,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 476,
                                    "src": "5921:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 485,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5925:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5921:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 487,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "5928:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 483,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5913:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5913:28:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 489,
                            "nodeType": "ExpressionStatement",
                            "src": "5913:28:3"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 490,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 474,
                                "src": "5962:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 491,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "5966:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5962:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 482,
                            "id": 493,
                            "nodeType": "Return",
                            "src": "5955:12:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 472,
                    "nodeType": "StructuredDocumentation",
                    "src": "5083:696:3",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 496,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5797:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5797:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5808:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5808:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5819:26:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5819:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5796:50:3"
                  },
                  "returnParameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "5870:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5870:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5869:9:3"
                  },
                  "scope": 522,
                  "src": "5784:200:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 520,
                    "nodeType": "Block",
                    "src": "6725:105:3",
                    "statements": [
                      {
                        "id": 519,
                        "nodeType": "UncheckedBlock",
                        "src": "6735:89:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 511,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 509,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 501,
                                    "src": "6767:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 510,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6771:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6767:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 512,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 503,
                                  "src": "6774:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 508,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "6759:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6759:28:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 514,
                            "nodeType": "ExpressionStatement",
                            "src": "6759:28:3"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 515,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 499,
                                "src": "6808:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 516,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 501,
                                "src": "6812:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6808:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 507,
                            "id": 518,
                            "nodeType": "Return",
                            "src": "6801:12:3"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 497,
                    "nodeType": "StructuredDocumentation",
                    "src": "5990:635:3",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 521,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 499,
                        "mutability": "mutable",
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "6643:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6643:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "6654:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6654:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "6665:26:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6665:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6642:50:3"
                  },
                  "returnParameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 506,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 521,
                        "src": "6716:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6716:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6715:9:3"
                  },
                  "scope": 522,
                  "src": "6630:200:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 523,
              "src": "398:6434:3"
            }
          ],
          "src": "33:6800:3"
        },
        "id": 3
      },
      "contracts/DecentraCore.sol": {
        "ast": {
          "absolutePath": "contracts/DecentraCore.sol",
          "exportedSymbols": {
            "Context": [
              210
            ],
            "DecentraCore": [
              1338
            ],
            "IDScore": [
              1411
            ],
            "IDecentraCore": [
              1541
            ],
            "IDecentraDollar": [
              1575
            ],
            "IDecentraStock": [
              1603
            ],
            "IERC20": [
              187
            ],
            "Ownable": [
              109
            ],
            "SafeMath": [
              522
            ]
          },
          "id": 1339,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 524,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 525,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 110,
              "src": "57:52:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 526,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 188,
              "src": "110:56:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "id": 527,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 523,
              "src": "167:57:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IDecentraDollar.sol",
              "file": "./interfaces/IDecentraDollar.sol",
              "id": 528,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 1576,
              "src": "225:42:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IDecentraStock.sol",
              "file": "./interfaces/IDecentraStock.sol",
              "id": 529,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 1604,
              "src": "268:41:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IDScore.sol",
              "file": "./interfaces/IDScore.sol",
              "id": 530,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 1412,
              "src": "310:34:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/interfaces/IDecentraCore.sol",
              "file": "./interfaces/IDecentraCore.sol",
              "id": 531,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 1542,
              "src": "345:40:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 533,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 109,
                    "src": "653:7:4"
                  },
                  "id": 534,
                  "nodeType": "InheritanceSpecifier",
                  "src": "653:7:4"
                },
                {
                  "baseName": {
                    "id": 535,
                    "name": "IDecentraCore",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1541,
                    "src": "662:13:4"
                  },
                  "id": 536,
                  "nodeType": "InheritanceSpecifier",
                  "src": "662:13:4"
                }
              ],
              "contractDependencies": [
                109,
                210,
                1541
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 532,
                "nodeType": "StructuredDocumentation",
                "src": "480:54:4",
                "text": "@title DecentraCore\n @author Christopher Dixon"
              },
              "fullyImplemented": true,
              "id": 1338,
              "linearizedBaseContracts": [
                1338,
                1541,
                109,
                210
              ],
              "name": "DecentraCore",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 539,
                  "libraryName": {
                    "id": 537,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 522,
                    "src": "688:8:4"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "682:27:4",
                  "typeName": {
                    "id": 538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 540,
                    "nodeType": "StructuredDocumentation",
                    "src": "714:49:4",
                    "text": "@notice proposalID is used to track proposals"
                  },
                  "functionSelector": "371fa854",
                  "id": 542,
                  "mutability": "mutable",
                  "name": "proposalID",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "768:25:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "768:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 543,
                    "nodeType": "StructuredDocumentation",
                    "src": "799:79:4",
                    "text": "@notice proposalTime is the time in seconds a proposal is considered active"
                  },
                  "functionSelector": "184a0ae9",
                  "id": 545,
                  "mutability": "mutable",
                  "name": "proposalTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "883:27:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 546,
                    "nodeType": "StructuredDocumentation",
                    "src": "916:84:4",
                    "text": "@notice quorum is the minimum percentage of voteWeight needed for a vote to pass"
                  },
                  "functionSelector": "1703a018",
                  "id": 548,
                  "mutability": "mutable",
                  "name": "quorum",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1005:21:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 549,
                    "nodeType": "StructuredDocumentation",
                    "src": "1032:45:4",
                    "text": "@notice dd is the DecentraDollar contract"
                  },
                  "functionSelector": "a120c14f",
                  "id": 552,
                  "mutability": "mutable",
                  "name": "dd",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1082:25:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDecentraDollar_$1575",
                    "typeString": "contract IDecentraDollar"
                  },
                  "typeName": {
                    "id": 551,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 550,
                      "name": "IDecentraDollar",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1575,
                      "src": "1082:15:4"
                    },
                    "referencedDeclaration": 1575,
                    "src": "1082:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDecentraDollar_$1575",
                      "typeString": "contract IDecentraDollar"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 553,
                    "nodeType": "StructuredDocumentation",
                    "src": "1113:44:4",
                    "text": "@notice ds is the DecentraStock contract"
                  },
                  "functionSelector": "30dce62b",
                  "id": 556,
                  "mutability": "mutable",
                  "name": "ds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1162:24:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                    "typeString": "contract IDecentraStock"
                  },
                  "typeName": {
                    "id": 555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 554,
                      "name": "IDecentraStock",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1603,
                      "src": "1162:14:4"
                    },
                    "referencedDeclaration": 1603,
                    "src": "1162:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                      "typeString": "contract IDecentraStock"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 557,
                    "nodeType": "StructuredDocumentation",
                    "src": "1192:42:4",
                    "text": "@notice dScore is the D-Score contract"
                  },
                  "functionSelector": "6122698f",
                  "id": 560,
                  "mutability": "mutable",
                  "name": "dScore",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1239:21:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDScore_$1411",
                    "typeString": "contract IDScore"
                  },
                  "typeName": {
                    "id": 559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 558,
                      "name": "IDScore",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1411,
                      "src": "1239:7:4"
                    },
                    "referencedDeclaration": 1411,
                    "src": "1239:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDScore_$1411",
                      "typeString": "contract IDScore"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 561,
                    "nodeType": "StructuredDocumentation",
                    "src": "1267:68:4",
                    "text": "@notice frozenAccounts is a mapping of which accounts are frozen"
                  },
                  "functionSelector": "860838a5",
                  "id": 565,
                  "mutability": "mutable",
                  "name": "frozenAccounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1340:46:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 564,
                    "keyType": {
                      "id": 562,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1348:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1340:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 563,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1359:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 566,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:63:4",
                    "text": "@notice freezeFrame is a mapping of an accounts frozen time"
                  },
                  "functionSelector": "c3396bdc",
                  "id": 570,
                  "mutability": "mutable",
                  "name": "freezeFrame",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1461:46:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 569,
                    "keyType": {
                      "id": 567,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1469:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1461:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 568,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1480:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 571,
                    "nodeType": "StructuredDocumentation",
                    "src": "1514:37:4",
                    "text": "@notice Proposal stores proposals"
                  },
                  "functionSelector": "013cf08b",
                  "id": 576,
                  "mutability": "mutable",
                  "name": "proposals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1556:45:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$627_storage_$",
                    "typeString": "mapping(uint256 => struct DecentraCore.Proposal)"
                  },
                  "typeName": {
                    "id": 575,
                    "keyType": {
                      "id": 572,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1564:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1556:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$627_storage_$",
                      "typeString": "mapping(uint256 => struct DecentraCore.Proposal)"
                    },
                    "valueType": {
                      "id": 574,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 573,
                        "name": "Proposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 627,
                        "src": "1575:8:4"
                      },
                      "referencedDeclaration": 627,
                      "src": "1575:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                        "typeString": "struct DecentraCore.Proposal"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 577,
                    "nodeType": "StructuredDocumentation",
                    "src": "1608:129:4",
                    "text": "@notice minters is a mapping of DecentraCorp contracts\nthat gives them elevated minting privledges"
                  },
                  "functionSelector": "f46eccc4",
                  "id": 581,
                  "mutability": "mutable",
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1742:39:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 580,
                    "keyType": {
                      "id": 578,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1750:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1742:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 579,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1761:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 582,
                    "nodeType": "StructuredDocumentation",
                    "src": "1788:129:4",
                    "text": "@notice burners is a mapping of DecentraCorp contracts\nthat gives them elevated burning privledges"
                  },
                  "functionSelector": "03d41e0e",
                  "id": 586,
                  "mutability": "mutable",
                  "name": "burners",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "1922:39:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 585,
                    "keyType": {
                      "id": 583,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1930:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1922:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 584,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1941:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1540
                  ],
                  "constant": false,
                  "documentation": {
                    "id": 587,
                    "nodeType": "StructuredDocumentation",
                    "src": "1968:152:4",
                    "text": "@notice dScoreMod is a mapping of official DecentraCorp contracts\nthat gives them elevated dScore modification privledges"
                  },
                  "functionSelector": "51bcc28b",
                  "id": 592,
                  "mutability": "mutable",
                  "name": "dScoreMod",
                  "nodeType": "VariableDeclaration",
                  "overrides": {
                    "id": 591,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2157:8:4"
                  },
                  "scope": 1338,
                  "src": "2125:50:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 590,
                    "keyType": {
                      "id": 588,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2133:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2125:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 589,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2144:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 593,
                    "nodeType": "StructuredDocumentation",
                    "src": "2182:143:4",
                    "text": "@notice delegators is a mapping of official DecentraCorp contracts\nthat gives them elevated delegator privledges"
                  },
                  "functionSelector": "8d23fc61",
                  "id": 597,
                  "mutability": "mutable",
                  "name": "delegators",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "2330:42:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 596,
                    "keyType": {
                      "id": 594,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2338:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2330:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 595,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "2349:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "DecentraCore.Proposal",
                  "id": 627,
                  "members": [
                    {
                      "constant": false,
                      "id": 599,
                      "mutability": "mutable",
                      "name": "maker",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3271:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 598,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3271:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 601,
                      "mutability": "mutable",
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3294:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 600,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3294:15:4",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 603,
                      "mutability": "mutable",
                      "name": "timeCreated",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3326:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 602,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3326:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 605,
                      "mutability": "mutable",
                      "name": "voteWeights",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3355:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3355:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 607,
                      "mutability": "mutable",
                      "name": "voteID",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3384:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 606,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3384:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 609,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3408:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 608,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3408:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 611,
                      "mutability": "mutable",
                      "name": "executed",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3432:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 610,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "proposalPassed",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3455:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3455:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "proposalHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3484:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3484:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 617,
                      "mutability": "mutable",
                      "name": "call_data",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3513:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3513:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 622,
                      "mutability": "mutable",
                      "name": "votes",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3538:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$634_storage_$",
                        "typeString": "mapping(uint256 => struct DecentraCore.Vote)"
                      },
                      "typeName": {
                        "id": 621,
                        "keyType": {
                          "id": 618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3546:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "3538:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$634_storage_$",
                          "typeString": "mapping(uint256 => struct DecentraCore.Vote)"
                        },
                        "valueType": {
                          "id": 620,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 619,
                            "name": "Vote",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 634,
                            "src": "3557:4:4"
                          },
                          "referencedDeclaration": 634,
                          "src": "3557:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$634_storage_ptr",
                            "typeString": "struct DecentraCore.Vote"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "voted",
                      "nodeType": "VariableDeclaration",
                      "scope": 627,
                      "src": "3578:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 625,
                        "keyType": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3586:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "3578:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueType": {
                          "id": 624,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3597:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Proposal",
                  "nodeType": "StructDefinition",
                  "scope": 1338,
                  "src": "3245:370:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DecentraCore.Vote",
                  "id": 634,
                  "members": [
                    {
                      "constant": false,
                      "id": 629,
                      "mutability": "mutable",
                      "name": "inSupport",
                      "nodeType": "VariableDeclaration",
                      "scope": 634,
                      "src": "3981:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 628,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3981:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 631,
                      "mutability": "mutable",
                      "name": "voter",
                      "nodeType": "VariableDeclaration",
                      "scope": 634,
                      "src": "4005:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 630,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4005:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 633,
                      "mutability": "mutable",
                      "name": "voteWeight",
                      "nodeType": "VariableDeclaration",
                      "scope": 634,
                      "src": "4028:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4028:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Vote",
                  "nodeType": "StructDefinition",
                  "scope": 1338,
                  "src": "3959:94:4",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "4189:96:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 638,
                                "name": "minters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 581,
                                "src": "4207:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 641,
                              "indexExpression": {
                                "expression": {
                                  "id": 639,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4215:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 640,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4215:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4207:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446563656e747261436f72653a2043616c6c6572206973206e6f742061206d696e746572",
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4228:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc",
                                "typeString": "literal_string \"DecentraCore: Caller is not a minter\""
                              },
                              "value": "DecentraCore: Caller is not a minter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_243f4a78dba13416d9a560552a39768013f6ae53441c2e77398d4cab61f2fccc",
                                "typeString": "literal_string \"DecentraCore: Caller is not a minter\""
                              }
                            ],
                            "id": 637,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4199:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4199:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 644,
                        "nodeType": "ExpressionStatement",
                        "src": "4199:68:4"
                      },
                      {
                        "id": 645,
                        "nodeType": "PlaceholderStatement",
                        "src": "4277:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 635,
                    "nodeType": "StructuredDocumentation",
                    "src": "4059:105:4",
                    "text": "@notice the modifier onlyMint requires that the function caller must be a approved minter*"
                  },
                  "id": 647,
                  "name": "onlyMint",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4186:2:4"
                  },
                  "src": "4169:116:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 659,
                    "nodeType": "Block",
                    "src": "4420:96:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 651,
                                "name": "burners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 586,
                                "src": "4438:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 654,
                              "indexExpression": {
                                "expression": {
                                  "id": 652,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4446:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 653,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4446:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4438:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446563656e747261436f72653a2043616c6c6572206973206e6f742061206275726e6572",
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4459:38:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f",
                                "typeString": "literal_string \"DecentraCore: Caller is not a burner\""
                              },
                              "value": "DecentraCore: Caller is not a burner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_690019177b28cb44611f89c4971f0bf1f7be61512a39616577a52791cc1e2a4f",
                                "typeString": "literal_string \"DecentraCore: Caller is not a burner\""
                              }
                            ],
                            "id": 650,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4430:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4430:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "4430:68:4"
                      },
                      {
                        "id": 658,
                        "nodeType": "PlaceholderStatement",
                        "src": "4508:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 648,
                    "nodeType": "StructuredDocumentation",
                    "src": "4290:105:4",
                    "text": "@notice the modifier onlyBurn requires that the function caller must be a approved burner*"
                  },
                  "id": 660,
                  "name": "onlyBurn",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4417:2:4"
                  },
                  "src": "4400:116:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 673,
                    "nodeType": "Block",
                    "src": "4647:149:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 666,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4697:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 667,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4697:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 664,
                                  "name": "dScore",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "4678:6:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDScore_$1411",
                                    "typeString": "contract IDScore"
                                  }
                                },
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "checkStaked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1410,
                                "src": "4678:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4678:30:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446563656e747261436f72653a2043616c6c6572206973206e6f7420616e20616374697665206d656d626572",
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4722:46:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8",
                                "typeString": "literal_string \"DecentraCore: Caller is not an active member\""
                              },
                              "value": "DecentraCore: Caller is not an active member"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4ea15d06dd01f744209f7a83d015cbb6d16d2b60e4dff0f813dff7628b2289d8",
                                "typeString": "literal_string \"DecentraCore: Caller is not an active member\""
                              }
                            ],
                            "id": 663,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4657:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4657:121:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 671,
                        "nodeType": "ExpressionStatement",
                        "src": "4657:121:4"
                      },
                      {
                        "id": 672,
                        "nodeType": "PlaceholderStatement",
                        "src": "4788:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 661,
                    "nodeType": "StructuredDocumentation",
                    "src": "4522:98:4",
                    "text": "@notice the modifier onlyMember requires that the function caller must be a member*"
                  },
                  "id": 674,
                  "name": "onlyMember",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4644:2:4"
                  },
                  "src": "4625:171:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 686,
                    "nodeType": "Block",
                    "src": "4961:136:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 678,
                                "name": "delegators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 597,
                                "src": "4992:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 681,
                              "indexExpression": {
                                "expression": {
                                  "id": 679,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5003:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 680,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5003:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4992:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446563656e747261436f72653a2043616c6c6572206973206e6f7420612064656c656761746f72",
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5028:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24",
                                "typeString": "literal_string \"DecentraCore: Caller is not a delegator\""
                              },
                              "value": "DecentraCore: Caller is not a delegator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a54fefa11f14ff699bd3efdf4a0c0f8f206d4d7534191b1f2adb83802562db24",
                                "typeString": "literal_string \"DecentraCore: Caller is not a delegator\""
                              }
                            ],
                            "id": 677,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4971:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4971:108:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 684,
                        "nodeType": "ExpressionStatement",
                        "src": "4971:108:4"
                      },
                      {
                        "id": 685,
                        "nodeType": "PlaceholderStatement",
                        "src": "5089:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 675,
                    "nodeType": "StructuredDocumentation",
                    "src": "4802:121:4",
                    "text": "@notice the modifier onlyApprovedDelegator requires that the function caller must be a approved delegator*"
                  },
                  "id": 687,
                  "name": "onlyApprovedDelegator",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 676,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4958:2:4"
                  },
                  "src": "4928:169:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 714,
                    "nodeType": "Block",
                    "src": "5197:120:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 696,
                            "name": "dd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "5207:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDecentraDollar_$1575",
                              "typeString": "contract IDecentraDollar"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 698,
                                "name": "_dDollar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 689,
                                "src": "5228:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 697,
                              "name": "IDecentraDollar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1575,
                              "src": "5212:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDecentraDollar_$1575_$",
                                "typeString": "type(contract IDecentraDollar)"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5212:25:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDecentraDollar_$1575",
                              "typeString": "contract IDecentraDollar"
                            }
                          },
                          "src": "5207:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDecentraDollar_$1575",
                            "typeString": "contract IDecentraDollar"
                          }
                        },
                        "id": 701,
                        "nodeType": "ExpressionStatement",
                        "src": "5207:30:4"
                      },
                      {
                        "expression": {
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 702,
                            "name": "ds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "5247:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                              "typeString": "contract IDecentraStock"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 704,
                                "name": "_dStock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 691,
                                "src": "5267:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 703,
                              "name": "IDecentraStock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "5252:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDecentraStock_$1603_$",
                                "typeString": "type(contract IDecentraStock)"
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5252:23:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                              "typeString": "contract IDecentraStock"
                            }
                          },
                          "src": "5247:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                            "typeString": "contract IDecentraStock"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "5247:28:4"
                      },
                      {
                        "expression": {
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 708,
                            "name": "dScore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "5285:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDScore_$1411",
                              "typeString": "contract IDScore"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 710,
                                "name": "_dScore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "5302:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 709,
                              "name": "IDScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "5294:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDScore_$1411_$",
                                "typeString": "type(contract IDScore)"
                              }
                            },
                            "id": 711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5294:16:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDScore_$1411",
                              "typeString": "contract IDScore"
                            }
                          },
                          "src": "5285:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDScore_$1411",
                            "typeString": "contract IDScore"
                          }
                        },
                        "id": 713,
                        "nodeType": "ExpressionStatement",
                        "src": "5285:25:4"
                      }
                    ]
                  },
                  "id": 715,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "_dDollar",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "5124:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5124:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "_dStock",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "5150:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5150:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "_dScore",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "5175:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5175:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5114:82:4"
                  },
                  "returnParameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5197:0:4"
                  },
                  "scope": 1338,
                  "src": "5103:214:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1451
                  ],
                  "body": {
                    "id": 745,
                    "nodeType": "Block",
                    "src": "5845:184:4",
                    "statements": [
                      {
                        "assignments": [
                          727,
                          729
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 727,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 745,
                            "src": "5856:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 726,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5856:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 729,
                            "mutability": "mutable",
                            "name": "data",
                            "nodeType": "VariableDeclaration",
                            "scope": 745,
                            "src": "5870:17:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 728,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5870:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 734,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 732,
                              "name": "call_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "5904:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 730,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "5891:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5891:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5891:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5855:59:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 736,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 727,
                              "src": "5932:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "64656c656761746546756e6374696f6e43616c6c204661696c6564",
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5941:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083",
                                "typeString": "literal_string \"delegateFunctionCall Failed\""
                              },
                              "value": "delegateFunctionCall Failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1910a0bebe90f158da6a7c4c8728cd72dcdd8ad50440c1a21f11ea6673a40083",
                                "typeString": "literal_string \"delegateFunctionCall Failed\""
                              }
                            ],
                            "id": 735,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5924:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5924:47:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "5924:47:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 741,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "6008:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 742,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "6017:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 740,
                            "name": "FunctionCallDelegated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "5986:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory)"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5986:36:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 744,
                        "nodeType": "EmitStatement",
                        "src": "5981:41:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 716,
                    "nodeType": "StructuredDocumentation",
                    "src": "5382:319:4",
                    "text": "@notice delegateFunctionCall allows the DecentraCore contract to make arbitrary calls to other contracts\n@param _target is the target address where the function will be called\n@param call_data is a bytes representation of the function the Decentracorp contract is calling and its input paramters*"
                  },
                  "functionSelector": "bd621fa3",
                  "id": 746,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 724,
                      "modifierName": {
                        "id": 723,
                        "name": "onlyApprovedDelegator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 687,
                        "src": "5823:21:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5823:21:4"
                    }
                  ],
                  "name": "delegateFunctionCall",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 722,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5814:8:4"
                  },
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "_target",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5745:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5745:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "call_data",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5778:22:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5778:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5735:71:4"
                  },
                  "returnParameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5845:0:4"
                  },
                  "scope": 1338,
                  "src": "5706:323:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1459
                  ],
                  "body": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "6437:38:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 760,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 751,
                              "src": "6460:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 757,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "6447:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6447:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6447:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "6447:21:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 747,
                    "nodeType": "StructuredDocumentation",
                    "src": "6035:283:4",
                    "text": "@notice transferxDAI is used to easily transfer xDAI from the DecentraCorp contract\n@param _to is the address tokens are being minted to\n@param _amount is the amount of tokens being minted\n@dev this function is intended to be used with the proposal system*"
                  },
                  "functionSelector": "7563dd54",
                  "id": 764,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 755,
                      "modifierName": {
                        "id": 754,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6423:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6423:9:4"
                    }
                  ],
                  "name": "transferxDAI",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 753,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6406:8:4"
                  },
                  "parameters": {
                    "id": 752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 749,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 764,
                        "src": "6345:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6345:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 764,
                        "src": "6366:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6366:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6344:38:4"
                  },
                  "returnParameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6437:0:4"
                  },
                  "scope": 1338,
                  "src": "6323:152:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1473
                  ],
                  "body": {
                    "id": 849,
                    "nodeType": "Block",
                    "src": "7028:379:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7038:12:4",
                          "subExpression": {
                            "id": 781,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "7038:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 783,
                        "nodeType": "ExpressionStatement",
                        "src": "7038:12:4"
                      },
                      {
                        "assignments": [
                          786
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 786,
                            "mutability": "mutable",
                            "name": "p",
                            "nodeType": "VariableDeclaration",
                            "scope": 849,
                            "src": "7060:18:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                              "typeString": "struct DecentraCore.Proposal"
                            },
                            "typeName": {
                              "id": 785,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 784,
                                "name": "Proposal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 627,
                                "src": "7060:8:4"
                              },
                              "referencedDeclaration": 627,
                              "src": "7060:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 790,
                        "initialValue": {
                          "baseExpression": {
                            "id": 787,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "7081:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$627_storage_$",
                              "typeString": "mapping(uint256 => struct DecentraCore.Proposal storage ref)"
                            }
                          },
                          "id": 789,
                          "indexExpression": {
                            "id": 788,
                            "name": "proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "7091:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7081:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$627_storage",
                            "typeString": "struct DecentraCore.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7060:42:4"
                      },
                      {
                        "expression": {
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 791,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7112:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 793,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "maker",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 599,
                            "src": "7112:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 794,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7122:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7122:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7112:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "7112:20:4"
                      },
                      {
                        "expression": {
                          "id": 802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 798,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7142:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 800,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "target",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 601,
                            "src": "7142:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 801,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "7153:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7142:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 803,
                        "nodeType": "ExpressionStatement",
                        "src": "7142:18:4"
                      },
                      {
                        "expression": {
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 804,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7170:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 806,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 609,
                            "src": "7170:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 807,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "7181:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7170:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 809,
                        "nodeType": "ExpressionStatement",
                        "src": "7170:18:4"
                      },
                      {
                        "expression": {
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 810,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7198:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteWeights",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 605,
                            "src": "7198:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7214:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7198:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 815,
                        "nodeType": "ExpressionStatement",
                        "src": "7198:17:4"
                      },
                      {
                        "expression": {
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 816,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7225:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 607,
                            "src": "7225:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7236:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7225:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "7225:12:4"
                      },
                      {
                        "expression": {
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 822,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7247:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 609,
                            "src": "7247:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7258:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7247:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "7247:12:4"
                      },
                      {
                        "expression": {
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 828,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7269:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 830,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "timeCreated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 603,
                            "src": "7269:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 831,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7285:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7285:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7269:31:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "7269:31:4"
                      },
                      {
                        "expression": {
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 835,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7310:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "proposalHash",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 615,
                            "src": "7310:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 838,
                            "name": "_proposalHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 771,
                            "src": "7327:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "7310:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "7310:30:4"
                      },
                      {
                        "expression": {
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 841,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 786,
                              "src": "7350:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 843,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "call_data",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 617,
                            "src": "7350:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 844,
                            "name": "_calldata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 773,
                            "src": "7364:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "7350:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 846,
                        "nodeType": "ExpressionStatement",
                        "src": "7350:23:4"
                      },
                      {
                        "expression": {
                          "id": 847,
                          "name": "proposalID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 542,
                          "src": "7390:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 780,
                        "id": 848,
                        "nodeType": "Return",
                        "src": "7383:17:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 765,
                    "nodeType": "StructuredDocumentation",
                    "src": "6481:335:4",
                    "text": "@notice newProposaln allows a user to create a proposal\n@param _target is the address this proposal is targeting\n@param _amount is a value amount associated with the call\n@param _proposalHash is an IPFS hash of a file representing a proposal\n@param _calldata is a bytes representation of a function call*"
                  },
                  "functionSelector": "b1050da5",
                  "id": 850,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 777,
                      "modifierName": {
                        "id": 776,
                        "name": "onlyMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 674,
                        "src": "6999:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6999:10:4"
                    }
                  ],
                  "name": "newProposal",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 775,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "6990:8:4"
                  },
                  "parameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "_target",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "6851:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6851:15:4",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "6884:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6884:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 771,
                        "mutability": "mutable",
                        "name": "_proposalHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "6909:27:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6909:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 773,
                        "mutability": "mutable",
                        "name": "_calldata",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "6946:22:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 772,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6946:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6841:133:4"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 850,
                        "src": "7019:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7019:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7018:9:4"
                  },
                  "scope": 1338,
                  "src": "6821:586:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1479
                  ],
                  "body": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "7682:33:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 859,
                            "name": "quorum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "7692:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 860,
                            "name": "_quorum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "7701:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7692:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 862,
                        "nodeType": "ExpressionStatement",
                        "src": "7692:16:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 851,
                    "nodeType": "StructuredDocumentation",
                    "src": "7413:202:4",
                    "text": "@notice setQuorum allows the owner of the DAO(normally set as the the DAO itself) to change\nthe quorum used in voting\n@notice _quorum is the input quarum number being set*"
                  },
                  "functionSelector": "c1ba4e59",
                  "id": 864,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 857,
                      "modifierName": {
                        "id": 856,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7672:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7672:9:4"
                    }
                  ],
                  "name": "setQuorum",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 855,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7663:8:4"
                  },
                  "parameters": {
                    "id": 854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "_quorum",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "7639:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7639:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7638:17:4"
                  },
                  "returnParameters": {
                    "id": 858,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7682:0:4"
                  },
                  "scope": 1338,
                  "src": "7620:95:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "8225:252:4",
                    "statements": [
                      {
                        "assignments": [
                          877
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 877,
                            "mutability": "mutable",
                            "name": "numerator",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "8283:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 876,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8283:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 886,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "_numerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 867,
                            "src": "8303:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8316:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 882,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 880,
                                    "name": "_precision",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 871,
                                    "src": "8321:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 881,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8334:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "8321:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 883,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8320:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8316:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8303:33:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8283:53:4"
                      },
                      {
                        "assignments": [
                          888
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 888,
                            "mutability": "mutable",
                            "name": "_quotient",
                            "nodeType": "VariableDeclaration",
                            "scope": 902,
                            "src": "8385:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 887,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8385:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 898,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 891,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 889,
                                        "name": "numerator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 877,
                                        "src": "8407:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 890,
                                        "name": "_denominator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 869,
                                        "src": "8419:12:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8407:24:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 892,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8406:26:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "35",
                                  "id": 893,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8435:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_5_by_1",
                                    "typeString": "int_const 5"
                                  },
                                  "value": "5"
                                },
                                "src": "8406:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 895,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8405:32:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8440:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "8405:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8385:57:4"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 899,
                              "name": "_quotient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "8460:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 900,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8459:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 875,
                        "id": 901,
                        "nodeType": "Return",
                        "src": "8452:18:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "7721:348:4",
                    "text": "@notice percent is an internal function used to calculate the ratio between a given numerator && denominator\n@param _numerator is the numerator of the equation\n@param _denominator is the denominator of the equation\n@param _precision is a precision point to ensure that decimals dont trail outside what the EVM can handle*"
                  },
                  "id": 903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_percent",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "_numerator",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "8101:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8101:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "_denominator",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "8129:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8129:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "_precision",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "8159:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8159:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8091:92:4"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "quotient",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "8207:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8207:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8206:18:4"
                  },
                  "scope": 1338,
                  "src": "8074:403:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 938,
                    "nodeType": "Block",
                    "src": "9010:276:4",
                    "statements": [
                      {
                        "assignments": [
                          914
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 914,
                            "mutability": "mutable",
                            "name": "percOfMemVoted",
                            "nodeType": "VariableDeclaration",
                            "scope": 938,
                            "src": "9020:22:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 913,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9020:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 920,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 916,
                              "name": "_numOfvotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "9054:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 917,
                              "name": "_numOfTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "9067:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9081:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 915,
                            "name": "_percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "9045:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9045:38:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9020:63:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 921,
                            "name": "_numOfvotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "9097:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 922,
                            "name": "_numOfTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 908,
                            "src": "9112:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9097:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 927,
                        "nodeType": "IfStatement",
                        "src": "9093:69:4",
                        "trueBody": {
                          "id": 926,
                          "nodeType": "Block",
                          "src": "9126:36:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9147:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 912,
                              "id": 925,
                              "nodeType": "Return",
                              "src": "9140:11:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 928,
                            "name": "percOfMemVoted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "9175:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 929,
                            "name": "quorum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "9193:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9175:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 936,
                          "nodeType": "Block",
                          "src": "9243:37:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9264:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 912,
                              "id": 935,
                              "nodeType": "Return",
                              "src": "9257:12:4"
                            }
                          ]
                        },
                        "id": 937,
                        "nodeType": "IfStatement",
                        "src": "9171:109:4",
                        "trueBody": {
                          "id": 933,
                          "nodeType": "Block",
                          "src": "9201:36:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9222:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 912,
                              "id": 932,
                              "nodeType": "Return",
                              "src": "9215:11:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "8483:397:4",
                    "text": "@notice _checkThreshold is an internal function used by a vote counts to see if enough of the community has voted\n@param _numOfvotes is the total  voteWeight a proposal has received\n@param _numOfTokens is the total supply of the synaps\n@notice this function returns a bool\n-true if the threshold is met\n-false if the threshold is not met*"
                  },
                  "id": 939,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkThreshold",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 909,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "_numOfvotes",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "8910:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8910:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "_numOfTokens",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "8931:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8931:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8909:43:4"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "9000:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9000:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8999:6:4"
                  },
                  "scope": 1338,
                  "src": "8885:401:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1487
                  ],
                  "body": {
                    "id": 1038,
                    "nodeType": "Block",
                    "src": "10009:717:4",
                    "statements": [
                      {
                        "assignments": [
                          952
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 952,
                            "mutability": "mutable",
                            "name": "p",
                            "nodeType": "VariableDeclaration",
                            "scope": 1038,
                            "src": "10019:18:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                              "typeString": "struct DecentraCore.Proposal"
                            },
                            "typeName": {
                              "id": 951,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 950,
                                "name": "Proposal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 627,
                                "src": "10019:8:4"
                              },
                              "referencedDeclaration": 627,
                              "src": "10019:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 956,
                        "initialValue": {
                          "baseExpression": {
                            "id": 953,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "10040:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$627_storage_$",
                              "typeString": "mapping(uint256 => struct DecentraCore.Proposal storage ref)"
                            }
                          },
                          "id": 955,
                          "indexExpression": {
                            "id": 954,
                            "name": "_ProposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 942,
                            "src": "10050:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10040:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$627_storage",
                            "typeString": "struct DecentraCore.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10019:43:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 958,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 952,
                                    "src": "10093:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                      "typeString": "struct DecentraCore.Proposal storage pointer"
                                    }
                                  },
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 626,
                                  "src": "10093:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 962,
                                "indexExpression": {
                                  "expression": {
                                    "id": 960,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10101:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10101:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10093:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10116:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "10093:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75204861766520616c726561647920766f746564206f6e20746869732070726f706f73616c",
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10134:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c",
                                "typeString": "literal_string \"You Have already voted on this proposal\""
                              },
                              "value": "You Have already voted on this proposal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b24e95b7a25ae387362c6dce5ef74e2b67878ffa1c80b45c8d97cc55135add4c",
                                "typeString": "literal_string \"You Have already voted on this proposal\""
                              }
                            ],
                            "id": 957,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10072:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10072:113:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 967,
                        "nodeType": "ExpressionStatement",
                        "src": "10072:113:4"
                      },
                      {
                        "assignments": [
                          969
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 969,
                            "mutability": "mutable",
                            "name": "vw",
                            "nodeType": "VariableDeclaration",
                            "scope": 1038,
                            "src": "10195:10:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 968,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10195:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 975,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 972,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10236:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10236:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 970,
                              "name": "dScore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 560,
                              "src": "10208:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDScore_$1411",
                                "typeString": "contract IDScore"
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calculateVotingPower",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1402,
                            "src": "10208:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10208:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10195:52:4"
                      },
                      {
                        "expression": {
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 976,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 952,
                              "src": "10258:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 607,
                            "src": "10258:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10269:10:4",
                            "subExpression": {
                              "expression": {
                                "id": 979,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 952,
                                "src": "10269:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                  "typeString": "struct DecentraCore.Proposal storage pointer"
                                }
                              },
                              "id": 980,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "voteID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 607,
                              "src": "10269:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10258:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 983,
                        "nodeType": "ExpressionStatement",
                        "src": "10258:21:4"
                      },
                      {
                        "expression": {
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 984,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 952,
                                "src": "10289:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                  "typeString": "struct DecentraCore.Proposal storage pointer"
                                }
                              },
                              "id": 988,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "votes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 622,
                              "src": "10289:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$634_storage_$",
                                "typeString": "mapping(uint256 => struct DecentraCore.Vote storage ref)"
                              }
                            },
                            "id": 989,
                            "indexExpression": {
                              "expression": {
                                "id": 986,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 952,
                                "src": "10297:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                  "typeString": "struct DecentraCore.Proposal storage pointer"
                                }
                              },
                              "id": 987,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "voteID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 607,
                              "src": "10297:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10289:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$634_storage",
                              "typeString": "struct DecentraCore.Vote storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 991,
                                "name": "supportsProposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 944,
                                "src": "10339:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "expression": {
                                  "id": 992,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10376:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "10376:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 994,
                                "name": "vw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 969,
                                "src": "10412:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 990,
                              "name": "Vote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 634,
                              "src": "10309:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Vote_$634_storage_ptr_$",
                                "typeString": "type(struct DecentraCore.Vote storage pointer)"
                              }
                            },
                            "id": 995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "inSupport",
                              "voter",
                              "voteWeight"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10309:116:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vote_$634_memory_ptr",
                              "typeString": "struct DecentraCore.Vote memory"
                            }
                          },
                          "src": "10289:136:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vote_$634_storage",
                            "typeString": "struct DecentraCore.Vote storage ref"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "10289:136:4"
                      },
                      {
                        "expression": {
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 998,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 952,
                              "src": "10435:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal storage pointer"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voteWeights",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 605,
                            "src": "10435:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1004,
                                "name": "vw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 969,
                                "src": "10469:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 1001,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "10451:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                    "typeString": "struct DecentraCore.Proposal storage pointer"
                                  }
                                },
                                "id": 1002,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "voteWeights",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 605,
                                "src": "10451:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 386,
                              "src": "10451:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10451:21:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10435:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1007,
                        "nodeType": "ExpressionStatement",
                        "src": "10435:37:4"
                      },
                      {
                        "expression": {
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1008,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 952,
                                "src": "10482:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                  "typeString": "struct DecentraCore.Proposal storage pointer"
                                }
                              },
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "voted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 626,
                              "src": "10482:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1013,
                            "indexExpression": {
                              "expression": {
                                "id": 1010,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10490:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10490:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10482:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10504:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "10482:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1016,
                        "nodeType": "ExpressionStatement",
                        "src": "10482:26:4"
                      },
                      {
                        "assignments": [
                          1018
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1018,
                            "mutability": "mutable",
                            "name": "ts",
                            "nodeType": "VariableDeclaration",
                            "scope": 1038,
                            "src": "10518:10:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1017,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10518:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1022,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1019,
                              "name": "ds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "10531:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                                "typeString": "contract IDecentraStock"
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 118,
                            "src": "10531:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10531:16:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10518:29:4"
                      },
                      {
                        "assignments": [
                          1024
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1024,
                            "mutability": "mutable",
                            "name": "met",
                            "nodeType": "VariableDeclaration",
                            "scope": 1038,
                            "src": "10603:8:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1023,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "10603:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1030,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1026,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 952,
                                "src": "10630:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                  "typeString": "struct DecentraCore.Proposal storage pointer"
                                }
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "voteWeights",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 605,
                              "src": "10630:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1028,
                              "name": "ts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1018,
                              "src": "10645:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1025,
                            "name": "_checkThreshold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "10614:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,uint256) view returns (bool)"
                            }
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10614:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10603:45:4"
                      },
                      {
                        "condition": {
                          "id": 1031,
                          "name": "met",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1024,
                          "src": "10662:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1037,
                        "nodeType": "IfStatement",
                        "src": "10658:62:4",
                        "trueBody": {
                          "id": 1036,
                          "nodeType": "Block",
                          "src": "10667:53:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1033,
                                    "name": "_ProposalID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 942,
                                    "src": "10697:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1032,
                                  "name": "executeProposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1170,
                                  "src": "10681:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10681:28:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1035,
                              "nodeType": "ExpressionStatement",
                              "src": "10681:28:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 940,
                    "nodeType": "StructuredDocumentation",
                    "src": "9292:599:4",
                    "text": "@notice the vote function allows a DecentraCorp member to vote on proposals\n@param _ProposalID is the number ID associated with the particular proposal the user wishes to vote on\n@param  supportsProposal is a bool value(true or false) representing whether or not a member supports a proposal\n-true if they do support the proposal\n-false if they do not support the proposal\n@dev this function will trigger the _checkThreshold function which determines if enough members have voted to\nfire the executeProposal function.*"
                  },
                  "functionSelector": "c9d27afe",
                  "id": 1039,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 948,
                      "modifierName": {
                        "id": 947,
                        "name": "onlyMember",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 674,
                        "src": "9994:10:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9994:10:4"
                    }
                  ],
                  "name": "vote",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 946,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "9977:8:4"
                  },
                  "parameters": {
                    "id": 945,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "_ProposalID",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "9910:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9910:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 944,
                        "mutability": "mutable",
                        "name": "supportsProposal",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "9931:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 943,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9931:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9909:44:4"
                  },
                  "returnParameters": {
                    "id": 949,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10009:0:4"
                  },
                  "scope": 1338,
                  "src": "9896:830:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1169,
                    "nodeType": "Block",
                    "src": "11055:1328:4",
                    "statements": [
                      {
                        "assignments": [
                          1047
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1047,
                            "mutability": "mutable",
                            "name": "p",
                            "nodeType": "VariableDeclaration",
                            "scope": 1169,
                            "src": "11065:18:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                              "typeString": "struct DecentraCore.Proposal"
                            },
                            "typeName": {
                              "id": 1046,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1045,
                                "name": "Proposal",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 627,
                                "src": "11065:8:4"
                              },
                              "referencedDeclaration": 627,
                              "src": "11065:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                "typeString": "struct DecentraCore.Proposal"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1051,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1048,
                            "name": "proposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "11086:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$627_storage_$",
                              "typeString": "mapping(uint256 => struct DecentraCore.Proposal storage ref)"
                            }
                          },
                          "id": 1050,
                          "indexExpression": {
                            "id": 1049,
                            "name": "_proposalID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "11096:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11086:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Proposal_$627_storage",
                            "typeString": "struct DecentraCore.Proposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11065:43:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1055,
                                  "name": "p",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1047,
                                  "src": "11143:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                    "typeString": "struct DecentraCore.Proposal storage pointer"
                                  }
                                },
                                "id": 1056,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timeCreated",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 603,
                                "src": "11143:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 1052,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11123:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "11123:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 401,
                              "src": "11123:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11123:34:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1058,
                            "name": "proposalTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "11161:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11123:50:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1167,
                          "nodeType": "Block",
                          "src": "11317:1060:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "11399:11:4",
                                    "subExpression": {
                                      "expression": {
                                        "id": 1074,
                                        "name": "p",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1047,
                                        "src": "11400:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                          "typeString": "struct DecentraCore.Proposal storage pointer"
                                        }
                                      },
                                      "id": 1075,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "executed",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 611,
                                      "src": "11400:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "546869732070726f706f73616c2068617320616c7265616479206265656e206578656375746564",
                                    "id": 1077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11412:41:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b",
                                      "typeString": "literal_string \"This proposal has already been executed\""
                                    },
                                    "value": "This proposal has already been executed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ed11969f9ee3f53cac6611296141ef41752e6875b427e4e93ac14a22a59af90b",
                                      "typeString": "literal_string \"This proposal has already been executed\""
                                    }
                                  ],
                                  "id": 1073,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11391:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11391:63:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1079,
                              "nodeType": "ExpressionStatement",
                              "src": "11391:63:4"
                            },
                            {
                              "assignments": [
                                1081
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1081,
                                  "mutability": "mutable",
                                  "name": "yea",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1167,
                                  "src": "11469:11:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1080,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11469:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1083,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11483:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11469:15:4"
                            },
                            {
                              "assignments": [
                                1085
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1085,
                                  "mutability": "mutable",
                                  "name": "nay",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1167,
                                  "src": "11498:11:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1084,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11498:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1087,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 1086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11512:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11498:15:4"
                            },
                            {
                              "body": {
                                "id": 1128,
                                "nodeType": "Block",
                                "src": "11672:237:4",
                                "statements": [
                                  {
                                    "assignments": [
                                      1101
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1101,
                                        "mutability": "mutable",
                                        "name": "v",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1128,
                                        "src": "11690:14:4",
                                        "stateVariable": false,
                                        "storageLocation": "storage",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Vote_$634_storage_ptr",
                                          "typeString": "struct DecentraCore.Vote"
                                        },
                                        "typeName": {
                                          "id": 1100,
                                          "nodeType": "UserDefinedTypeName",
                                          "pathNode": {
                                            "id": 1099,
                                            "name": "Vote",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 634,
                                            "src": "11690:4:4"
                                          },
                                          "referencedDeclaration": 634,
                                          "src": "11690:4:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Vote_$634_storage_ptr",
                                            "typeString": "struct DecentraCore.Vote"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1106,
                                    "initialValue": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1102,
                                          "name": "p",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1047,
                                          "src": "11707:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                            "typeString": "struct DecentraCore.Proposal storage pointer"
                                          }
                                        },
                                        "id": 1103,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "votes",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 622,
                                        "src": "11707:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vote_$634_storage_$",
                                          "typeString": "mapping(uint256 => struct DecentraCore.Vote storage ref)"
                                        }
                                      },
                                      "id": 1105,
                                      "indexExpression": {
                                        "id": 1104,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1089,
                                        "src": "11715:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11707:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vote_$634_storage",
                                        "typeString": "struct DecentraCore.Vote storage ref"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "11690:27:4"
                                  },
                                  {
                                    "condition": {
                                      "expression": {
                                        "id": 1107,
                                        "name": "v",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1101,
                                        "src": "11740:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Vote_$634_storage_ptr",
                                          "typeString": "struct DecentraCore.Vote storage pointer"
                                        }
                                      },
                                      "id": 1108,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "inSupport",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 629,
                                      "src": "11740:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 1126,
                                      "nodeType": "Block",
                                      "src": "11827:68:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1124,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1118,
                                              "name": "nay",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1085,
                                              "src": "11849:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "expression": {
                                                    "id": 1121,
                                                    "name": "v",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1101,
                                                    "src": "11863:1:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Vote_$634_storage_ptr",
                                                      "typeString": "struct DecentraCore.Vote storage pointer"
                                                    }
                                                  },
                                                  "id": 1122,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "voteWeight",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 633,
                                                  "src": "11863:12:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 1119,
                                                  "name": "nay",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1085,
                                                  "src": "11855:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1120,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "add",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 386,
                                                "src": "11855:7:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1123,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11855:21:4",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11849:27:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1125,
                                          "nodeType": "ExpressionStatement",
                                          "src": "11849:27:4"
                                        }
                                      ]
                                    },
                                    "id": 1127,
                                    "nodeType": "IfStatement",
                                    "src": "11736:159:4",
                                    "trueBody": {
                                      "id": 1117,
                                      "nodeType": "Block",
                                      "src": "11753:68:4",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1115,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1109,
                                              "name": "yea",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1081,
                                              "src": "11775:3:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "expression": {
                                                    "id": 1112,
                                                    "name": "v",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1101,
                                                    "src": "11789:1:4",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Vote_$634_storage_ptr",
                                                      "typeString": "struct DecentraCore.Vote storage pointer"
                                                    }
                                                  },
                                                  "id": 1113,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "voteWeight",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 633,
                                                  "src": "11789:12:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 1110,
                                                  "name": "yea",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1081,
                                                  "src": "11781:3:4",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1111,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "add",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 386,
                                                "src": "11781:7:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1114,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "11781:21:4",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "11775:27:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1116,
                                          "nodeType": "ExpressionStatement",
                                          "src": "11775:27:4"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1095,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1092,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1089,
                                  "src": "11652:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1093,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1047,
                                    "src": "11657:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                      "typeString": "struct DecentraCore.Proposal storage pointer"
                                    }
                                  },
                                  "id": 1094,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "voteID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 607,
                                  "src": "11657:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11652:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1129,
                              "initializationExpression": {
                                "assignments": [
                                  1089
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1089,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1129,
                                    "src": "11637:9:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1088,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11637:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1091,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 1090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11649:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "11637:13:4"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 1097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": true,
                                  "src": "11667:3:4",
                                  "subExpression": {
                                    "id": 1096,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1089,
                                    "src": "11669:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1098,
                                "nodeType": "ExpressionStatement",
                                "src": "11667:3:4"
                              },
                              "nodeType": "ForStatement",
                              "src": "11632:277:4"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1130,
                                  "name": "yea",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1081,
                                  "src": "11985:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 1131,
                                  "name": "nay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1085,
                                  "src": "11991:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11985:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1165,
                                "nodeType": "Block",
                                "src": "12215:152:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1157,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 1153,
                                          "name": "p",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1047,
                                          "src": "12293:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                            "typeString": "struct DecentraCore.Proposal storage pointer"
                                          }
                                        },
                                        "id": 1155,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "executed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 611,
                                        "src": "12293:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12306:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "12293:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1158,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12293:17:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1163,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 1159,
                                          "name": "p",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1047,
                                          "src": "12328:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                            "typeString": "struct DecentraCore.Proposal storage pointer"
                                          }
                                        },
                                        "id": 1161,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "proposalPassed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 613,
                                        "src": "12328:16:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "66616c7365",
                                        "id": 1162,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12347:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      "src": "12328:24:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1164,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12328:24:4"
                                  }
                                ]
                              },
                              "id": 1166,
                              "nodeType": "IfStatement",
                              "src": "11981:386:4",
                              "trueBody": {
                                "id": 1152,
                                "nodeType": "Block",
                                "src": "11996:213:4",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 1134,
                                            "name": "p",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1047,
                                            "src": "12035:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                              "typeString": "struct DecentraCore.Proposal storage pointer"
                                            }
                                          },
                                          "id": 1135,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "target",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 601,
                                          "src": "12035:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 1136,
                                            "name": "p",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1047,
                                            "src": "12045:1:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                              "typeString": "struct DecentraCore.Proposal storage pointer"
                                            }
                                          },
                                          "id": 1137,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "call_data",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 617,
                                          "src": "12045:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_storage",
                                            "typeString": "bytes storage ref"
                                          }
                                        ],
                                        "id": 1133,
                                        "name": "delegateFunctionCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 746,
                                        "src": "12014:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (address payable,bytes memory)"
                                        }
                                      },
                                      "id": 1138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12014:43:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1139,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12014:43:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 1140,
                                          "name": "p",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1047,
                                          "src": "12136:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                            "typeString": "struct DecentraCore.Proposal storage pointer"
                                          }
                                        },
                                        "id": 1142,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "executed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 611,
                                        "src": "12136:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1143,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12149:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "12136:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1145,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12136:17:4"
                                  },
                                  {
                                    "expression": {
                                      "id": 1150,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 1146,
                                          "name": "p",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1047,
                                          "src": "12171:1:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                            "typeString": "struct DecentraCore.Proposal storage pointer"
                                          }
                                        },
                                        "id": 1148,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "proposalPassed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 613,
                                        "src": "12171:16:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1149,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12190:4:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "12171:23:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1151,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12171:23:4"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1168,
                        "nodeType": "IfStatement",
                        "src": "11119:1258:4",
                        "trueBody": {
                          "id": 1072,
                          "nodeType": "Block",
                          "src": "11175:136:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1060,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1047,
                                    "src": "11245:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                      "typeString": "struct DecentraCore.Proposal storage pointer"
                                    }
                                  },
                                  "id": 1062,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "executed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 611,
                                  "src": "11245:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1063,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11258:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "11245:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1065,
                              "nodeType": "ExpressionStatement",
                              "src": "11245:17:4"
                            },
                            {
                              "expression": {
                                "id": 1070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1066,
                                    "name": "p",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1047,
                                    "src": "11276:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proposal_$627_storage_ptr",
                                      "typeString": "struct DecentraCore.Proposal storage pointer"
                                    }
                                  },
                                  "id": 1068,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "proposalPassed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 613,
                                  "src": "11276:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11295:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "11276:24:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1071,
                              "nodeType": "ExpressionStatement",
                              "src": "11276:24:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1040,
                    "nodeType": "StructuredDocumentation",
                    "src": "10732:263:4",
                    "text": "@notice executeProposal is the function that executes the terms of a proposal\n@dev this function is called by the vote function when the number of votes reaches the quorum\n@param _proposalID is the ID number of the proposal being executed.*"
                  },
                  "id": 1170,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "executeProposal",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1043,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1042,
                        "mutability": "mutable",
                        "name": "_proposalID",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "11025:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11025:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11024:21:4"
                  },
                  "returnParameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11055:0:4"
                  },
                  "scope": 1338,
                  "src": "11000:1383:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1495
                  ],
                  "body": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "12933:375:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1182,
                                  "name": "_privledge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1175,
                                  "src": "12964:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12977:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "12964:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1185,
                                  "name": "_privledge",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1175,
                                  "src": "12982:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 1186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12995:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "12982:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "12964:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446563656e747261436f72653a20496e76616c696420496e70757420507269766c65646765",
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13010:39:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b",
                                "typeString": "literal_string \"DecentraCore: Invalid Input Privledge\""
                              },
                              "value": "DecentraCore: Invalid Input Privledge"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_585a8aad645bb2b4c0d703030e23d83448efeb41da97b80fb059efb9cb14018b",
                                "typeString": "literal_string \"DecentraCore: Invalid Input Privledge\""
                              }
                            ],
                            "id": 1181,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12943:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12943:116:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1191,
                        "nodeType": "ExpressionStatement",
                        "src": "12943:116:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1192,
                            "name": "_privledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "13073:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13087:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13073:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1202,
                        "nodeType": "IfStatement",
                        "src": "13069:71:4",
                        "trueBody": {
                          "id": 1201,
                          "nodeType": "Block",
                          "src": "13090:50:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1195,
                                    "name": "minters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 581,
                                    "src": "13104:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1197,
                                  "indexExpression": {
                                    "id": 1196,
                                    "name": "_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1173,
                                    "src": "13112:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13104:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13125:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "13104:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1200,
                              "nodeType": "ExpressionStatement",
                              "src": "13104:25:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1203,
                            "name": "_privledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "13153:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13167:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13153:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1213,
                        "nodeType": "IfStatement",
                        "src": "13149:71:4",
                        "trueBody": {
                          "id": 1212,
                          "nodeType": "Block",
                          "src": "13170:50:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1206,
                                    "name": "burners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 586,
                                    "src": "13184:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1208,
                                  "indexExpression": {
                                    "id": 1207,
                                    "name": "_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1173,
                                    "src": "13192:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13184:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13205:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "13184:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1211,
                              "nodeType": "ExpressionStatement",
                              "src": "13184:25:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1214,
                            "name": "_privledge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1175,
                            "src": "13233:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13247:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "13233:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1224,
                        "nodeType": "IfStatement",
                        "src": "13229:73:4",
                        "trueBody": {
                          "id": 1223,
                          "nodeType": "Block",
                          "src": "13250:52:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1217,
                                    "name": "dScoreMod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 592,
                                    "src": "13264:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1219,
                                  "indexExpression": {
                                    "id": 1218,
                                    "name": "_contract",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1173,
                                    "src": "13274:9:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13264:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13287:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "13264:27:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1222,
                              "nodeType": "ExpressionStatement",
                              "src": "13264:27:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1171,
                    "nodeType": "StructuredDocumentation",
                    "src": "12389:415:4",
                    "text": "@notice setApprovedContract is a protected function that allows a successful proposal to grant\nprivledges to DecentraCorp contracts\n@param _contract is the address of the contract being approved\n@param _privledge is a number representing which privledge is being set\n@dev privledges:\n1. Minting\n2. Burning\n3. D-Score"
                  },
                  "functionSelector": "1268b7d2",
                  "id": 1226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1179,
                      "modifierName": {
                        "id": 1178,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12919:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12919:9:4"
                    }
                  ],
                  "name": "setApprovedContract",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1177,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "12902:8:4"
                  },
                  "parameters": {
                    "id": 1176,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1173,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "12838:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12838:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1175,
                        "mutability": "mutable",
                        "name": "_privledge",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "12857:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1174,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12857:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12837:39:4"
                  },
                  "returnParameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12933:0:4"
                  },
                  "scope": 1338,
                  "src": "12809:499:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1501
                  ],
                  "body": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "13813:214:4",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 1235,
                            "name": "frozenAccounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "13827:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1237,
                          "indexExpression": {
                            "id": 1236,
                            "name": "_member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "13842:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13827:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1258,
                          "nodeType": "Block",
                          "src": "13914:107:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1245,
                                    "name": "frozenAccounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 565,
                                    "src": "13928:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1247,
                                  "indexExpression": {
                                    "id": 1246,
                                    "name": "_member",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1229,
                                    "src": "13943:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13928:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13954:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "13928:30:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1250,
                              "nodeType": "ExpressionStatement",
                              "src": "13928:30:4"
                            },
                            {
                              "expression": {
                                "id": 1256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1251,
                                    "name": "freezeFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 570,
                                    "src": "13972:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1253,
                                  "indexExpression": {
                                    "id": 1252,
                                    "name": "_member",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1229,
                                    "src": "13984:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13972:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1254,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "13995:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "13995:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13972:38:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1257,
                              "nodeType": "ExpressionStatement",
                              "src": "13972:38:4"
                            }
                          ]
                        },
                        "id": 1259,
                        "nodeType": "IfStatement",
                        "src": "13823:198:4",
                        "trueBody": {
                          "id": 1244,
                          "nodeType": "Block",
                          "src": "13852:56:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 1242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1238,
                                    "name": "frozenAccounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 565,
                                    "src": "13866:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 1240,
                                  "indexExpression": {
                                    "id": 1239,
                                    "name": "_member",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1229,
                                    "src": "13881:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "13866:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13892:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "13866:31:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1243,
                              "nodeType": "ExpressionStatement",
                              "src": "13866:31:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1227,
                    "nodeType": "StructuredDocumentation",
                    "src": "13314:427:4",
                    "text": "@notice freezeMember is a protected function used to allow for a DecentraCorp contract to freeze an account\nin the case of suspected fraud\n@param _member is the address of the member who is being frozen\n@dev this function is intended to be called by the audit contracts of phase two and will not play an active role in phase one\n@dev this function can also be used to un-freeze an account"
                  },
                  "functionSelector": "3e410717",
                  "id": 1261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1233,
                      "modifierName": {
                        "id": 1232,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13803:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13803:9:4"
                    }
                  ],
                  "name": "freezeMember",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1231,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "13794:8:4"
                  },
                  "parameters": {
                    "id": 1230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1229,
                        "mutability": "mutable",
                        "name": "_member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1261,
                        "src": "13768:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13768:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13767:17:4"
                  },
                  "returnParameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13813:0:4"
                  },
                  "scope": 1338,
                  "src": "13746:281:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    1509
                  ],
                  "body": {
                    "id": 1279,
                    "nodeType": "Block",
                    "src": "14370:40:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1275,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "14390:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1276,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "14395:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1272,
                              "name": "dd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "14380:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDecentraDollar_$1575",
                                "typeString": "contract IDecentraDollar"
                              }
                            },
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mintDD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1566,
                            "src": "14380:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14380:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1278,
                        "nodeType": "ExpressionStatement",
                        "src": "14380:23:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1262,
                    "nodeType": "StructuredDocumentation",
                    "src": "14033:228:4",
                    "text": "@notice proxyMintDD is a protected function that allows an approved contract to mint DecentraDollar\n@param _to is the address the DecentraDollar is being minted to\n@param _amount is the amount being minted"
                  },
                  "functionSelector": "83ac74f9",
                  "id": 1280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1270,
                      "modifierName": {
                        "id": 1269,
                        "name": "onlyMint",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 647,
                        "src": "14357:8:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14357:8:4"
                    }
                  ],
                  "name": "proxyMintDD",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1268,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "14340:8:4"
                  },
                  "parameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1264,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1280,
                        "src": "14287:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14287:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1280,
                        "src": "14300:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14300:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14286:30:4"
                  },
                  "returnParameters": {
                    "id": 1271,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14370:0:4"
                  },
                  "scope": 1338,
                  "src": "14266:144:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1517
                  ],
                  "body": {
                    "id": 1298,
                    "nodeType": "Block",
                    "src": "14752:44:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1294,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "14776:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1295,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1285,
                              "src": "14781:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1291,
                              "name": "ds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "14762:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                                "typeString": "contract IDecentraStock"
                              }
                            },
                            "id": 1293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issueStock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1594,
                            "src": "14762:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14762:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1297,
                        "nodeType": "ExpressionStatement",
                        "src": "14762:27:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1281,
                    "nodeType": "StructuredDocumentation",
                    "src": "14416:227:4",
                    "text": "@notice proxyMintDS is a protected function that allows an approved contract to issue DecentraStock\n@param _to is the address the DecentraStock is being issued to\n@param _amount is the amount being issued"
                  },
                  "functionSelector": "82f4f5b4",
                  "id": 1299,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1289,
                      "modifierName": {
                        "id": 1288,
                        "name": "onlyMint",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 647,
                        "src": "14739:8:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14739:8:4"
                    }
                  ],
                  "name": "proxyMintDS",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1287,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "14722:8:4"
                  },
                  "parameters": {
                    "id": 1286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1283,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1299,
                        "src": "14669:11:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14669:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1285,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1299,
                        "src": "14682:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1284,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14682:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14668:30:4"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14752:0:4"
                  },
                  "scope": 1338,
                  "src": "14648:148:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1525
                  ],
                  "body": {
                    "id": 1317,
                    "nodeType": "Block",
                    "src": "15145:42:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1313,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "15165:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1314,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1304,
                              "src": "15172:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1310,
                              "name": "dd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "15155:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDecentraDollar_$1575",
                                "typeString": "contract IDecentraDollar"
                              }
                            },
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnDD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1574,
                            "src": "15155:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15155:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "15155:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1300,
                    "nodeType": "StructuredDocumentation",
                    "src": "14802:232:4",
                    "text": "@notice proxyBurnDD is a protected function that allows an approved contract to burn DecentraDollar\n@param _from is the address the DecentraDollar is being burned from\n@param _amount is the amount being burned"
                  },
                  "functionSelector": "d7c93180",
                  "id": 1318,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1308,
                      "modifierName": {
                        "id": 1307,
                        "name": "onlyBurn",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 660,
                        "src": "15132:8:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15132:8:4"
                    }
                  ],
                  "name": "proxyBurnDD",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1306,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "15115:8:4"
                  },
                  "parameters": {
                    "id": 1305,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1302,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1318,
                        "src": "15060:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1301,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15060:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1304,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1318,
                        "src": "15075:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1303,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15075:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15059:32:4"
                  },
                  "returnParameters": {
                    "id": 1309,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15145:0:4"
                  },
                  "scope": 1338,
                  "src": "15039:148:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1533
                  ],
                  "body": {
                    "id": 1336,
                    "nodeType": "Block",
                    "src": "15534:45:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1332,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1321,
                              "src": "15557:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1333,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "15564:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1329,
                              "name": "ds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 556,
                              "src": "15544:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDecentraStock_$1603",
                                "typeString": "contract IDecentraStock"
                              }
                            },
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burnStock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1602,
                            "src": "15544:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15544:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1335,
                        "nodeType": "ExpressionStatement",
                        "src": "15544:28:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1319,
                    "nodeType": "StructuredDocumentation",
                    "src": "15193:230:4",
                    "text": "@notice proxyBurnDS is a protected function that allows an approved contract to burn DecentraStock\n@param _from is the address the DecentraStock is being burned from\n@param _amount is the amount being burned"
                  },
                  "functionSelector": "9c94f651",
                  "id": 1337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1327,
                      "modifierName": {
                        "id": 1326,
                        "name": "onlyBurn",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 660,
                        "src": "15521:8:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15521:8:4"
                    }
                  ],
                  "name": "proxyBurnDS",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1325,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "15504:8:4"
                  },
                  "parameters": {
                    "id": 1324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "15449:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15449:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1323,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "15464:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15464:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15448:32:4"
                  },
                  "returnParameters": {
                    "id": 1328,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15534:0:4"
                  },
                  "scope": 1338,
                  "src": "15428:151:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1339,
              "src": "628:14953:4"
            }
          ],
          "src": "32:15550:4"
        },
        "id": 4
      },
      "contracts/interfaces/IDScore.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IDScore.sol",
          "exportedSymbols": {
            "IDScore": [
              1411
            ]
          },
          "id": 1412,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1340,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1411,
              "linearizedBaseContracts": [
                1411
              ],
              "name": "IDScore",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1346,
                  "name": "MembershipStaked",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1342,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "104:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "104:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1344,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountStaked",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "120:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "120:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "103:38:5"
                  },
                  "src": "81:61:5"
                },
                {
                  "anonymous": false,
                  "id": 1354,
                  "name": "DScoreIncreased",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1354,
                        "src": "179:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "179:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1350,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "factor",
                        "nodeType": "VariableDeclaration",
                        "scope": 1354,
                        "src": "203:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "203:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1352,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIncreased",
                        "nodeType": "VariableDeclaration",
                        "scope": 1354,
                        "src": "227:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "227:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "169:87:5"
                  },
                  "src": "148:109:5"
                },
                {
                  "anonymous": false,
                  "id": 1362,
                  "name": "DScoreDecreased",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1356,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1362,
                        "src": "294:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1355,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "294:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1358,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "factor",
                        "nodeType": "VariableDeclaration",
                        "scope": 1362,
                        "src": "318:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1357,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1360,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountDecreased",
                        "nodeType": "VariableDeclaration",
                        "scope": 1362,
                        "src": "342:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1359,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "342:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "284:87:5"
                  },
                  "src": "263:109:5"
                },
                {
                  "anonymous": false,
                  "id": 1368,
                  "name": "Memberfrozen",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1364,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1368,
                        "src": "397:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "397:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1366,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timeFrozen",
                        "nodeType": "VariableDeclaration",
                        "scope": 1368,
                        "src": "413:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1365,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "413:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "396:36:5"
                  },
                  "src": "378:55:5"
                },
                {
                  "documentation": {
                    "id": 1369,
                    "nodeType": "StructuredDocumentation",
                    "src": "439:202:5",
                    "text": "@notice stakeMembership allows a user to stake DecentraStock in-order to become a Decentracorp member\n@param _stakeAmount is the amount of DecentraStock being staked on the users membership"
                  },
                  "functionSelector": "a2314bea",
                  "id": 1374,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "stakeMembership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "_stakeAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "671:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "671:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "670:22:5"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "701:0:5"
                  },
                  "scope": 1411,
                  "src": "646:56:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1375,
                    "nodeType": "StructuredDocumentation",
                    "src": "708:1286:5",
                    "text": "@notice increaseDScore is a protected function that allows approved DecentraCorp contracts to increase a users D-Score\n@param _member is the address of the member who's D-Score is being increased\n@param _factor is the number representing which factor of the users D-Score is being increased\n@param _amount is the amount the user's D-Score is being increased by\n@dev D-Score factors are represented by a number within a mapping. The key for this mapping is as follows:\n0 - Level: a members level is determined by the DecentraCorp community as a way of rewarding members for non\nD-job related tasks such as a technical task, community service, or other work related reward.\n1 - Jobs: the number of completed jobs done by the member.\n2 - Votes: the number of DecentraCorp votes the member has participated in.\n3 - Reputation: the overall average of the rating of each job performed.\n4 - Staked: the number of DercentraStock a member has staked\n5 - Verified: number of times this member has been audited by other members\n6 - Audit: number of other members this account has audited\n@dev some of these factors are increased in ways other than this function such as #2 for votes"
                  },
                  "functionSelector": "c0ecce95",
                  "id": 1384,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseDScore",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "_member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1384,
                        "src": "2032:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2032:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "mutability": "mutable",
                        "name": "_factor",
                        "nodeType": "VariableDeclaration",
                        "scope": 1384,
                        "src": "2057:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2057:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1384,
                        "src": "2082:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2082:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2022:81:5"
                  },
                  "returnParameters": {
                    "id": 1383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2112:0:5"
                  },
                  "scope": 1411,
                  "src": "1999:114:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1385,
                    "nodeType": "StructuredDocumentation",
                    "src": "2119:374:5",
                    "text": "@notice increaseDScore is a protected function that allows approved DecentraCorp contracts to decrease a users D-Score\n@param _member is the address of the member who's D-Score is being decrease\n@param _factor is the number representing which factor of the users D-Score is being decrease\n@param _amount is the amount the user's D-Score is being decrease by"
                  },
                  "functionSelector": "d40ef772",
                  "id": 1394,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseDScore",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1387,
                        "mutability": "mutable",
                        "name": "_member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "2531:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1386,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2531:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1389,
                        "mutability": "mutable",
                        "name": "_factor",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "2556:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2556:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1391,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1394,
                        "src": "2581:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1390,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2581:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2521:81:5"
                  },
                  "returnParameters": {
                    "id": 1393,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2611:0:5"
                  },
                  "scope": 1411,
                  "src": "2498:114:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1395,
                    "nodeType": "StructuredDocumentation",
                    "src": "2618:201:5",
                    "text": "@notice calculateVotingPower is used to calculate a members current voting power relative to their D-Score\n@param _member is the address of the member who's voting power is being retreived"
                  },
                  "functionSelector": "59d177e6",
                  "id": 1402,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateVotingPower",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1397,
                        "mutability": "mutable",
                        "name": "_member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "2854:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2854:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2853:17:5"
                  },
                  "returnParameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1400,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "2918:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1399,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2918:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2917:9:5"
                  },
                  "scope": 1411,
                  "src": "2824:103:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1403,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:316:5",
                    "text": "@notice checkStaked is a view only function to easily check if an account is a staked member\n@param _member is the address in question\n@dev this function returns a bool for \"yes staked\" or \"not staked\". This function does NOT return\nthe amount a member has staked"
                  },
                  "functionSelector": "247f8e14",
                  "id": 1410,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkStaked",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1405,
                        "mutability": "mutable",
                        "name": "_member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1410,
                        "src": "3275:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1404,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3275:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3274:17:5"
                  },
                  "returnParameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1408,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1410,
                        "src": "3315:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3315:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3314:6:5"
                  },
                  "scope": 1411,
                  "src": "3254:67:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1412,
              "src": "57:3266:5"
            }
          ],
          "src": "32:3292:5"
        },
        "id": 5
      },
      "contracts/interfaces/IDecentraCore.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IDecentraCore.sol",
          "exportedSymbols": {
            "IDecentraCore": [
              1541
            ]
          },
          "id": 1542,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1413,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1541,
              "linearizedBaseContracts": [
                1541
              ],
              "name": "IDecentraCore",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1423,
                  "name": "NewProposal",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1415,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1423,
                        "src": "114:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "114:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1417,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1423,
                        "src": "142:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "142:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1419,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 1423,
                        "src": "174:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1418,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "174:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1421,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "call_data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1423,
                        "src": "198:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "198:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "104:115:6"
                  },
                  "src": "87:133:6"
                },
                {
                  "anonymous": false,
                  "id": 1431,
                  "name": "NewVote",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1425,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1431,
                        "src": "240:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "240:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1427,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "voter",
                        "nodeType": "VariableDeclaration",
                        "scope": 1431,
                        "src": "260:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1426,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "260:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1429,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vote",
                        "nodeType": "VariableDeclaration",
                        "scope": 1431,
                        "src": "275:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1428,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "275:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "239:46:6"
                  },
                  "src": "226:60:6"
                },
                {
                  "anonymous": false,
                  "id": 1437,
                  "name": "ProposalApproved",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1433,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "proposalId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1437,
                        "src": "315:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1432,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "315:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1435,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "success",
                        "nodeType": "VariableDeclaration",
                        "scope": 1437,
                        "src": "335:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "335:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "314:34:6"
                  },
                  "src": "292:57:6"
                },
                {
                  "anonymous": false,
                  "id": 1443,
                  "name": "FunctionCallDelegated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1439,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "target",
                        "nodeType": "VariableDeclaration",
                        "scope": 1443,
                        "src": "438:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "438:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1441,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "call_data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1443,
                        "src": "454:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1440,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "454:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "437:33:6"
                  },
                  "src": "410:61:6"
                },
                {
                  "documentation": {
                    "id": 1444,
                    "nodeType": "StructuredDocumentation",
                    "src": "477:303:6",
                    "text": "@notice delegateFunctionCall is a protected function that allows the DecentraCorp contract\nto make arbitrary calls to other contracts\n@param _target is the address of the target of the call\n@param call_data is the packaged function call that will be fired if this proposal is successful"
                  },
                  "functionSelector": "bd621fa3",
                  "id": 1451,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "delegateFunctionCall",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1446,
                        "mutability": "mutable",
                        "name": "_target",
                        "nodeType": "VariableDeclaration",
                        "scope": 1451,
                        "src": "824:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1445,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "824:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "call_data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1451,
                        "src": "857:22:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1447,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "857:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "814:71:6"
                  },
                  "returnParameters": {
                    "id": 1450,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "894:0:6"
                  },
                  "scope": 1541,
                  "src": "785:110:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1452,
                    "nodeType": "StructuredDocumentation",
                    "src": "901:273:6",
                    "text": "@notice transferxDAI is used to easily transfer xDAI from the DecentraCorp contract\n@param _to is the address tokens are being minted to\n@param _amount is the amount of tokens being minted\n@dev this function is intended to be used with the proposal system*"
                  },
                  "functionSelector": "7563dd54",
                  "id": 1459,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferxDAI",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1454,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1459,
                        "src": "1201:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1453,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1456,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1459,
                        "src": "1222:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1200:38:6"
                  },
                  "returnParameters": {
                    "id": 1458,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1247:0:6"
                  },
                  "scope": 1541,
                  "src": "1179:69:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1460,
                    "nodeType": "StructuredDocumentation",
                    "src": "1254:323:6",
                    "text": "@notice newProposaln allows a user to create a proposal\n@param _target is the address this proposal is targeting\n@param _amount is a value amount associated with the call\n@param _proposalHash is an IPFS hash of a file representing a proposal\n@param _calldata is a bytes representation of a function call*"
                  },
                  "functionSelector": "b1050da5",
                  "id": 1473,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "newProposal",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1462,
                        "mutability": "mutable",
                        "name": "_target",
                        "nodeType": "VariableDeclaration",
                        "scope": 1473,
                        "src": "1612:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1464,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1473,
                        "src": "1645:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1463,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1645:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1466,
                        "mutability": "mutable",
                        "name": "_proposalHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1473,
                        "src": "1670:27:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1465,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1670:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1468,
                        "mutability": "mutable",
                        "name": "_calldata",
                        "nodeType": "VariableDeclaration",
                        "scope": 1473,
                        "src": "1707:22:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1467,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1707:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1602:133:6"
                  },
                  "returnParameters": {
                    "id": 1472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1471,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1473,
                        "src": "1762:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1470,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1762:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1761:9:6"
                  },
                  "scope": 1541,
                  "src": "1582:189:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1474,
                    "nodeType": "StructuredDocumentation",
                    "src": "1777:194:6",
                    "text": "@notice setQuorum allows the owner of the DAO(normally set as the the DAO itself) to change\nthe quorum used in voting\n@notice _quorum is the input quarum number being set*"
                  },
                  "functionSelector": "c1ba4e59",
                  "id": 1479,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setQuorum",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "_quorum",
                        "nodeType": "VariableDeclaration",
                        "scope": 1479,
                        "src": "1995:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1995:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1994:17:6"
                  },
                  "returnParameters": {
                    "id": 1478,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2020:0:6"
                  },
                  "scope": 1541,
                  "src": "1976:45:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1480,
                    "nodeType": "StructuredDocumentation",
                    "src": "2027:667:6",
                    "text": "@notice the vote function allows a DAO member to vote on proposals made to the DAO\n@param _ProposalID is the number ID associated with the particular proposal the user wishes to vote on\n@param  supportsProposal is a bool value(true or false) representing whether or not a member supports a proposal\n-true if they do support the proposal\n-false if they do not support the proposal\n@dev this function will trigger the _checkThreshold function which determines if enough members have voted to\nfire the executeProposal function.(this is temporarily removed due to what im assuming are the gas block limit)*"
                  },
                  "functionSelector": "c9d27afe",
                  "id": 1487,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "vote",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "_ProposalID",
                        "nodeType": "VariableDeclaration",
                        "scope": 1487,
                        "src": "2713:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1484,
                        "mutability": "mutable",
                        "name": "supportsProposal",
                        "nodeType": "VariableDeclaration",
                        "scope": 1487,
                        "src": "2734:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2734:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:44:6"
                  },
                  "returnParameters": {
                    "id": 1486,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2765:0:6"
                  },
                  "scope": 1541,
                  "src": "2699:67:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1488,
                    "nodeType": "StructuredDocumentation",
                    "src": "2772:397:6",
                    "text": "@notice setApprovedContract is a protected function that allows a successful proposal to grant\nprivledges to DecentraCorp contracts\n@param _contract is the address of the contract being approved\n@param _privledge is a number representing which privledge is being set\n@dev privledges:\n1. Minting\n2. Burning\n3. D-Score"
                  },
                  "functionSelector": "1268b7d2",
                  "id": 1495,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovedContract",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1490,
                        "mutability": "mutable",
                        "name": "_contract",
                        "nodeType": "VariableDeclaration",
                        "scope": 1495,
                        "src": "3203:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3203:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "_privledge",
                        "nodeType": "VariableDeclaration",
                        "scope": 1495,
                        "src": "3222:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3222:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3202:39:6"
                  },
                  "returnParameters": {
                    "id": 1494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3258:0:6"
                  },
                  "scope": 1541,
                  "src": "3174:85:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1496,
                    "nodeType": "StructuredDocumentation",
                    "src": "3265:415:6",
                    "text": "@notice freezeMember is a protected function used to allow for a DecentraCorp contract to freeze an account\nin the case of suspected fraud\n@param _member is the address of the member who is being frozen\n@dev this function is intended to be called by the audit contracts of phase two and will not play an active role in phase one\n@dev this function can also be used to un-freeze an account"
                  },
                  "functionSelector": "3e410717",
                  "id": 1501,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "freezeMember",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "_member",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "3707:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1497,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3707:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3706:17:6"
                  },
                  "returnParameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3732:0:6"
                  },
                  "scope": 1541,
                  "src": "3685:48:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1502,
                    "nodeType": "StructuredDocumentation",
                    "src": "3739:220:6",
                    "text": "@notice proxyMintDD is a protected function that allows an approved contract to mint DecentraDollar\n@param _to is the address the DecentraDollar is being minted to\n@param _amount is the amount being minted"
                  },
                  "functionSelector": "83ac74f9",
                  "id": 1509,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyMintDD",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1504,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "3985:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1503,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3985:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1506,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "3998:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1505,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3998:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3984:30:6"
                  },
                  "returnParameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4023:0:6"
                  },
                  "scope": 1541,
                  "src": "3964:60:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1510,
                    "nodeType": "StructuredDocumentation",
                    "src": "4030:219:6",
                    "text": "@notice proxyMintDS is a protected function that allows an approved contract to issue DecentraStock\n@param _to is the address the DecentraStock is being issued to\n@param _amount is the amount being issued"
                  },
                  "functionSelector": "82f4f5b4",
                  "id": 1517,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyMintDS",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1512,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1517,
                        "src": "4275:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4275:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1514,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1517,
                        "src": "4288:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4288:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4274:30:6"
                  },
                  "returnParameters": {
                    "id": 1516,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4313:0:6"
                  },
                  "scope": 1541,
                  "src": "4254:60:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1518,
                    "nodeType": "StructuredDocumentation",
                    "src": "4320:224:6",
                    "text": "@notice proxyBurnDD is a protected function that allows an approved contract to burn DecentraDollar\n@param _from is the address the DecentraDollar is being burned from\n@param _amount is the amount being burned"
                  },
                  "functionSelector": "d7c93180",
                  "id": 1525,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyBurnDD",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1523,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1520,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1525,
                        "src": "4570:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1519,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4570:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1522,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1525,
                        "src": "4585:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4585:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4569:32:6"
                  },
                  "returnParameters": {
                    "id": 1524,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4610:0:6"
                  },
                  "scope": 1541,
                  "src": "4549:62:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1526,
                    "nodeType": "StructuredDocumentation",
                    "src": "4617:222:6",
                    "text": "@notice proxyBurnDS is a protected function that allows an approved contract to burn DecentraStock\n@param _from is the address the DecentraStock is being burned from\n@param _amount is the amount being burned"
                  },
                  "functionSelector": "9c94f651",
                  "id": 1533,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxyBurnDS",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1528,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1533,
                        "src": "4865:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1527,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4865:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1530,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1533,
                        "src": "4880:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1529,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4880:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4864:32:6"
                  },
                  "returnParameters": {
                    "id": 1532,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4905:0:6"
                  },
                  "scope": 1541,
                  "src": "4844:62:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "51bcc28b",
                  "id": 1540,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "dScoreMod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "_add",
                        "nodeType": "VariableDeclaration",
                        "scope": 1540,
                        "src": "4931:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4931:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4930:14:6"
                  },
                  "returnParameters": {
                    "id": 1539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1538,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1540,
                        "src": "4963:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1537,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4963:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4962:6:6"
                  },
                  "scope": 1541,
                  "src": "4912:57:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1542,
              "src": "57:4914:6"
            }
          ],
          "src": "32:4940:6"
        },
        "id": 6
      },
      "contracts/interfaces/IDecentraDollar.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IDecentraDollar.sol",
          "exportedSymbols": {
            "IDecentraDollar": [
              1575
            ],
            "IERC20": [
              187
            ]
          },
          "id": 1576,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1543,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1544,
              "nodeType": "ImportDirective",
              "scope": 1576,
              "sourceUnit": 188,
              "src": "57:56:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1545,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 187,
                    "src": "144:6:7"
                  },
                  "id": 1546,
                  "nodeType": "InheritanceSpecifier",
                  "src": "144:6:7"
                }
              ],
              "contractDependencies": [
                187
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1575,
              "linearizedBaseContracts": [
                1575,
                187
              ],
              "name": "IDecentraDollar",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1552,
                  "name": "DD_Mined",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1551,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1548,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "172:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1547,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "172:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1550,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "185:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "171:30:7"
                  },
                  "src": "157:45:7"
                },
                {
                  "anonymous": false,
                  "id": 1558,
                  "name": "DD_Burned",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1557,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1554,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1558,
                        "src": "224:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "224:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1556,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1558,
                        "src": "237:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "237:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "223:30:7"
                  },
                  "src": "208:46:7"
                },
                {
                  "documentation": {
                    "id": 1559,
                    "nodeType": "StructuredDocumentation",
                    "src": "260:220:7",
                    "text": "@notice mintDD is a protected function only callable by the DecentraCore contract\n@param _to is the address the DecentraDollar is being minted to\n@param _amount is the amount of DecentraDollar being minted"
                  },
                  "functionSelector": "7daf440d",
                  "id": 1566,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mintDD",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1561,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1566,
                        "src": "501:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1560,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1563,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1566,
                        "src": "514:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "514:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:30:7"
                  },
                  "returnParameters": {
                    "id": 1565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "539:0:7"
                  },
                  "scope": 1575,
                  "src": "485:55:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1567,
                    "nodeType": "StructuredDocumentation",
                    "src": "546:229:7",
                    "text": "@notice  burnDD is a protected function only callable by the DecentraCore contract\n@param _from is the address the DecentraDollar is being burned from\n@param _amount is the amount of DecentraDollar being burned"
                  },
                  "functionSelector": "eb977815",
                  "id": 1574,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnDD",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1569,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1574,
                        "src": "796:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1568,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "796:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1571,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1574,
                        "src": "811:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "811:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "795:32:7"
                  },
                  "returnParameters": {
                    "id": 1573,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "836:0:7"
                  },
                  "scope": 1575,
                  "src": "780:57:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1576,
              "src": "115:724:7"
            }
          ],
          "src": "32:808:7"
        },
        "id": 7
      },
      "contracts/interfaces/IDecentraStock.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/IDecentraStock.sol",
          "exportedSymbols": {
            "IDecentraStock": [
              1603
            ],
            "IERC20": [
              187
            ]
          },
          "id": 1604,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1577,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1578,
              "nodeType": "ImportDirective",
              "scope": 1604,
              "sourceUnit": 188,
              "src": "57:56:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1579,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 187,
                    "src": "143:6:8"
                  },
                  "id": 1580,
                  "nodeType": "InheritanceSpecifier",
                  "src": "143:6:8"
                }
              ],
              "contractDependencies": [
                187
              ],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1603,
              "linearizedBaseContracts": [
                1603,
                187
              ],
              "name": "IDecentraStock",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 1586,
                  "name": "StockIssued",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1582,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1586,
                        "src": "174:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1581,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "174:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1584,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1586,
                        "src": "187:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1583,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "187:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "173:30:8"
                  },
                  "src": "156:48:8"
                },
                {
                  "documentation": {
                    "id": 1587,
                    "nodeType": "StructuredDocumentation",
                    "src": "210:216:8",
                    "text": "@notice issueStock is a protected function only callable by the DecentraCore contract\n@param _to is the address the DecentraStock is being issued to\n@param _amount is the amount of DecentraStock being issued"
                  },
                  "functionSelector": "8896637e",
                  "id": 1594,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "issueStock",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1589,
                        "mutability": "mutable",
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1594,
                        "src": "451:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1588,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "451:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1591,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1594,
                        "src": "464:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1590,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "464:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "450:30:8"
                  },
                  "returnParameters": {
                    "id": 1593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "489:0:8"
                  },
                  "scope": 1603,
                  "src": "431:59:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1595,
                    "nodeType": "StructuredDocumentation",
                    "src": "496:220:8",
                    "text": "@notice burnStock is a protected function only callable by the DecentraCore contract\n@param _from is the address the DecentraStock is being burned from\n@param _amount is the amount of DecentraStock being burned "
                  },
                  "functionSelector": "7468b9ba",
                  "id": 1602,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnStock",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1597,
                        "mutability": "mutable",
                        "name": "_from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1602,
                        "src": "740:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "740:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1599,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1602,
                        "src": "755:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "739:32:8"
                  },
                  "returnParameters": {
                    "id": 1601,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "780:0:8"
                  },
                  "scope": 1603,
                  "src": "721:60:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1604,
              "src": "115:668:8"
            }
          ],
          "src": "32:752:8"
        },
        "id": 8
      }
    }
  }
}
